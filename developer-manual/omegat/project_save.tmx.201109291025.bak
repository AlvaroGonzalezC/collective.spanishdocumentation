<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header
    creationtool="OmegaT"
    creationtoolversion="2.0.5_4"
    segtype="sentence"
    o-tmf="OmegaT TMX"
    adminlang="EN-US"
    srclang="EN-US"
    datatype="plaintext"
  >
  </header>
  <body>
    <tu>
      <tuv lang="EN-US">
        <seg>Developer Manual</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Manual de Desarrollo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plone Developer Manual is a comprehensive guide to Plone programming.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El manual de desarrollo de Plone es una guía completa para la programación en Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Managing projects with Buildout</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Administrando proyectos con Buildout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Learn about eggs, setuptools and dependency management, and how to use Buildout to set up a development environment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aprenda sobre huevos, setuptools y administración de dependencias, además cómo usar Buildout para configurar un ambiente de desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introducción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or: &quot;What's wrong with a plain old Zope instance&quot;?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>O: ¿Qué hay de malo con una vieja instancia de Zope?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial shows how to install Plone 3 into a &lt;e0&gt;buildout&lt;/e0&gt;, and how to use that buildout when working on a software project that extends Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este tutorial le muestra como instalar Plone 3 dentro de &lt;e0&gt;buildout&lt;/e0&gt;, y cómo usar ese buildout cuando se está trabajando en un proyecto de software que utilice Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A buildout is a self-contained environment where you can manage the dependencies (including Zope and Plone and any third-party products or libraries you need) and custom code for your project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un buildout es un ambiente contenido en por sí mismo donde puede administrar dependencias (incluyendo Zope, Plone, cualquier librería y productos de terceros) y códigos personalizados para su proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even if you are not planning on writing any custom code, the buildout approach is an easy way to install Plone in a robust, well-tested manner.  As of Plone 3.2, all of the installers are now buildout based.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Incluso si no planea en escribir código personalizado, el enfoque por buildout es una manera fácil de instalar Plone en una manera robusta y bien probada. En relación a Plone 3.2, todos los instaladores ahora se basan en buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to Plone 3.0, most developers and users who did not use a GUI installer, would set up a Zope instance, drop in a few products into the &lt;e0&gt;Products &lt;/e0&gt;folder, and be done with it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En versiones anteriores a Plone 3.0, los desarrolladores y usuarios que no utilizaban un instalador GUI, establecían una instancia Zope, situaban unos productos dentro de la carpeta de &lt;e0&gt;productos &lt;/e0&gt;, y listo. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, this approach has a few problems:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desgraciadamente esto enfoque tiene algunos problemas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plain old Zope instances are not very well equipped to deal with packages distributed as python &lt;e0&gt;eggs&lt;/e0&gt; or using setuptools &lt;e1&gt;namespace packages&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las instancias viejas de Zope nos están bien equipadas para lidiar con paquetes distribuidos como &lt;e0&gt;huevos&lt;/e0&gt; Python, ni para el uso de los &lt;e1&gt;paquetes namespace&lt;/e1&gt; de setuptools.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many new packages in Plone 3 are made in this way, and more and more third party modules will be as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muchos de los paquetes nuevos de Plone 3 están hechos de esta manera, igualmente cada vez más módulos de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without access to the metadata that is held in eggs, developers may find it too time-consuming or confusing to factor their work into multiple packages that are more re-usable, preferring monolithic products that are impossible to re-use outside Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin acceso a los metadatos que están almacenados en los huevos, los desarrolladores pueden encontrar demasiado lento o confuso factorizar su trabajo en varios paquetes que son más re-utilizables, prefiriendo productos monolíticos que son imposibles de re-usar fuera de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without any further tools, it is cumbersome to repeat a setup across different environments.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin ninguna herramientas adicional, es engorroso para repetir una configuración a través de entornos diferentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As eggs become more important, developers should look to employ more appropriate tools for managing their code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como los huevos se vuelven cada vez más importantes, los desarrolladores buscan emplear herramientas más apropiadas para administrar sus códigos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;zc.buildout&lt;/s0&gt;, hereafter referred to only as &quot;buildout&quot; is one such tool.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A partir de ahora &lt;s0&gt;zc.buildout&lt;/s0&gt; referida sólo como &quot;buildout&quot; es esa herramienta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial shows how to use buildout for day-to-day development as well as deployment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este tutorial muestra cómo usar buildout diariamente para el desarrollo así como para la implementación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More buildout documentation and background</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mas documentación e historia de buildout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildout was created by Jim Fulton of Zope Corporation, and is documented in depth at: &lt;a0&gt;http://buildout.org/&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Buildout fue creado por Jim Fulton de la corporación Zope, y está documentado en profundidad en: &lt;a0&gt;http://buildout.org/&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Packages, products and eggs</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Paquetes, productos y huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Looking at the core concepts in more detail</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Observando los conceptos de núcleo con más detalle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Terminology</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Terminología</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we begin, you should familiarize yourself with these terms:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de comenzar, debería familiarizarse con estos términos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope instance</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instancia de Zope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python path</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ruta Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Paquete Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Producto Zope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python egg</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Huevo Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python Package Index</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El índice de paquetes Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Python Package Index</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El índice de paquetes Python</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Namespace package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Paquete Namespace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The magic Products namespace</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los mágicos namespace de Productos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Zope finds a &quot;product&quot;, it will create an entry in &lt;e0&gt;Control_Panel/Product&lt;/e0&gt;s in the root of the ZMI, and run the &lt;e1&gt;initialize()&lt;/e1&gt; method, found in the product's root &lt;e2&gt;__init__.py&lt;/e2&gt; file, each time Zope starts up.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando Zope encuentra un &quot;producto&quot;, creará una entrada en &lt;e0&gt;Control_Panel/Products&lt;/e0&gt;en el root de la ZMI, y ejecutará el  método &lt;e1&gt;initialize()&lt;/e1&gt;, encontrado en el archivo &lt;e2&gt;__init__.py&lt;/e2&gt; root de productos, cada vez que Zope sea iniciado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not every package used in a Plone context needs to be a product, but &quot;productness&quot; is required for:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No es que cada paquete utilizado en un contexto Plone necesita ser un producto, pero una suerte de producto es requerida para:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenericSetup profiles</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Perfiles GenericSetup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skin directories being installed as layers in the &lt;e0&gt;portal_skins&lt;/e0&gt; tool (but &lt;e1&gt;not&lt;/e1&gt; for Zope 3-style browser views)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Directorios de skin instalados como capas en la herramienta  &lt;e0&gt;portal_skins&lt;/e0&gt; (pero &lt;e1&gt;no&lt;/e1&gt; para las vistas estilo explorador de Zope 3)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to create a product is to use Paster/ZopeSkel to create an egg-ready package in the &lt;e0&gt;Products.*&lt;/e0&gt; namespace using the &lt;e1&gt;basic_namespace&lt;/e1&gt; template:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La forma más fácil para crear un producto es usar Paster/ZopeSkel para crear un paquete de huevo ya listo en namespace de &lt;e0&gt;Products.*&lt;/e0&gt; utilizando la plantilla &lt;e1&gt;basic_namespace&lt;/e1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using buildout, create your package in the &lt;e0&gt;src &lt;/e0&gt;directory, and add references to it in the develop and instance/eggs sections of buildout.cfg:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está utilizando buildout, cree su paquete en el directorio &lt;e0&gt;src&lt;/e0&gt;, y agregue referencias a este en las secciones huevos/instancia de desarrollo de buildout.cfg:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run bin/buildout and you'll be set up to develop your egg-ready product in the &lt;e0&gt;src &lt;/e0&gt;directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ejecute bin/buildout y estará en posición de desarrollar un producto de huevo ya listo en el directorio &lt;e0&gt;src&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Turn it into a distribution egg when complete.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Conviertalo en un huevo de distribución cuando lo complete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to use packages (including egg-distributed ones) outside the &lt;e0&gt;Products &lt;/e0&gt;namespace/directory as Zope 2 products.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es posible utilizar paquetes (incluyendo aquellos huevos de distribución) fuera de  &lt;e0&gt;Products &lt;/e0&gt;namespace/directory as Zope 2 products.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many developers prefer this approach, feeling it unnatural to keep everything in a single, &quot;flat&quot; namespace.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muchos desarrolladores prefieren este enfoque, ya que no sienten que es correcto mantener todo en un &quot;plano&quot; y solo namespace.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra steps are required for this.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pasos extras son requeridos para esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to Zope 2.10.4, this is also required for products in the &lt;e0&gt;Products &lt;/e0&gt;namespace</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para versiones anteriores a Zope 2.10.4, esto también es requerido para productos en el namespace &lt;e0&gt;Products &lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We must add a line like the following to the package's &lt;e0&gt;configure.zcml&lt;/e0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Debemos agregar un línea como la siguiente a &lt;e0&gt;configure.zcml&lt;/e0&gt; de paquete:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secondly, it is important to realize that packages outside the &lt;e0&gt;Products &lt;/e0&gt;namespace are not automatically detected when Zope starts up.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego es importante darse cuenta que los paquetes fuera del namespace &lt;e0&gt;Products &lt;/e0&gt; no son automáticamente detectados cuando Zope se inicia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If they contain &lt;e1&gt;configure.zcml &lt;/e1&gt;files (as most packages will do), this must be explicitly included from somewhere.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si estos contienen archivos &lt;e1&gt;configure.zcml &lt;/e1&gt; (como la mayoría de los paquetes), este será específicamente incluido desde algún sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another package's configure.zcml file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otro archivo configure.zcml de paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope's site.zcml, the root of all ZCML files, which is found in the &lt;e0&gt;etc &lt;/e0&gt;directory in the instance home.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El site.zcml de Zope, el root de todos los archivos ZCML, el cual se puede encontrar en el directorio &lt;e0&gt;etc &lt;/e0&gt;en el inicio (home) de la instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A ZCML &lt;e0&gt;slug&lt;/e0&gt;, a one-liner created in the zope instance's &lt;e1&gt;etc/package-includes &lt;/e1&gt;directory, with a name like &lt;e2&gt;my.package-configure.zcml&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un &lt;e0&gt;slug&lt;/e0&gt; ZCML, es una línea creada en el directorio de la instancia de Zope &lt;e1&gt;etc/package-includes &lt;/e1&gt;, con un nombre como &lt;e2&gt;my.package-configure.zcml&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In all cases, the syntax is the same:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En cualquier caso, la sintaxis en la misma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have &lt;e0&gt;meta.zcml&lt;/e0&gt; or &lt;e1&gt;overrides.zcml&lt;/e1&gt; files, you can add &lt;e2&gt;&lt;include /&gt;&lt;/e2&gt; directives for these as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted tiene los archivos &lt;e0&gt;meta.zcml&lt;/e0&gt; o &lt;e1&gt;overrides.zcml&lt;/e1&gt;, puede añadir directivas &lt;e2&gt;&lt;include /&gt;&lt;/e2&gt; para estos también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using slugs, it must be named accordingly, e.g. &lt;e3&gt;my.package-meta.zcml&lt;/e3&gt; or &lt;e4&gt;my.package-overrides.zcml&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esta usando slugs, debe nombrarlas apropiadamente, ejemplo, &lt;e3&gt;my.package-meta.zcml&lt;/e3&gt; o &lt;e4&gt;my.package-overrides.zcml&lt;/e4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A slug can not contain more than one line.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una slug no puede contener más de una línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later in this tutorial, we will show how buildout can manage slugs for us automatically.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más adelante en este tutorial, vamos a mostrar cómo buildout puede gestionar slugs para nosotros de forma automática.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prerequisites</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Prerrequisitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A few things you need before we can get started</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Algunas cosas que necesita saber antes que empecemos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we can create a buildout to manage Zope and Plone, there are a few prerequisites to take care of.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de que podamos crear un buildout para administrar de Zope y Plone, hay algunos prerrequisitos que hay que atender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Plone 3.2, all of the Plone installers are buildout based.  You can get the latest &lt;a0&gt;installer&lt;/a0&gt; and run it to have a working buildout without having to follow these steps.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A partir de Plone 3.2, todos los instaladores de Plone son basados en buildout. Puede obtener el último instalador y ejecutarlo, y así obtener buildout en funcionamiento sin tener que seguir estos pasos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, these steps are still valid if you want to create the buildout manually with ZopeSkel.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No obstante, estos pasos siguen siendo validos si desea crear el buildout manualmente con ZopeSkel. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, you will need an appropriate Python interpreter, if you do not have one already:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo primero que necesita es un interpretador Python (Python interpreter) apropiado, si todavía no tiene uno:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install &lt;a0&gt;Python 2.4 &lt;/a0&gt;for your platform, and add it to your system &lt;e1&gt;PATH&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instale &lt;a0&gt;Python 2.4 &lt;/a0&gt;para su plataforma, y agréguelo a su &lt;e1&gt;PATH&lt;/e1&gt; (Ruta) de sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is easiest if Python 2.4 is what you get when you type &lt;e2&gt;python -V&lt;/e2&gt; on a command line.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es muy recomendable si obtiene Python 2.4 cuando escribe &lt;e2&gt;python -V&lt;/e2&gt; en una línea de comando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you're using Python 2.4 and not 2.5, since Plone 3.x doesn't support Python 2.5 or later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de que está utilizando Python 2.4 y no 2.5, ya que Plone 3.x no es compatible con Python 2.5 o posterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might need to type &lt;e3&gt;python2.4&lt;/e3&gt; instead of just &lt;e4&gt;python&lt;/e4&gt; when running some of the following commands.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tal vez tenga que escribir &lt;e3&gt;python2.4&lt;/e3&gt; en vez de solo &lt;e4&gt;python&lt;/e4&gt; cuando esté ejecutando alguno de los siguientes comandos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you installed Python using an operating system package (e.g. an RPM), make sure you get the development package (e.g. python-devel) as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted instaló Python mediante un paquete de sistema operativo (Por ejemplo RPM), asegúrese de obtener el paquete de desarrollo (Por ejemplo python-devel) también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes Python header files that we will use later to compile Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto incluye los archivos de cabecera de Python que vamos a utilizar más adelante para compilar Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you installed from source, or used the Python Windows installer, you should already have these.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si ha instalado desde la fuente, o utilizó el instalador Python para Windows, usted ya debe tener estos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install &lt;a0&gt;PIL&lt;/a0&gt;, the Python Imaging Library into this Python interpreter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instale &lt;a0&gt;PIL&lt;/a0&gt;, la Python Imaging Library (librería Python de imágenes) dentro del interpretador Python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install &lt;a0&gt;setuptools&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instale &lt;a0&gt;setuptools&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using Linux and your distributioni doesn't provide a package for setuptools, download &lt;a1&gt;ez_setup.py&lt;/a1&gt; and run it with:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esta utilizando Linux y su distributioni no proporciona un paquete para setuptools, descargue &lt;a1&gt;ez_setup.py&lt;/a1&gt; y ejecútelo con:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will download and install setuptools and the &lt;e0&gt;easy_install &lt;/e0&gt;script.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto descargará e instalará setuptools y el script &lt;e0&gt;easy_install &lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Watch the console output to understand where &lt;e1&gt;easy_install&lt;/e1&gt; is installed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea la salida de la consola para entender donde &lt;e1&gt;easy_install&lt;/e1&gt; es instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is not in your system &lt;e2&gt;PATH&lt;/e2&gt;, you should add this directory to the path as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si este no se encuentra en su &lt;e2&gt;PATH&lt;/e2&gt; de sistema, debería agregar este directorio a la ruta también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, use &lt;e0&gt;easy_install &lt;/e0&gt;to get &lt;e1&gt;ZopeSkel&lt;/e1&gt;, a collection of skeleton templates for Zope and Plone development:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente, use &lt;e0&gt;easy_install &lt;/e0&gt;para obtener &lt;e1&gt;ZopeSkel&lt;/e1&gt;, una colección de plantillas esqueletos o bases para el desarrollo de Zope y Plone:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will get &lt;e0&gt;Paste Script&lt;/e0&gt; and various other dependencies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con esto se obtiene el  &lt;e0&gt;Script Paste&lt;/e0&gt; y otras dependencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Linux note: If you're installing setuptools and ZopeSkel system-wide, you will probably need to become superuser or use sudo, if you're not using virtualenv or similar.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nota para Linux: si está instalando setuptools y ZopeSkel para todo el sistema, probablemente tendrá que convertirse en superusuario o usar sudo, si no está utilizando virtualenv o algo similar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But please note that bin/buildout (introduced later) should never be run as root.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pero por favor note que bin/buildout (introducido más tarde) jamas debería ejecutarse como root.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you really can't avoid running this script as root, don't forget to change the owner of created files (chown -R) so the unprivileged user that runs the zope instance will be able to read those files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si realmente no puede evitar la ejecución de este script como root, no se olvide de cambiar el propietario de los archivos creados (chown -R) para que el usuario sin privilegios que ejecuta la instancia Zope será capaz de leer los archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you added the Python console scripts directory (where &lt;e0&gt;easy_install&lt;/e0&gt; was placed) to your system path, you should now be able to run the &lt;e1&gt;paster &lt;/e1&gt;command.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted agregó el directorio de consola para scripts de Python (donde &lt;e0&gt;easy_install&lt;/e0&gt; fue ubicado) a su ruta de sistema, ahora debería estar en la capacidad de ejecutar el comando &lt;e1&gt;paster&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can test it with:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo puede probar con:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ paster create --list-templates
Available templates:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>$ paster create --list-templates
Plantillas disponibles:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>basic_namespace:          A project with a namespace package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>basic_namespace:          Un proyecto con un paquete namespace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>basic_package:            A basic setuptools-enabled package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>basic_package:            Un paquete setuptools-habiliato básico</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>basic_zope:               A Zope project</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>basic_zope:               Un proyecto Zope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nested_namespace:         A project with two nested namespaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>nested_namespace:         Un proyecto con dos namespaces &quot;nested&quot; (anidados)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone:                    A Plone project</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone:                    Un proyecto Plone</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone2.5_theme:           A Theme for Plone 2.5</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone2.5_theme:           Un tema para Plone 2.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone2_theme:             A Theme for Plone 2.1 &amp; Plone 2.5</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone2_theme:            Un tema para Plone 2.1 &amp; Plone 2.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone3_buildout:          A buildout for Plone 3 projects</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone3_buildout:          Un buildout para proyectos Plone 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone3_theme:             A Theme for Plone 3.0</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone3_theme:             Un tema para Plone 3.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plone_app:                A Plone App project</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>plone_app:                Un proyecto de aplicación Plone</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your output may differ slightly, but make sure you have the &lt;e0&gt;plone3_buildout&lt;/e0&gt; and &lt;e1&gt;plone &lt;/e1&gt;templates at least.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Su salida puede ser un poco diferente, pero asegúrese que tiene las, por lo menos, las plantillas &lt;e0&gt;plone3_buildout&lt;/e0&gt; y &lt;e1&gt;plone&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional installation steps for Windows</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pasos adicionales para la instalación en Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using Windows, there are a few more things you need to do.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está utilizando Windows, hay unas cuantas cosas más que tiene que hacer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, get and install the &lt;a0&gt;Python Win32 extensions&lt;/a0&gt; for Python 2.4.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar obtenga e instale las &lt;a0&gt;extensiones Win32 de Python&lt;/a0&gt; para Python 2.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you intend to compile Zope yourself, rather than using a binary installer, or if you ever need to compile an egg with C extensions, you will need the &lt;a0&gt;mingw32 compiler&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si intenta compilar Zope por sí mismo, en lugar de instalar un instalador binario, o si en algún momento necesita compilar un huevo con extensiones C, necesitará entonces el &lt;a0&gt;compilador mingw32&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you choose the &quot;base&quot; and &quot;make&quot; modules at a minimum when the installer asks.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de escoger los módulos &quot;base&quot; y &quot;make&quot; como mínimo cuando el instalador pregunte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this installs into &lt;e1&gt;C:\MingW32&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto instala, por defecto, en &lt;e1&gt;C:\MingW32&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside the installation directory, there will be a bin directory, e.g. &lt;e2&gt;C:\MingW32\bin&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Dentro del directorio de instalación habrá un directorio bin, por ejemplo,  &lt;e2&gt;C:\MingW32\bin&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add this to your system &lt;e3&gt;PATH&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agréguelo a su &lt;e3&gt;PATH&lt;/e3&gt; de sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you need to configure Python's &lt;e0&gt;distutils &lt;/e0&gt;package to use the mingw32 compiler.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último necesita configurar el paquete de Python &lt;e0&gt;distutils &lt;/e0&gt;para así utilizar el compilador mingw32.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a file called &lt;e1&gt;distutils.cfg&lt;/e1&gt; in the directory &lt;e2&gt;C:\Python24\Lib\distutils&lt;/e2&gt; (presuming Python was installed in &lt;e3&gt;C:\Python24&lt;/e3&gt;, as is the default).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cree un archivo llamado &lt;e1&gt;distutils.cfg&lt;/e1&gt; en el directorio &lt;e2&gt;C:\Python24\Lib\distutils&lt;/e2&gt; (asumiendo que Python fue instalado en &lt;e3&gt;C:\Python24&lt;/e3&gt;, ya que este directorio es el predeterminado).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edit this with Notepad, and add the following:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Edite esto con Bloc de notas, y añada lo siguiente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a buildout for your project</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Creando un buildout para su proyecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to create a new buildout for a project, adding Plone and other third party products as dependencies</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo crear un nuevo buildout para su proyecto, agregando Plone y otros productos de terceros como dependencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are now ready to create a new buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya estamos listos para crear un nuevo buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &quot;buildout&quot; is a directory containing all the parts that make up a project, including a Zope instance, the Plone sources, custom configuration options, and your our project's source code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &quot;buildout&quot; es un directorio que contiene todos los elementos que componen un proyecto, incluyendo una instancia de Zope, las fuentes de Plone, opciones de configuración personalizadas, y el código de la fuente de su proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create one like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cree uno como este:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will ask a series of questions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto arrojará una serie de preguntas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use an existing installation of Zope rather than have buildout download and compile one for you, specify an absolute path as the &lt;e0&gt;zope2_install&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si desea utilizar una instalación existente de Zope en lugar de que buildout descargue y compile una por usted, especifique una ruta absoluta como la &lt;e0&gt;zope2_install&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, if you do not want buildout to download the core Plone products, you can point it to an existing directory containing all the products (it will still download Plone 3's eggs, but as we will see later, it is possible to share an eggs directory among multiple buildouts).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Del mismo modo, si usted no quiere que buildout descargue los principales (core) productos de Plone, se puede apuntar a un directorio que contiene todos los productos (aún así se descargarán los huevos de Plone 3 como veremos más adelante, es posible compartir un directorio de huevos entre múltiples buildouts).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need to enter a Zope administrator username and password, and you may want to turn debug mode and verbose security &lt;e1&gt;on &lt;/e1&gt;during development.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted tendrá que introducir un administrador Zope con su nombre de usuario y contraseña, y pueda que quiera activar &lt;e1&gt; en &lt;/e1&gt; el modo de depuración y las seguridad verbosa durante el desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, enter the newly created myproject directory, and run the buildout bootstrap script.  NOTE: Python 2.4 is currently required to Plone 3.x:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora introduzca el nuevo directorio myproject creado, y ejecute el script bootstrap de buildout. NOTA: Python 2.4 actualmente es requerido para Plone 3.x:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will create a number of directories and scripts and dowload the latest version of the zc.buildout egg.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto creará un número de directorios y scripts y descargará la última versión del huevo zc.buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This step should be needed only once.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este paso sólo debería necesitarse una vez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get started straight away, run:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para comenzar inmediatamente, ejecute:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This reads the generated buildout.cfg file and executes its various &quot;parts&quot;, setting up Zope, creating a Zope instance, downloading and installing Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este lee el archivo buildout.cfg generado y ejecuta sus diferentes &quot;partes&quot;, configurando Zope, creando una instancia Zope, descargando e instalando Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will explain this file in more detail shortly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a explicar este archivo en más detalle en breve.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need to run &lt;e0&gt;./bin/buildout&lt;/e0&gt; again each time you change &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Necesitará ejecutar &lt;e0&gt;./bin/buildout&lt;/e0&gt; nuevamente cada vez que cambie &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do not want buildout to go online and look for updated versions of eggs or download other archives, you can run it in non-updating, offline mode, with;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted no quiere que buildout busque en línea por versiones actualizadas de huevos o descargue otros archivos, puede ejecutarlo para no-actualizar, en el modo para trabajar sin conexión, mediante:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start Zope in foreground and debug mode, run:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para iniciar Zope en primer plano y en modo de depuración, ejecute:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;instance &lt;/e0&gt;script is analogous to &lt;e1&gt;zopectl &lt;/e1&gt;as found in a standard Zope instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El script &lt;e0&gt;instance &lt;/e0&gt;es análogo a &lt;e1&gt;zopectl &lt;/e1&gt;como se encuentra en una instancia de Zope estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;e2&gt;./bin/instance start&lt;/e2&gt; to run Zope in daemon mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>You can use &lt;e2&gt;./bin/instance start&lt;/e2&gt; para ejecutar Zope como modo tipo servicio (demonio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can also be used to run tests:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También puede usarse para ejecutar pruebas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ejecutando:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is equivalent to &lt;e0&gt;bin/instance fg&lt;/e0&gt;, but does not implicitly turn on debug mode but respects the &lt;e1&gt;debug-mode&lt;/e1&gt; setting in &lt;e2&gt;buildout.cfg&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>es equivalente a &lt;e0&gt;bin/instance fg&lt;/e0&gt;, pero no, de  forma implícita, activa el modo de depuración sino que respeta la configuración de &lt;e1&gt;debug-mode&lt;/e1&gt; en &lt;e2&gt;buildout.cfg&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful to run Zope in non-development mode with daemon-control programs like supervisord.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede ser útil para ejecutar Zope en modo de no-desarrollo con los programas control-demonio como supervisord.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once your buildout installation is up and running, you will still need to install a Plone site.  Log in to the Zope Management Interface (ZMI) and from &quot;select type to add...&quot; choose Plone Site.  Fill in the required details and submit.  Now you have a Plone site at the ID that you specified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez que su instalación buildout esté en marcha, todavía tendrá que instalar un sitio Plone. Iniciar para entrar en Interfaz de Administración de Zope (ZMI) y desde la selección de tipos para agregar, escoja un sitio Plone. Llene los datos solicitados y envíe. Ahora usted tiene un sitio Plone con la ID que haya especificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directories in the buildout</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Directorios en el buildout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we dive into buildout.cfg, let us take a quick look at the directories that buildout has created for us:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de sumergirnos en el buildout.cfg, echemos un vistazo a los directorios que buildout ha creado por nosotros:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains various executables, including the &lt;e0&gt;buildout &lt;/e0&gt;command, and the &lt;e1&gt;instance &lt;/e1&gt;Zope control script.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene varios ejecutables, incluyendo el comando &lt;e0&gt;buildout &lt;/e0&gt;, y el script de contro de Zope &lt;e1&gt;instance&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains eggs that buildout has downloaded.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene los huevos que buildout ha descargado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These will be explicitly activated by the control scripts in the &lt;e0&gt;bin/&lt;/e0&gt; directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos se activan de forma explícita por los scripts de control en el directorio &lt;e0&gt;bin/&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains non-egg downloads, such as the Zope source code archive.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene las descargas no-huevo, como el archivo del código fuente de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the log files (in &lt;e0&gt;var/log/&lt;/e0&gt;) and the file storage ZODB data (in &lt;e1&gt;var/filestorage/Data.fs&lt;/e1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene los archivos de registro (en &lt;e0&gt;var/log/&lt;/e0&gt;) y los datos ZODB (en &lt;e1&gt;var/filestorage/Data.fs&lt;/e1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildout will never overwrite these.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Buildout jamás sustituirá estos.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to import a .zexp file, place it in the &lt;e3&gt;var/instance/imports&lt;/e3&gt; folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si desea importar un archivo .zexp, ubiquelo en la carpeta &lt;e3&gt;var/instance/imports&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Previously one had to put that file into &lt;e0&gt;parts/instance/import&lt;/e0&gt;, but this folder gets wiped and regenerated when running &lt;e1&gt;bin/buildout&lt;/e1&gt;, so the import location was changed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Anteriormente se tenía que poner el archivo en &lt;e0&gt;parts/instance/import&lt;/e0&gt;, pero esta carpeta se limpia y se regenera cuando se ejecuta &lt;e1&gt;bin/buildout&lt;/e1&gt;, así que la ubicación de importación se ha cambiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initially empty.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Inicialmente vacío.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can place your own development eggs here and reference them in &lt;e0&gt;buildout.cfg&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede ubicar sus huevos de desarrollo aquí y hacer referencia a ellos en &lt;e0&gt;buildout.cfg&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More on that later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más sobre esto posteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is analogous to a Zope instance's &lt;e0&gt;Products/&lt;/e0&gt; directory (note the difference in capitalisation).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es análogo al directorio &lt;e0&gt;Products/&lt;/e0&gt; de la instancia de Zope (note la diferencia en la capitalización).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are developing any old-style Zope 2 products, place them here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted está desarrollando productos de viejo estilo Zope 2, coloque estos aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will see how buildout can automatically download and manage archives of products, but if you want to extract a product dependency manually, or check one out from Subversion, this is the place to do so.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a ver cómo buildout puede descargar automáticamente y administrar archivos de productos, pero si usted desea extraer una dependencia de producto de forma manual, o sacar uno fuera de Subversion, este es el lugar para hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains code and data managed by buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene código y datos administrados por buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our case, it will include the local Zope installation, a buildout-managed Zope instance, and Plone's source code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En nuestro caso, incluirá la instalación de Zope local, una instancia Zope  de administración-buildout, y el código fuente de Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, you should not modify anything in this directory, as buildout may overwrite your changes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Generalmente, no debe modificar nada en este directorio, ya que buildout puede sobrescribir sus cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can check in a buildout directory to a source code repository to share it among developers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede registrar un directorio de buildout a un repositorio de código fuente para compartirlo entre desarrolladores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you should ignore the directories bin/, eggs/, downloads/, var/, and parts/.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso ignore los directorios bin/, eggs/, downloads/, var/, y parts/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each developer can run &lt;e0&gt;bootstrap.py&lt;/e0&gt; to get these back, and will normally need local copies anyway.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada desarrollador puede ejecutar &lt;e0&gt;bootstrap.py&lt;/e0&gt; para conseguir estos de vuelta, y normalmente necesitará copias locales de todos modos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All your configuration should be in the buildout.cfg file, and all custom code in src/ or products/.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Toda su configuración debería estar en el archivo buildout.cfg, y todo código personalizado en src/ o products/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding buildout.cfg</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Comprendiendo buildout.cfg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to manage the main buildout configuration file</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como administrar el archivo de configuración principal de buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Important note:&lt;e1&gt; &lt;/e1&gt;&lt;/s0&gt;This document applies to Plone 3.2 onwards.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;Nota importante:&lt;e1&gt; &lt;/e1&gt;&lt;/s0&gt;Este documento aplica a versiones de Plone 3.2 en adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone versions prior to 3.2 the vanilla buildout.cfg file was significatively different because Plone wasn't fully eggified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En las versiones anteriores a Plone 3.2, el archivo &quot;vainilla&quot; buildout.cfg  era significativamente diferente ya que Plone no trabaja completamente bajo las estructuras de huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;buildout.cfg&lt;/e0&gt; is the most important file in your new buildout environment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;buildout.cfg&lt;/e0&gt; es el archivo más importante en nuevo entorno de buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how it looks:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así es como luce:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>zopepy

# Change the number here, and in find-links below, to change the version of
# Plone being used
extends = http://dist.plone.org/release/3.3.5/versions.cfg
versions = versions

# Add additional egg download sources here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>zopepy

# Cambie el número aquí, y en &quot;find-links&quot; más abajo para cambiar la versión de
# Plone que está utilizando
extends = http://dist.plone.org/release/3.3.5/versions.cfg
versions = versions

# Agregue fuentes de descarga de huevo adicionales aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dist.plone.org contains archives
# of Plone packages.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>dist.plone.org contiene archivos
# de paquetes Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

[zope2]
recipe = plone.recipe.zope2install
url = ${versions:zope2-url}

# Use this section to download additional old-style products.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Haga referencia aquí a cualquier huevo que esté desarrollando, un por línea 
# ejemplo: develop = src/my.package
develop =

[zope2]
recipe = plone.recipe.zope2install
url = ${versions:zope2-url}

# Use esta sección para descargar productos viejo-estilo adicionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Liste cualquier número de URL para los tarballs de producto bajo URL (separadas
# con espacios en blanco, o romperlas sobre varias líneas, con líneas subsecuentes  
# con sangría).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL, 
# normally with a .tar.gz suffix or similar) under 'nested-packages'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si cualquiera de los archivos contiene varios productos en un directorio
# de nivel-superior, liste los nombres de los archivos (esto es, la última parte del URL, 
# normalmente con un sufijo .tar.gz o similar) bajo &quot;paquetes-anidados&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Si cualquier archivo extrae al directorio de producto con sufijo de versión, liste
# el nombre de archivo bajo &quot;version-suffix-packages&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages = 

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
# comment the following two options in production sites
debug-mode = on
verbose-security = on

# If you want Zope to know about any additional eggs, list them here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages = 

[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
# comente las siguientes dos opciones en sitios de producción
debug-mode = on
verbose-security = on

# Si quiere que Zope sepa sobre cualquier huevo adicional, liste estos aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Esto debería incluir cualquiera de los huevos de desarrollo que ha listado en &quot;develop-eggs&quot; más arriba 
# ejemplo: eggs = Plone my.package
eggs =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>${buildout:eggs}

# Si desea registrar slugs ZCML para cualquier paquete, liste estos aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># e.g. zcml = my.package my.other.package
zcml = 

products =</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># ejemplo: zcml = my.package my.other.package
zcml = 

products =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let us walk through this file step-by-step:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Analicemos este archivo parte por parte:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main [buildout] section</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección principal [buildout]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;[buildout]&lt;/e0&gt; section is the starting point for the file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección &lt;e0&gt;[buildout]&lt;/e0&gt; es el punto de partida de este archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It lists a number of &quot;parts&quot;, which are configured in separate sections later in the file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lista el número de &quot;parts&quot; (partes), la cuales se configuran en distintas secciones del archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;e1&gt;part &lt;/e1&gt;has an associated &lt;e2&gt;recipe&lt;/e2&gt;, which is the name of an egg that knows how to perform a particular task, e.g. build Zope or create a Zope instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada &lt;e1&gt;part (parte) &lt;/e1&gt;tiene una &lt;e2&gt;receta&lt;/e2&gt; asociada, que es el nombre de un huevo que sabe cómo llevar a cabo una tarea determinada, por ejemplo, construir Zope o crear una instancia de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A recipe typically takes a few configuration options.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una receta típicamente toma algunas opciones de configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our global settings are as follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nuestros valores globales son los siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies that the parts &lt;e0&gt;zope2&lt;/e0&gt;, &lt;e1&gt;productdistros&lt;/e1&gt;, &lt;e2&gt;instance &lt;/e2&gt;and &lt;e3&gt;zopepy &lt;/e3&gt;will be run, in that order.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto especifica que las partes &lt;e0&gt;zope2&lt;/e0&gt;, &lt;e1&gt;productdistros&lt;/e1&gt;, &lt;e2&gt;instance &lt;/e2&gt;y &lt;e3&gt;zopepy &lt;/e3&gt;se ejecutaran en ese orden.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, we tell buildout that it can search one of a number of URLs when it is looking for eggs to download.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego podemos decirle al buildout que puede buscar una de un número de URL, cuando esté buscando huevos para descargar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, it will always search the Cheese Shop.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además, siempre va a buscar en la &quot;Cheese Shop&quot;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that configuration entries are commonly split into multiple lines.  For this to work, all lines after the first must begin with &lt;s0&gt;at least 4 spaces&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que las entradas de configuración se suelen dividir en varias líneas. Para que esto funcione, todas las líneas después de la primera deben comenzar con &lt;s0&gt;por lo menos 4 espacios&lt;/s0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, we can list any eggs that buildout should download and install for us.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación, podemos enumerar los huevos que buildout debe descargar e instalar para nosotros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may include version specifications.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede incluir las especificaciones de versión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if you want sqlalchemy 0.3,  but not 0.4, you could list;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, si desea sqlalchemy 0.3, pero no 0.4 podría listar;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please note that you will need the Python Imaging Library (PIL) for Plone to work.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Dese cuenta que necesita la librería Python de imágenes (PIL - Python Imaging Library) para que Plone funcione.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example assumes that you have this library already installed and available from your Python interpreter, but otherwise you can install a slightly modified (to workaround some common problems) version from the &quot;thirdparty&quot; Plone repository in your buildout adding its name to the eggs list:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este ejemplo asume que usted tiene esta librería ya instalada y disponible en el interpretador Python, pero en caso contrario puede instalar una versión ligeramente modificada (para solucionar algunos problemas comunes) del repositorio de Plone de &quot;terceros&quot; en su buildout añadiendo su nombre a la lista de huevos :</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And the full path to the package in the find-links, e.g.:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Y la ruta completa al paquete en el find-links, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, we can list development eggs, by specifying a directory where the egg is extracted in source format.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente, podemos listar los huevos de desarrollo, mediante la especificación de un directorio donde se extrae el huevo en el formato de fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This presumes that there is an egg called &lt;e0&gt;my.package&lt;/e0&gt; in the &lt;e1&gt;src/ &lt;/e1&gt;directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se asume que hay un huevo llamado &lt;e0&gt;my.package&lt;/e0&gt; en el directorio &lt;e1&gt;src/ &lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will learn how to create such eggs a little later in this tutorial.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aprenderemos a cómo crear esos huevos un poco más adelante en este tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how we must also list my.package as an actual egg dependency: development eggs are not automatically added to the &quot;working set&quot; of eggs that are installed for Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Observe cómo debemos listar my.package como una dependencia de huevo: los huevos de desarrollo no se agregan automáticamente al &quot;conjunto de trabajo&quot; de huevos que se instalan para Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;extends&lt;/e0&gt; and &lt;e1&gt;versions&lt;/e1&gt; lines</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las líneas &lt;e0&gt;extends&lt;/e0&gt; y &lt;e1&gt;versions&lt;/e1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This part was introduced with Plone 3.2.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta parte fue introducida con Plone 3.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It references a remote file where the version of each needed package is specified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hace referencia a un archivo remoto, donde se especifica la versión de cada paquete necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check that remote file to see yourself how these dependencies are specified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Compruebe ese archivo remoto para que vea cómo estas dependencias son especificadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Change the number here, and in find-links below, to change the version of
# Plone being used
extends = http://dist.plone.org/release/3.3.5/versions.cfg
versions = versions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Cambie el número aquí, y en find-links más abajo para cambiar la versión de
# Plone que se está utilizando
extends = http://dist.plone.org/release/3.3.5/versions.cfg
versions = versions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use a local file instead of a remote one to be able to work offline, download it to your buildout directory and reference it like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el caso de que desee utilizar un archivo local en lugar de uno remoto para poder trabajar sin conexión, descarguelo al directorio de buildout y haga una referencia de esta manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The [zope2] section</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección [zope2]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This part builds Zope 2, using &lt;a0&gt;plone.recipe.zope2install&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta parte construye Zope 2, usando &lt;a0&gt;plone.recipe.zope2install&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you specified an existing Zope installation, you will not have this part.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si ha especificado una instalación de Zope existente, usted no tendrá esta parte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, it looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De lo contrario, luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we reference the download location for Zope as present in the versions file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí, hacemos referencia a la ubicación de descarga para Zope como se presenta en el archivo de versiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ensures that we always get the recommended version of Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto asegura que siempre tengamos la versión recomendada de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could specify a download URL manually instead, if you wanted to use a different version of Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por otra parte usted puede especificar una dirección URL de descarga de forma manual, si desea utilizar una versión diferente de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the recipe is run, Zope 2 is installed in &lt;e0&gt;parts/zope2&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando la receta se ejecuta, Zope 2 es instalado en &lt;e0&gt;parts/zope2&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Zope software home becomes &lt;e1&gt;parts/zope2/lib/python&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El software de inicio (home) de Zope se convierte en &lt;e1&gt;parts/zope2/lib/python&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The [productdistros] section</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección [productdistros]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This uses the &lt;a0&gt;plone.recipe.distros &lt;/a0&gt;recipe, which is able to download distributions (archives) of Zope 2 style products and make them available to Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto usa la receta &lt;a0&gt;plone.recipe.distros &lt;/a0&gt;, las cual puede descargar distribuciones (archivos) de productos estilo Zope 2 y los hace disponibles para Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is empty to begin with:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Está vacío, para empezar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can list any number of downloads.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, puede listar cualquier cantidad de descargas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The recipe is also able to deal with archives that contain a single top-level directory that contains a bundle of actual product directories (&lt;e0&gt;nested-packages&lt;/e0&gt;), or packages that have a version number in the directory name and thus need to be renamed to get the actual product directory (&lt;e1&gt;version-suffix-packages&lt;/e1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta receta también está en la capacidad de lidiar con archivos que contienen un directorio de nivel-superior que a su vez contiene un bulto de directorios de archivos (&lt;e0&gt;paquetes-anidados&lt;/e0&gt;), o paquetes que tienen un número de versión en el  nombre del directorio y por lo tanto necesitan ser renombrados para obtener el directorio de producto (&lt;e1&gt;version-suffix-packages&lt;/e1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the following distributions:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Considere las siguientes distribuciones:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># A typical distribution 
ExampleProduct-1.0.tgz</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># A distribución típica 
ExampleProduct-1.0.tgz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>|- (product code)

# A version suffix distribution
AnotherExampleProduct-2.0.tgz</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>|- (product code)

# Una distribución del sufijo de versión
AnotherExampleProduct-2.0.tgz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>|- (product code)

# A nested package distribution
ExampleProductBundle-1.0.tgz</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>|- (product code)

# Una distribución de paquete anidado
ExampleProductBundle-1.0.tgz</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is what the part would look like if we try to install the three distributions above:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así es como la parte se vería como si tratáramos de instalar las tres distribuciones anteriores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify multiple downloads on separate lines.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede especificar varias descargas en líneas separadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the recipe is run, the product directories for downloaded products are found in &lt;e0&gt;parts/productdistros&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando la receta se ejecuta, los directorios de productos de los productos descargados se encuentran en &lt;e0&gt;parts/productdistros&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The [instance] section</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección [instance]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The instance section pulls it all together: It configures a Zope instance using the &lt;a0&gt;plone.recipe.zope2instance &lt;/a0&gt;script.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección de instancia coloca todo junto: configura una instancia Zope usando el script &lt;a0&gt;plone.recipe.zope2instance &lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
# comment the following two options in production sites
debug-mode = on
verbose-security = on

eggs =</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>[instance]
recipe = plone.recipe.zope2instance
zope2-location = ${zope2:location}
user = admin:admin
http-address = 8080
# comente las siguientes dos opciones en los sitios de producción
debug-mode = on
verbose-security = on

eggs =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we reference the Zope 2 installation from the &lt;e0&gt;[zope2]&lt;/e0&gt; part - if you specified a location yourself when creating the buildout, you would see that one here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hacemos referencia a la instalación de Zope 2 desde la parte &lt;e0&gt;[Zope2]&lt;/e0&gt;; si ha especificado una ubicación usted mismo al crear el buildout, usted verá esa aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, we specify the initial admin user and password used only when creating the initial database, and the port that Zope will be bound to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación, se especifica el usuario admin y su contraseña utilizados sólo cuando se crea la base de datos inicial, y el puerto por el cual Zope estará obligado a ejecutarse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also turn on debug mode and verbose security.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además activamos el modo de depuración y de seguridad verbosa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are useful for development, but remember to turn them off in production sites since they can compromise the security of your site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Son útiles para el desarrollo, pero recuerde desactivarlos en sitios de producción ya que pueden comprometer la seguridad de su sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These options are used to generate an appropriate &lt;e1&gt;zope.conf&lt;/e1&gt; file for this instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas opciones son usadas para generar un archivo &lt;e1&gt;zope.conf&lt;/e1&gt; apropiado para la instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;a2&gt;recipe page in the Cheese Shop&lt;/a2&gt; for more details on the options available.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea la &lt;a2&gt;página de recetas en la Cheese Shop&lt;/a2&gt; para más detalles sobre las opciones disponibles. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, we specify which eggs that will be made available to Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación, se especifica que huevos se pondrán a disposición de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This references the &quot;global&quot; eggs from the &lt;e0&gt;[buildout]&lt;/e0&gt; section, as well as Plone itself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto hace referencia a los huevos &quot;globales&quot; desde la sección de &lt;e0&gt;[buildout]&lt;/e0&gt;, así como Plone mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could add additional eggs here, though it is generally easier to specify these at the top of the file, so that they get included in the &lt;e1&gt;${buildout:eggs}&lt;/e1&gt; working set.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se podría añadir huevos adicionales aquí, aunque por lo general es más fácil especificar estos en la parte superior del archivo, para que sean incluidos en el grupo de trabajo &lt;e1&gt;${buildout:eggs} </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 &lt;e0&gt;configure.zcml&lt;/e0&gt; files are not automatically loaded for eggs or packages that lack &lt;e1&gt;z3c.autoinclude&lt;/e1&gt; support and are not in the &lt;e2&gt;Products &lt;/e2&gt;namespace.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los archivos &lt;e0&gt;configure.zcml&lt;/e0&gt; de Zope 3 no se cargan automáticamente para huevos o paquetes que carecen de soporte &lt;e1&gt;z3c.autoinclude&lt;/e1&gt; y no están en el namespace de &lt;e2&gt;Products&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To load ZCML files for a regular package, we can make buildout create a ZCML slug by listing the package under the &lt;e3&gt;zcml &lt;/e3&gt;option:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para cargar archivos de ZCML para un paquete regular, podemos hacer que buildout cree una slug ZCML listando el paquete en la opción &lt;e3&gt;ZCML&lt;/e3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This assumes that &lt;e0&gt;my.package &lt;/e0&gt;was previously referenced in the buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí se asume que a &lt;e0&gt;my.package &lt;/e0&gt; se le hizo referencia anteriormente en el buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This would load both the main &lt;e1&gt;configure.zcml &lt;/e1&gt;and the &lt;e2&gt;overrides.zcml&lt;/e2&gt; file from this package.  Over time, the need for these entries should diminish, as &lt;e3&gt;z3c.autoinclude&lt;/e3&gt; support becomes widespread.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto cargará ambos, el &lt;e1&gt;configure.zcml &lt;/e1&gt;y el archivo &lt;e2&gt;overrides.zcml&lt;/e2&gt; de este paquete. Con el tiempo, la necesidad de estas entradas debería disminuir, ya que el soporte de &lt;e3&gt;z3c.autoinclude&lt;/e3&gt; se va generalizando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, we list the various directories that contain Zope 2 style products - akin to the &lt;e0&gt;Products/&lt;/e0&gt; directory in a traditional instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente listamos los distintos directorios que contienen los productos de estilo Zope 2; semejante al directorio &lt;e0&gt;Products/&lt;/e0&gt; en una instancia tradicional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how the &lt;e1&gt;products/&lt;/e1&gt; directory in the main buildout directory comes first, followed by the products downloaded with the &lt;e2&gt;[productdistros]&lt;/e2&gt; part.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Observe cómo el directorio &lt;e1&gt;products/&lt;/e1&gt; en el directorio buildout principal viene de primero, seguido por los productos descargados con la parte &lt;e2&gt;[productdistros]&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the recipe is run, the Zope instance home will be &lt;e0&gt;parts/instance&lt;/e0&gt;, and a control script is created in &lt;e1&gt;./bin/instance&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando la receta se ejecuta, el inicio (home) de la instancia Zope será &lt;e0&gt;parts/instance&lt;/e0&gt;, y un script de control es creado en &lt;e1&gt;./bin/instance&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The [zopepy] section</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La sección [zopepy]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This final section creates a Python interpreter that has all the eggs and packages (but not Zope 2 style products) that Zope would have during startup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En esta última sección crea un intérprete Python que tiene todos los huevos y paquetes (pero no productos de estilo Zope 2) que Zope tendría durante el arranque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful for testing purposes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede ser útil para propósitos de prueba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we copy the eggs from the &lt;e0&gt;[instance]&lt;/e0&gt; section, and include in the pythonpath the Zope instance home.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí copiamos los huevos de la sección &lt;e0&gt;[instance]&lt;/e0&gt;, e incluir en la pythonpath el inicio (home) de la instancia Zope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the recipe is run, the script will be created in &lt;e0&gt;./bin/zopepy&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando la receta se ejecuta el script se creará en &lt;e0&gt;./bin/zopepy&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a buildout defaults file</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Creando archivos por defecto de buildout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes it possible to share configuration across multiple buildouts, and save some time and disk space.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto hace que sea posible compartir la configuración a través de múltiples buildouts, y ahorrar un poco de tiempo y espacio en disco.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To set &quot;global&quot; options affecting all buildouts, create a directory &lt;e0&gt;.buildout&lt;/e0&gt; (note leading dot) in your home directory, and add a file there called &lt;e1&gt;default.cfg&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para definir opciones &quot;globales&quot; que afecten todos los buildouts, cree un directorio &lt;e0&gt;.buildout&lt;/e0&gt; (note el punto inicial) en su directorio de inicio (home), y agregue un archivo llamado &lt;e1&gt;default.cfg&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any option set here will be applied to the corresponding section in any &lt;e2&gt;buildout.cf&lt;/e2&gt;g that you run, unless it is overridden by a more specific option in the &lt;e3&gt;buildout.cfg&lt;/e3&gt; file itself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cualquier opción establecida aquí se aplicará a la sección correspondiente en cualquier &lt;e2&gt;buildout.cfg&lt;/e2&gt; que ejecute, al menos que esté siendo anulado por una opción más específica en el archivo &lt;e3&gt;buildout.cfg&lt;/e3&gt; como tal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common options are:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las opciones más comunes son:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify a python interpreter other than the system default.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifique un intérprete Python que no sea el predeterminado del sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful if you have Python 2.5 installed, say, but you want your buildouts to use another installation of Python 2.4.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es útil si usted tiene instalado Python 2.5, y por ejemplo usted quiere que su buildouts utilicen otra instalación de Python 2.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify a directory where eggs will be downloaded.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifique un directorio donde los huevos se van a descargar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows multiple buildouts to share the same eggs, saving disk space and download time.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto permite que múltiples buildouts compartan los mismos huevos, ahorrando de espacio en disco y tiempo de descarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that only those eggs explicitly required by a particular buildout will be activated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que sólo esos huevos específicamente requeridos por un buildout en particular serán activados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The eggs directory may contain many more eggs (or many different versions of the same package) than what is used at any one time.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El directorio de huevos pueden contener muchos más huevos (o varias versiones del mismo paquete) de los que se utilizan en un momento dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify a shared directory for downloaded archives.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifique un directorio compartido para los archivos descargados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this can save disk space and download time.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más, esto puede ahorrar espacio en disco y tiempo de descarga.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>NOTE: before zc.buildout 1.0, this was called download-directory</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>NOTA: antes el zc.buildout 1.0, era llamado download-directory</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specify a shared directory for extended buildout configurations that are downloaded from a URL.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifique un directorio compartido para las configuraciones extendidas de buildout que son descargadas desde una URL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Plone 3.2 this is how Plone pins the &lt;a0&gt;versions&lt;/a0&gt; of its eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En cuanto a Plone 3.2 así es como Plone hace pin a las &lt;a0&gt;versiones&lt;/a0&gt; de sus huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This option was added in &lt;a1&gt;zc.buildout 1.4.1&lt;/a1&gt;, prior to that the offline mode in combination with a extends URL would not work.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta opción fue agregada en &lt;a1&gt;zc.buildout 1.4.1&lt;/a1&gt;, antes de esto el modo desconectado en combinación con URL extends no funcionaría.  </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example &lt;e0&gt;~/.buildout/default.cfg&lt;/e0&gt; setting all three:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un ejemplo &lt;e0&gt;~/.buildout/default.cfg&lt;/e0&gt; configurando los tres:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This assumes Python 2.4 is installed in &lt;e0&gt;/opt/python2.4&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto asume que Python 2.4 está instalado en &lt;e0&gt;/opt/python2.4&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the last two options to work, you would need to create the directories &lt;e1&gt;eggs &lt;/e1&gt;and &lt;e2&gt;downloads &lt;/e2&gt;inside the &lt;e3&gt;~/.buildout&lt;/e3&gt; directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para que la última opción funcione, necesitaría crear los directorios &lt;e1&gt;eggs &lt;/e1&gt;y &lt;e2&gt;downloads &lt;/e2&gt;dentro del directorio &lt;e3&gt;~/.buildout&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing a third party product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalando un producto de tercero</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to install a new package using these tools</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo instalar un nuevo paquete mediante el uso de estas herramientas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to install a new third-party products will depend on whether it is packaged as an egg, or a traditional Zope 2 product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo instalar un nuevo de producto de terceros dependerá de si está empaquetado como un huevo, o como un producto tradicional de Zope 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing eggs</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalando huevos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So long as an egg has a release in the &lt;a0&gt;PyPi&lt;/a0&gt; or elsewhere, buildout can download and install it, including any explicitly specified dependencies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En tanto que un huevo posea una versión en el &lt;a0&gt;PyPi&lt;/a0&gt; o en cualquier otro lado, buildout puede descargarlo e instalarlo, incluyendo cualquier dependencia explícitamente especificada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply list the egg, and optionally a version (otherwise, you get the latest available), in the &lt;e1&gt;eggs &lt;/e1&gt;option.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Simplemente liste un huevo y si quiere una versión (en caso de que no lo haga obtendrá la última versión), en la opción &lt;e1&gt;eggs&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want buildout to search an index other than PyPi's, you can add a URL to &lt;e0&gt;find-links&lt;/e0&gt; that contains download links for the eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si desea que buildout busque en un índice que no sea PyPI, usted puede agregar una URL a &lt;e0&gt;find-links&lt;/e0&gt; que contenga enlaces de descarga para los huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, we have already seen an example of this: &lt;e1&gt;elementtree &lt;/e1&gt;is found at &lt;e2&gt;http://effbot.org/downloads&lt;/e2&gt;, not in PyPi directly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De hecho, ya hemos visto un ejemplo de esto: &lt;e1&gt;elementtree &lt;/e1&gt;se encuentra en &lt;e2&gt;http://effbot.org/downloads&lt;/e2&gt;, y no en PyPi directamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, we have:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto tenemos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have also listed some of the download locations for Zope and Plone eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También hemos listado algunas de las locaciones de descarga para los huevos de Zope y Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again - re-run buildout for the changes to take effect:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más, vuelva a ejecutar el buildout para que los cambios surtan efecto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Development eggs</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Huevos de desarrollo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there is not a release for your egg, or you want to track an egg in Subversion, check it out to the &lt;e0&gt;src/&lt;/e0&gt; directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si no hay un lanzamiento para su huevo, o desea realizar el seguimiento de un huevo en Subversion, revise el directorio &lt;e0&gt;src/&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you get the full egg, including the top-level &lt;e1&gt;setup.py&lt;/e1&gt; file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de obtener el huevo completo, el archivo de nivel-superior &lt;e1&gt;setup.py&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to get the &lt;e2&gt;plone.portlets&lt;/e2&gt; trunk development, egg do:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo para obtener el huevo de desarrollo &quot;trunk&quot; &lt;e2&gt; plone.portlets &lt;/e2&gt; haga:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, add the following to &lt;e0&gt;buildout.cfg&lt;/e0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego agregue lo siguiente a &lt;e0&gt;buildout.cfg&lt;/e0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;develop &lt;/e0&gt;option contains a relative path to where the source egg is installed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La opción &lt;e0&gt;develop &lt;/e0&gt;contiene una ruta relativa a donde el huevo fuente ha sido instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildout will expect to find a suitable &lt;e1&gt;setup.py&lt;/e1&gt; in this directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Buildout espera encontrar un adecuado &lt;e1&gt;setup.py&lt;/e1&gt; en este directorio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Development eggs always take precedence over regular eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los huevos de desarrollo siempre tienen prioridad sobre los huevos comunes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You still need to list the egg name  in the &lt;e0&gt;eggs&lt;/e0&gt; option for it to be installed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Siempre necesitará listar el nombre del huevo, en la opción &lt;e0&gt;eggs&lt;/e0&gt; para que este sea instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are overriding an egg that ships with Plone, you may need to list it in the eggs section of the &lt;e0&gt;[plone]&lt;/e0&gt; part instead:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si va a reemplazar un huevo que venga incluido con Plone, puede que, en su lugar, tenga que listarlo en la sección de huevos de la parte &lt;e0&gt;[plone]&lt;/e0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because &lt;e0&gt;plone.recipe.plone&lt;/e0&gt; is very expilcit about which versions of its various eggs to use, to ensure Plone keeps running as it was released.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es porque &lt;e0&gt;plone.recipe.plone&lt;/e0&gt; es muy explicito sobre que versiones de sus distintos huevos usará, para asegurar que Plone sigue funcionando como fue lanzado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildout recipes (such as &lt;e0&gt;plone.recipe.plone&lt;/e0&gt;) are distributed as eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las recetas de buildout  (tal como &lt;e0&gt;plone.recipe.plone&lt;/e0&gt;) se distribuyen como huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use a development egg of a recipe by listing it under the &lt;e1&gt;develop&lt;/e1&gt; option.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede usar un huevo de desarrollo de una receta listando este bajo la opción &lt;e1&gt;develop&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no need to explicitly list it under the &lt;e2&gt;eggs &lt;/e2&gt;option, since it is referenced by the &lt;e3&gt;recipe &lt;/e3&gt;option of the relevant part.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No hay necesidad de que explícitamente se liste en la opción &lt;e2&gt;eggs&lt;/e2&gt;, ya que se le hace referencia por la opción &lt;e3&gt;recipe&lt;/e3&gt; de la parte relevante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing a traditional Zope 2 product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalando un producto tradicional de Zope 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to try out a traditional Zope 2 product is to extract it into the &lt;e0&gt;products&lt;/e0&gt;/ folder inside the buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La manera más fácil de probar un producto tradicional de Zope 2 es extraerlo dentro de la carpeta &lt;e0&gt;products&lt;/e0&gt;/ en el buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you see documentation referring to the &lt;e1&gt;Products/&lt;/e1&gt; folder in a Zope instance, this is the same thing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted ve documentación que hace referencia a la carpeta &lt;e1&gt;Products/&lt;/e1&gt; en la instancia Zope, es lo mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this approach makes it harder to redistribute your project and share it with other developers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, este enfoque hace que sea más difícil redistribuir su proyecto y compartirlo con otros desarrolladores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is often more predictable to let buildout download and install the package for you.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A menudo es más predecible dejar que buildout descargue e instale el paquete por usted.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do this with the &lt;e0&gt;[productdistros]&lt;/e0&gt; section of &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto lo puede hacer con la sección &lt;e0&gt;[productdistros]&lt;/e0&gt; de &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here is how you might install a product named &lt;e2&gt;ExampleProduct&lt;/e2&gt; and a set of products named &lt;e3&gt;ExampleProductBundle&lt;/e3&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, aquí está como podría instalar un producto llamado &lt;e2&gt;ExampleProduct&lt;/e2&gt; y conjunto de productos llamados &lt;e3&gt;ExampleProductBundle&lt;/e3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that our fictional &lt;e0&gt;ExampleProductBundle&lt;/e0&gt; is distributed as a single directory containing a number of products in sub-directories, so we list it under &lt;e1&gt;nested-packages&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que nuestro ficticio &lt;e0&gt;ExampleProductBundle&lt;/e0&gt; se distribuye como un único directorio que contiene una serie de productos en sub-directorios, por lo que se listan en &lt;e1&gt; paquetes-anidados &lt;/e1&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As always, if you change &lt;e0&gt;buildout.cfg&lt;/e0&gt;, you must re-run buildout:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como siempre, si cambia &lt;e0&gt;buildout.cfg&lt;/e0&gt;, tiene que volver a ejecutar buildout:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Managing ZCML files</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Administrando archivos de ZCML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to realize that Zope will not load &lt;e0&gt;configure.zcml&lt;/e0&gt; files automatically for packages that are not in the &lt;e1&gt;Products.*&lt;/e1&gt; namespace and lack support for &lt;e2&gt;z3c.autoinclude&lt;/e2&gt; (see next page for more on using &lt;e3&gt;z3c.autoinclude&lt;/e3&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es importante darse cuenta que Zope no cargará archivos &lt;e0&gt;configure.zcml&lt;/e0&gt; automáticamente para paquetes que no están en el namespace &lt;e1&gt;Products.*&lt;/e1&gt; y carece de soporte &lt;e2&gt;z3c.autoinclude&lt;/e2&gt; (vea la página siguiente para más información sobre el uso de &lt;e3&gt;z3c.autoinclude&lt;/e3&gt;).
</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, you must explicitly reference the package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En lugar de esto, tiene que hacer explícitamente una referencia al paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Buildout can create such a reference (known as a ZCML &lt;s4&gt;slug&lt;/s4&gt;) with the &lt;e5&gt;zcml &lt;/e5&gt;option under the &lt;e6&gt;[instance]&lt;/e6&gt; part.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Buildout puede crear tal referencia (conocida como &lt;s4&gt;slug&lt;/s4&gt; ZCML) con la opción &lt;e5&gt;zcml &lt;/e5&gt; en la parte &lt;e6&gt;[instance]&lt;/e6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how to ensure that &lt;e7&gt;borg.project&lt;/e7&gt; is available to Zope:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está cómo asegurarse que &lt;e7&gt;borg.project&lt;/e7&gt; este disponible para Zope: </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Should you need to load an &lt;e0&gt;overrides.zcml&lt;/e0&gt; or a &lt;e1&gt;meta.zcml&lt;/e1&gt;, you can use a syntax like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si necesita cargar un &lt;e0&gt;overrides.zcml&lt;/e0&gt; o un &lt;e1&gt;meta.zcml&lt;/e1&gt;, puede usar una sintaxis como esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Policy products</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Productos de política</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many developers prefer to create a single &quot;policy product&quot; (also known as a &quot;deployment product&quot;) that orchestrates various dependencies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muchos desarrolladores prefieren crear un solo &quot;producto de política&quot; ( &quot;producto de implementación&quot;) que orqueste varias dependencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have such a product, you may want to include various dependencies directly from the policy product's &lt;e0&gt;configure.zcml&lt;/e0&gt; file, with lines such as:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted tiene tal producto, puede incluir varias dependencias directamente del archivo &lt;e0&gt; configure.zcml &lt;/e0&gt; de producto de política, con líneas tales como esta:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you may still need one slug (using the &lt;e0&gt;zcml &lt;/e0&gt;option as above) for the policy product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, usted puede necesitar una slug (usando la opción &lt;e0&gt;zcml &lt;/e0&gt; anterior) para el producto de política.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a new package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Creando un nuevo paquete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a new custom package is not much different from installing a third-party one.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La adición de un nuevo paquete personalizado no es muy diferente de la instalación de un tercero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a traditional Zope 2 product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Creando un producto tradicional de Zope 2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a traditional Zope 2 product, put it in the top-level &lt;e0&gt;products/&lt;/e0&gt; directory and re-start Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para crear un producto tradicional Zope 2, colóquelo en el directorio de nivel-superior &lt;e0&gt;products/&lt;/e0&gt; y reinicie Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nothing more should be required.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nada más se debería exigirse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As explained previously, products placed here will be found automatically at start-up, and their &lt;e1&gt;configure.zcml&lt;/e1&gt; files will be executed automatically.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como se explicó anteriormente, los productos puestos aquí se encontrarán automáticamente en el arranque, y su archivos de &lt;e1&gt; configure.zcml &lt;/e1&gt; se ejecutarán automáticamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating an egg</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Creando un huevo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if you are using products, you cannot benefit from the additional features of eggs, including automatic dependency &lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, si usted está usando productos, no puede beneficiarse de las características adicionales de huevos, incluyendo administración automática de dependencias, distribución vía la Cheese Shop y namespaces anidados.&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>management, distribution via the Cheese Shop and nested namespaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg> </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to create a new egg is to use the &lt;e0&gt;paster &lt;/e0&gt;command, which we already used to create the buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La forma más fácil de crear un nuevo huevo es utilizar el comando &lt;e0&gt;paster &lt;/e0&gt;, utilizado ya para crear el buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a new basic package, with a top-level namespace (e.g. your company name) and a specific name, go to the &lt;e1&gt;src/&lt;/e1&gt; directory and run:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para crear un nuevo paquete básico, con un namespace de nivel superior (por ejemplo, el nombre de su empresa) y un nombre específico, vaya al directorio &lt;e1&gt;src/&lt;/e1&gt; y ejecute:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will be asked a series of questions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se le preguntará una serie de preguntas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure that the namespace package and package name correspond to the name of the egg.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de que el paquete de namespace y el nombre del paquete corresponden con el nombre del huevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the namespace package is &lt;e0&gt;myorg &lt;/e0&gt;and the package name is &lt;e1&gt;mypackage&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, el paquete de namespace es &lt;e0&gt;myorg &lt;/e0&gt;y el nombre del paquete es &lt;e1&gt;mypackage&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, answer &lt;e2&gt;False &lt;/e2&gt;to the question on whether your package if &quot;zip safe&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En general, responda &lt;e2&gt;False &lt;/e2&gt;a la pregunta sobre si su paquete es &quot;zip safe&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter other metadata as requested.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introduzca otros metadatos como es solicitado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will now have:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora tendrá que:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;setup.py&lt;/e0&gt; which contains the metadata you entered</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un &lt;e0&gt;setup.py&lt;/e0&gt; que contiene los metadatos que ha introducido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A package in &lt;e0&gt;myorg.mypackage/myorg/mypackage&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un paquete en &lt;e0&gt;myorg.mypackage/myorg/mypackage&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your source code goes here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código fuente va aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A skeleton &lt;e0&gt;configure.zcml&lt;/e0&gt;, tests.py and a few other useful starting points.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un &lt;e0&gt;configure.zcml&lt;/e0&gt; esqueleto, tests.py y otros puntos de partida útiles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some generic documentation in &lt;e0&gt;myorg.mypackage/docs&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Alguna documentación general en &lt;e0&gt;myorg.mypackage/docs&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, you must also add this package to the buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto que también debe agregar el paquete al buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;e0&gt;buildout.cfg&lt;/e0&gt;, you might have:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;e0&gt;buildout.cfg&lt;/e0&gt;, usted puede tener:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless you plan to include this package from another one (or use automatic ZCML loading, explained below), you probably also need a ZCML slug:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A menos que planee incluir este paquete desde otro (o usar carga automática ZCML, explicado abajo), es probable que también necesita un slug ZCML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not forget to re-run buildout after making the change:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No se olvides de volver a ejecutar el buildout después de hacer el cambio:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automate ZCML loading for your package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Automatizar la carga ZCML de su paquete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're not including your package from another one, you can still avoid having to include a ZCML slug in &lt;e0&gt;buildout.cfg&lt;/e0&gt; for it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted no está incluyendo su paquete desde otro paquete, aún puede evitar tener que incluir una slug ZCML en &lt;e0&gt; buildout.cfg &lt;/e0&gt; para este.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is particulary useful to avoid unneccessary repetition of package names in &lt;e1&gt;buildout.cfg&lt;/e1&gt;, which begginer integrators might easily overlook.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es particularmente útil para evitar la repetición innecesaria de nombres de paquetes en &lt;e1&gt;buildout.cfg&lt;/e1&gt; cosa que integradores principiantes fácilmente podrían pasar por alto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From Plone 3.3 on, you can make your packages signal that their ZCML should be included by adding:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De Plone 3.3 en adelante, usted puede hacer sus paquetes señalen que sus ZCML deben ser incluidos mediante la adición de:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>to their &lt;e0&gt;setup.py&lt;/e0&gt; file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>a sus archivos &lt;e0&gt;setup.py&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further information, see the &lt;a1&gt;setuptools documentation about dynamic discovery of services and plugins&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para más información vea la &lt;a1&gt;documentación de setuptools sobre descubrimientos dinámicos de servicios y plugins (extensiones)&lt;/a1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifying dependencies</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especificando dependencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your new package has explicit dependencies, you can list them in &lt;e0&gt;setup.py&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si su nuevo paquete tiene dependencias explicitas, puede listarlas en &lt;e0&gt;setup.py&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That way, buildout will be able to download and install these as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De esta manera, buildout será capaz de descargar e instalar estas también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependencies are listed in the &lt;e1&gt;install_requires&lt;/e1&gt; argument to the &lt;e2&gt;setup()&lt;/e2&gt; method, By default, &lt;e3&gt;setuptools &lt;/e3&gt;is listed here, since we need this to support namespace packages.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las dependencias están listadas en el argumento &lt;e1&gt;install_requires&lt;/e1&gt; para el método &lt;e2&gt;setup()&lt;/e2&gt;, por defecto, &lt;e3&gt;setuptools &lt;/e3&gt;está listado aquí, ya que necesitamos que esto soporte paquetes namespace.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add &lt;e4&gt;sqlalchemy &lt;/e4&gt;0.3 (but not 0.4), and the &lt;e5&gt;MySQL-Python&lt;/e5&gt; driver, you could amend this to read:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para agregar &lt;e4&gt;sqlalchemy &lt;/e4&gt;0.3 (pero no 0.4), y el driver &lt;e5&gt;MySQL-Python&lt;/e5&gt;, usted podría modificar esto para leer:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uploading your egg to the Cheese Shop</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Subiendo su huevo a la Cheese Shop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to share your packge with the rest of the Python community and make it easy to install using tools like buildout and &lt;e0&gt;easy_install&lt;/e0&gt;, you can upload the package to the Cheese Shop.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted desea compartir su paquete con el resto de la comunidad Python y hacerlo fácil de instalar con herramientas como buildout y&lt;e0&gt; easy_install&lt;/e0&gt; , puede cargar el paquete a la Cheese Shop:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before doing so, you should:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de hacerlo, debería:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Commit your latest changes and tag the release in Subversion, if applicable.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Confirmar los cambios más recientes y etiquetar la versión en Subversion, si es aplicable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remove (temporarily) the &lt;e0&gt;setup.cfg&lt;/e0&gt; file: this makes your package a development release.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Eliminar (temporalmente) el archivo &lt;e0&gt;setup.cfg&lt;/e0&gt;: esto hace a su paquete una versión de desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure the version number in &lt;e0&gt;setup.py&lt;/e0&gt; is correct.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese que el número de versión en &lt;e0&gt;setup.py&lt;/e0&gt; sea correcto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This should use common conventions such as &quot;1.0b2&quot; for the second beta of version 1.0, or &quot;2.1.3rc1&quot; for the first release candidate of version 2.1.3.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto debe utilizar lconvenciones comunes tales como &quot;1.0b2&quot; para la segunda versión beta 1.0, o &quot;2.1.3rc1&quot; para la primera versión candidata de la versión 2.1.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using Mac OS X, run &lt;s0&gt;export COPY_EXTENDED_ATTRIBUTES_DISABLE=true&lt;/s0&gt; on the shell first - otherwise, the egg will contain Mac OS X resource forks which cause problems if your egg is used on Windows.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está utilizando Mac OS X, ejecute &lt;s0&gt;export COPY_EXTENDED_ATTRIBUTES_DISABLE=true&lt;/s0&gt; en el shell primero; en caso contrario, el huevo contendrá &quot;resource forks&quot; de Mac OS X que causan problemas si su huevo se utiliza en Windows.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you are ready, run the following command from your package's directory (e.g. &lt;e0&gt;src/myorg.mypackage&lt;/e0&gt;):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando este listo, ejecute el siguiente comando del directorio de paquetes (ejemplo: &lt;e0&gt;src/myorg.mypackage&lt;/e0&gt;):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will ask you to create a Cheese Shop account if you do not have one already.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto le pedirá que cree una cuenta Cheese Shop, si todavía no tiene una.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run this command as often as you'd like to release a new version (probably with a new version number).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede ejecutar este comando con la frecuencia que que quiera para publicar una nueva versión (probablemente con un nuevo número de versión).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A deployment configuration</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una configuración de implementación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to use buildout for deployment configuration</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo utilizar buildout para la configuración de implementación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, let's take a look at a more advanced configuration, better suited for deployment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último, echemos un vistazo a una configuración más avanzada, más adecuada para implementación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save this file as &lt;e0&gt;deployment.cfg&lt;/e0&gt;, at the root of the buildout next to the main &lt;e1&gt;buildout.cfg&lt;/e1&gt; file:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Guarde este archivo &lt;e0&gt;deployment.cfg&lt;/e0&gt;, en el root del buildout junto al archivo principal &lt;e1&gt;buildout.cfg&lt;/e1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we are:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí estamos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Referencing the main &lt;e0&gt;buildout.cfg&lt;/e0&gt; file, extending and overriding it with configuration more appropriate for deployment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Haciendo referencia al archivo principal &lt;e0&gt;buildout.cfg&lt;/e0&gt;, extendiéndolo y configurándolo con una configuración más apropiada para la implementación:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting up a ZEO server with two client instances, instance&lt;e0&gt; &lt;/e0&gt;and &lt;e1&gt;debug-instance&lt;/e1&gt; (see &lt;a2&gt;plone.recipe.zope2zeoserver &lt;/a2&gt;and &lt;a3&gt;plone.recipe.zope2instance&lt;/a3&gt; for more details)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configurando un servidor ZEO con dos instancias clientes, instance&lt;e0&gt; &lt;/e0&gt;y &lt;e1&gt;debug-instance&lt;/e1&gt; (see &lt;a2&gt;plone.recipe.zope2zeoserver &lt;/a2&gt;y &lt;a3&gt;plone.recipe.zope2instance&lt;/a3&gt; para más detalles)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiling the Varnish cache server (see &lt;a0&gt;plone.recipe.varnish&lt;/a0&gt; for more details).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Compilando el servidor de caché Varnish (vea &lt;a0&gt;plone.recipe.varnish&lt;/a0&gt; para más detalles).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By combining buildout configuration files like this, you can create tailor-made configurations for different deployment scenarios.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mediante la combinación de archivos buildout de configuración como este, puede crear configuraciones para distintos escenarios de implementación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about the advanced features of buildout, see &lt;a0&gt;its documentation&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para obtener más información acerca de las características avanzadas de buildout, consulte &lt;a0&gt;su documentación&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build this environment, you must explicitly specify a configuration file:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para construir este entorno, debe especificar explícitamente un archivo de configuración:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start Zope and Plone, you will need to start the ZEO server, the instance and the Varnish server:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para arrancar Zope y Plone, tendrá que iniciar el servidor ZEO, la instancia y el servidor Varnish:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to bring up an instance for debugging then you can start up the &lt;e0&gt;debug-instance&lt;/e0&gt; in foreground mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si necesita traer una instancia para la depuración, entonces puede comenzar la &lt;e0&gt;debug-instance&lt;/e0&gt; en el modo de primer plano (foreground).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The recipes will also create scripts to back up the ZODB filestorage (in &lt;e0&gt;./bin/repozo&lt;/e0&gt;) and to pack the database (in .&lt;e1&gt;/bin/zeopack&lt;/e1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las recetas también crearán scripts para respaldar el filestorage ZODB (Base de datos para objetos Zope) (en &lt;e0&gt;./bin/repozo&lt;/e0&gt;) y empaquetar la base de datos (en .&lt;e1&gt;/bin/zeopack&lt;/e1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further options</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más opciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>zc.buildout is a very flexible system.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>zc.buildout es un sistema muy flexible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is relatively easy to create new recipes, and you can combine existing recipes in powerful ways.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es relativamente fácil crear nuevas recetas, y pueden combinar recetas existentes de maneras poderosa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Search the &lt;a0&gt;Cheese Shop for &quot;buildout&quot;&lt;/a0&gt; to find more recipes, or take a look at the &lt;a1&gt;source code for some of Plone's own recipe&lt;/a1&gt;s to understand how recipes are created.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Busque la &lt;a0&gt;Cheese Shop por &quot;buildout&quot;&lt;/a0&gt; para encontrar más recetas, o revise el &lt;a1&gt;código fuente para algunas recetas propias de Plone&lt;/a1&gt; para entender el funcionamiento de estas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful buildout recipes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Recetas de buildout útiles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list of the most common and useful buildout recipes used when working with Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una lista de las recetas de buildout más comunes y útiles usadas ​​cuando se trabaja con Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The list is more or less sorted by topic.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La lista está más o menos ordenada por tema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check all available recipes &lt;a0&gt;at PyPI&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise todas las recetas disponibles &lt;a0&gt;e PyPI&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;zc.recipe.egg&lt;/a0&gt; - Installs eggs into a buildout eggs directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;zc.recipe.egg&lt;/a0&gt; - instala huevos dentro del directorio de buildout para huevos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also generates scripts in a buildout bin directory with egg paths baked into them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También genera scripts en un directorio bin de buildout con las rutas de huevo incrustados en ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;infrae.subversion&lt;/a0&gt; - This zc.buildout recipe will check out a &lt;e1&gt;number&lt;/e1&gt; of URLs into its parts directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;infrae.subversion&lt;/a0&gt; - Esta receta zc.buildout revisará una &lt;e1&gt;cantidad&lt;/e1&gt; de URL en sus directorios de partes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It won't remove its parts directory if there are any changes in the checkout, so it's safe to work with that checkout for development.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No va a eliminar sus directorios de partes si hay algún cambio en el checkout, por lo que es seguro trabajar con ese checkout para el desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.zope2install&lt;/a0&gt; - Installs Zope 2, i.e. its Python libraries and scripts, but doesn't create any instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.zope2install&lt;/a0&gt; - Instala Zope 2, ejemplo, sus librerías Python y scripts, pero no crea ninguna instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.zope2instance&lt;/a0&gt; - Creates and configures a Zope 2 instance in parts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.zope2instance&lt;/a0&gt; - Crea y configura una instancia Zope 2 en &quot;parts&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also installs a control script, which is like zopectl, in the bin/ directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También instala un script de control, que es como zopectl, en el directorio bin/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.zope2zeoserver&lt;/a0&gt; - This recipe creates and configures a Zope 2 ZEO server in parts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.zope2zeoserver&lt;/a0&gt; - Esta receta crea y configura un servidor Zope 2 ZEO server en &quot;parts&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also installs a control script, which is like zeoctl, in the bin/ directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También instala un script de control, que es como zeoctl, en el directorio bin/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.distros&lt;/a0&gt; -  Installs distributions, i.e. Zope products not packaged as eggs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.distros&lt;/a0&gt; -  Instala distribuciones, ejemplo, productos Zope no empaquetados como huevos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.apache&lt;/a0&gt; - Builds and configures the Apache web server.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.apache&lt;/a0&gt; - Construye y configura el servidor web Apache.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;gocept.nginx&lt;/a0&gt; - zc.buildout recipe for configuring an nginx server</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;gocept.nginx&lt;/a0&gt; - Receta zc.buildout para configurar un servidor nginx</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.varnish&lt;/a0&gt; - Installs the Varnish reverse-cache proxy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.varnish&lt;/a0&gt; - Instala el proxy Varnish reverse-cache.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It works for non-Zope sites as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Funciona para sitios no-Zope también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.squid&lt;/a0&gt; - Installs the Squid proxy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.squid&lt;/a0&gt; - Instala el proxy Squid.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;collective.recipe.omelette&lt;/a0&gt; - Creates a unified directory structure of all namespace packages, symlinking to the actual contents, in order to ease navigation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;collective.recipe.omelette&lt;/a0&gt; - Crea una estructura de directorio unificado de todos los paquetes de namespace, realizando enlaces simbólicos a los contenidos, con el fin de facilitar la navegación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;collective.recipe.i18noverrides&lt;/a0&gt; - Creates an i18n directory within one or more Zope 2 instances in your buildout.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;collective.recipe.i18noverrides&lt;/a0&gt; - Crea un directorio i18n dentro de una o más instancias Zope 2 en su buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It copies some .po files to those directories.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Copia algunos archivos .po a esos directorios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The translations in those .po files will override any other translations.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las traducciones de esos archivos .po anularán otras traducciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;zc.recipe.cmmi&lt;/a0&gt; - The Configure-Make-Make-Install recipe automates installation of configure-based source distribution into buildouts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;zc.recipe.cmmi&lt;/a0&gt; - La receta Configure-Make-Make-Install automatiza la instalación de distribución fuente base-configuración dentro de buildouts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.command&lt;/a0&gt; - Execute arbitrary commands in buildout through os.system.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.command&lt;/a0&gt; - Ejecuta comandos arbitrarios en buildout a través os.system.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing products from Subversion</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalando productos de Subversion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes Plone products are not eggified, but available only in Subversion version control repository.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Algunas veces los productos no transformados a huevos, pero sólo están disponibles en el repositorio Subversion de control de versiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This how to tells how such product can be automatically installed in buildout installations.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es cómo se le dice a tal producto para que sea instalado de forma automática en las instalaciones de buildout.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A few buildout recipes provide direct version control checkout functionality:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Unas recetas de buildout proporcionan una funcionalidad checkout de control directo de versión:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;plone.recipe.bundlecheckout&lt;/a0&gt; - recipe provides Subversion (and CVS) downloads.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;plone.recipe.bundlecheckout&lt;/a0&gt; - Receta que proporciona descargas de Subversion (y CVS).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Always does checkout - not suitable if you change files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Siempre hace checkout,  no es adecuado si cambia los archivos..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;mr.developer&lt;/a0&gt; -  a &lt;s1&gt;zc.buildout&lt;/s1&gt; extension which makes it easier to work with buildouts containing lots of packages of which you only want to develop some.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;mr.developer&lt;/a0&gt; -  una extensión &lt;s1&gt;zc.buildout&lt;/s1&gt; que facilita trabajar con buildouts que contienen un montón de paquetes de los cuales sólo desea desarrollar algunos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;infrae.subversion&lt;/a0&gt; - can do SVN update</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a0&gt;infrae.subversion&lt;/a0&gt; - puede realizar actualización SVN</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example we use the later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este ejemplo vamos a utilizar el último.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Step by step</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Paso a paso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add the &lt;e0&gt;infrae.buildout&lt;/e0&gt; recipe to your &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregue la receta &lt;e0&gt;infrae.buildout&lt;/e0&gt; a su &lt;e1&gt;buildout.cfg&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a recipe means adding a new line to [&lt;e2&gt;buildout] parts=...myrecipename&lt;/e2&gt; at the beginning of the file and then later a corresponding &lt;e3&gt;[mypartname] recipe = xxx.yyy&lt;/e3&gt; section.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregar una receta significa agregar una nueva línea a [&lt;e2&gt;buildout] parts=...myrecipename&lt;/e2&gt; al principio del archivo y luego una sección &lt;e3&gt;[mypartname] recipe = xxx.yyy&lt;/e3&gt; correspondiente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List all the URLs of the products you want in &lt;e0&gt;suvnproducts&lt;/e0&gt; section.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Liste todas las URL de los productos que quiere en la sección &lt;e0&gt;suvnproducts&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example below we checkout TickingMachine product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el ejemplo de más abajo hacemos un checkout al producto TickingMachine.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Get TickingMachine directly from SVN since it's not eggified    

[svnproducts]
recipe = infrae.subversion

urls =</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Obtener TickingMachine directamente de SVN ya que no es un huevo    

[svnproducts]
recipe = infrae.subversion

urls =</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case you're installing an old product (not eggified) you will also need to register it in the &lt;e0&gt;[products]&lt;/e0&gt; section so that they get added to your Python path:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el caso que usted esté instalando un producto viejo (no huevo) también lo tendrá que registrar en la sección &lt;e0&gt;[products]&lt;/e0&gt; para que así sean agregados a la ruta de Python:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After rerunning buildout, TickingMachine will be found under parts/development-products folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Después de volver a ejecutar buildout, TickingMachine se encontrará en la carpeta  parts/development-products.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further information</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más información</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>infrae.subversion: a recipe against disaster</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>infrae.subversion: una receta contra desastres</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that pointing to trunk is only a good practice for active development.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que apuntar a trunk es sólo una buena práctica para desarrollo activo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Anyone else that needs to use this technique should point to a tag or branch URL.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cualquier otra persona que necesite usar esta técnica debe apuntar a una etiqueta o URL.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Certification errors and passwords</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Errores de certificación y contraseñas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Self-signed certificates are often used with Subversion repositories.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Certificados auto-firmados son de uso frecuente con los repositorios de Subversion.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since &lt;e0&gt;infrae.subversion&lt;/e0&gt; is made for automatization, it cannot accept security decisions for the user.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya que &lt;e0&gt;infrae.subversion&lt;/e0&gt; está hecho para automatización, este no puede aceptar decisiones de seguridad para el usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So if you are receiving certification validation errors and password prompts, please access the Subversion repository first manually using svn command.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que si usted está recibiendo errores de validación de certificación y avisos de contraseña, por favor acceda al repositorio de Subversion primero manualmente utilizando el comando svn.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accept the choice and the svn client will remember this in your user account home folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Acepte la opción y el cliente svn recordará esta en la carpeta de inicio (home) la cuenta de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is recommended not to use your commit account for this, since storing passwords is insecure.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es recomendado no utilizar su cuenta para este compromiso, ya que el almacenamiento de contraseñas es inseguro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example about how to access a SVN repository using the &lt;e0&gt;svn ls&lt;/e0&gt; command and accepting the security decisions for the svn client to remember them permanently:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>He aquí un ejemplo sobre cómo acceder a un repositorio SVN con el comando &lt;e0&gt;svn ls&lt;/e0&gt; y aceptando las decisiones de seguridad para el cliente svn para recordarlos de forma permanente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content-types with Archetypes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tipos de contenido con Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to create new content-types in Plone using the Archetypes framework.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo crear nuevos tipos de contenido en Plone usando el framework de Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is Archetypes?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué son arquetipos?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Brief presentation of Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Breve presentación sobre arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes is a framework for developing new content types for a Plone project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos es un marco (framework) para el desarrollo de nuevos tipos de contenido para un proyecto de Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most content management projects involve introducing new types of content, which in the non-trivial case requires an informed understanding of how Zope and the CMF work.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La mayoría de los proyectos de administración de contenidos implican la introducción de nuevos tipos de contenido, que en el caso no trivial requiere una comprensión de cómo Zope y CMF trabajan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes provides a simple, extensible framework that can ease both the development and maintenance costs of CMF content types while reducing the learning curve for the simpler cases.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos ofrece un marco sencillo y extensible que puede facilitar el desarrollo y los costos de mantenimiento de tipos de contenido del CMF, al mismo tiempo que reduce la curva de aprendizaje para los casos más sencillos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compared to building content types using the stock CMF (through subclassing), Archetypes gives you the following advantages:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En comparación con la construcción de tipos de contenido con el stock de CMF (a través de subclases). Arquetipos le ofrece las siguientes ventajas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>automatically generates forms and views;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>genera automáticamente formularios y vistas;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>provides a library of stock field types, form widgets, and field validators;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>ofrece una librería de tipos de stock de campos, widgets de formularios y validadores de campo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allows defining custom fields, widgets, and validators;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>permite definir campos personalizados, widgets y validadores;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>automates transformations of rich content;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>automatiza las transformaciones de contenido rico;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a built-in reference engine that gives the ability to link two objects together with a relation; such a &quot;link&quot; from a given object to another one is a Python object called a &lt;i0&gt;reference&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>un motor de referencia incorporado que da la posibilidad de enlazar dos objetos con una relación, tal &quot;link&quot; de un determinado objeto a otro es un objeto de Python denominado &lt;i0&gt;reference&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since Plone 2.1, Archetypes has become the de-facto way of developing new content types, and a majority of third party products that are released these days use Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desde Plone 2.1, Arquetipos se ha convertido la forma de-facto de desarrollar nuevos tipos de contenido, y la mayoría de los productos de terceros que se publican en la actualidad usan Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes schemas</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esquemas de Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introducing Archetypes-based schemas and fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introducción de esquemas base-Aarquetipos y campos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes provides a robust framework for storing data attributes on content objects.  This framework consist of a number of &lt;s0&gt;Fields&lt;/s0&gt; stored in a container called a &lt;s1&gt;Schema&lt;/s1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos proporciona un marco sólido para el almacenamiento de atributos de datos sobre objetos de contenido. Este marco consiste en una serie de &lt;s0&gt;Fields (Campos)&lt;/s0&gt; almacenados en un contenedor denominado &lt;s1&gt;Schema&lt;/s1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields are simply specialized Python classes that allow you to store and retrieve data associated with an Archetypes object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos son simplemente clases especializadas Python que le permiten almacenar y recuperar datos asociados con un objeto de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields provide a few functionalities.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos proporcionan algunas funcionalidades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, there are specialized field types for strings, lists of strings, integers, floating-point numbers, etc., that allow special handling of fields based on the type of data stored.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar, hay tipos especializados de campo para las cadenas, listas de cadenas, números enteros, números en coma flotante, etc, que permiten un manejo especial de campos en función de los tipos de datos almacenados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some definitions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Algunas definiciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we go diving in, let's define some often-used terms:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de sumergirnos, vamos a definir algunos términos de uso frecuente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Field: An Archetypes Field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Field: un campo de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This refers to an instance of a Field class defined in a Schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se refiere a una instancia de una clase Field (campo) definida en un esquema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Schema: The &quot;container&quot; that Archetypes uses to store fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Schema: El &quot;contenedor&quot; que Arquetipos usa para almacenar campos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Schemata: A named grouping of fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Schemata: Una agrupación nombrada de campos </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One Schema can have many schematas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un Schema (Esquema) puede tener varios schematas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AT: Abbreviation for Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>AT: Abreviatura de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields, Classes, and Objects</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Campos, clases y objetos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes Fields are Python objects contained within the Schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los Campos de Arquetipos son objetos Python contenidos dentro del esquema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Field is defined once for an Archetypes content class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un campo se define una vez para una clase de contenido de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This single Field instance is used for every instance of that class.  Therefore, the relationship between Field instances and content classes is described as such: &quot;A field instance belongs to exactly one class.&quot; A class, however, can have many &lt;e0&gt;different&lt;/e0&gt; Field instances.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta sola instancia de campo es utilizada para cada instancia de esa clase. Por lo tanto, la relación entre las instancias de campo y las clases de contenido se describe así: &quot;una instancia de campo pertenece exactamente a una clase.&quot; Una clase, sin embargo, puede tener &lt;e0&gt;diferentes&lt;/e0&gt; instancias de campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, every instance of an AT class uses the &lt;e1&gt;same&lt;/e1&gt; set of Fields.  AT objects themselves do not contain unique Fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además, cada instancia de una clase AT utiliza el &lt;e1&gt;mismo&lt;/e1&gt; conjunto de campos. Los objetos AT como tal no contienen campos únicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Zope starts up, during product initialization, Archetypes reads the schema of the registered classes and &quot;automagically&quot; generates methods to read (the &lt;e0&gt;accessor&lt;/e0&gt;) and change (the &lt;e1&gt;mutator&lt;/e1&gt;) each of the fields defined.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando Zope arranca, durante la inicialización de productos, Arquetipos lee el esquema de las clases registradas y &quot;automáticamente casi mágicamente&quot; genera métodos para leer (el &lt;e0&gt;accessor&lt;/e0&gt;) y cambiar (el &lt;e1&gt;mutator&lt;/e1&gt;) cada uno de los campos definidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stock schemas</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esquemas Stock</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes includes three stock schemas:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Archetipos incluyen tres esquemas stock:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BaseSchema: defines a normal content type,</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>BaseSchema: define un tipo normal de contenido,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BaseFolderSchema: defines a folderish content type (object can contain other objects),</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>BaseFolderSchema: define un tipo de contenido folderish (un objeto puede contener otros objetos),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BaseBTreeFolderSchema: for folders which need to handle hundreds or thousands of objects (even up to millions).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>BaseBTreeFolderSchema: para carpetas que necesitan manejar cientos, o miles de objetos (incluso millones).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All three include two fields, &lt;c0&gt;id&lt;/c0&gt; and &lt;c1&gt;title&lt;/c1&gt;, as well as the standard Dublin Core metadata fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los tres incluyen dos campos, &lt;c0&gt;id&lt;/c0&gt; y &lt;c1&gt;título&lt;/c1&gt;, así como los campos estándar de metadatos Dublin Core.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifying the fields of an existing schema</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Modificando los campos de un esquema existente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifying an existing schema field is possible using the syntax &lt;c0&gt;schema['&lt;field_name&gt;'].attribute = value&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Modificar un campo de esquema existente es posible utilizando la sintaxis &lt;c0&gt;schema['&lt;field_name&gt;'].attribute = value&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to change the label of the &lt;e1&gt;description&lt;/e1&gt; field widget (already available in &lt;e2&gt;BaseSchema&lt;/e2&gt;), you can write (&lt;e3&gt;in your defined schema definition that reuses BaseSchema&lt;/e3&gt;):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, para cambiar el rótulo del widget de campo &lt;e1&gt;description&lt;/e1&gt; (ya disponible en &lt;e2&gt;BaseSchema&lt;/e2&gt;), usted puede escribir (&lt;e3&gt;en su definición establecida de esquema que reutiliza BaseSchema&lt;/e3&gt;):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fields in the schema are ordered, and normally first fields come first in &quot;add&quot; and &quot;edit&quot; forms.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos en el esquema son ordenados, y normalmente los primeros campos van de primero en los formularios de &quot;agregar&quot; y &quot;editar&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To rearrange a field within the schema use the &lt;c0&gt;moveField&lt;/c0&gt; method:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para volver a organizar un campo en el esquema use el método &lt;c0&gt;moveField&lt;/c0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Place it before a specific field: &lt;c0&gt;schema.moveField('&lt;field_to_move&gt;', before='&lt;field_to_place_it_before&gt;')&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Colóquelo antes de un campo específico: &lt;c0&gt;schema.moveField('&lt;field_to_move&gt;', before='&lt;field_to_place_it_before&gt;')&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Place it after a specific field: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', after='&lt;field_to_place_it_after&gt;')&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Colóquelo después de un campo específico: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', after='&lt;field_to_place_it_after&gt;')&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Place it at the top of the schema: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos='top')&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Colóquelo en la parte superior del esquema: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos='top')&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Place it at the bottom: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos='bottom')&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Colóquelo en la parte inferior del esquema: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos='bottom')&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Place it in a specific position: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos=0)&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Colóquelo en una posición específica: &lt;c0&gt; schema.moveField('&lt;field_to_move&gt;', pos=0)&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is ATContentTypes?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué es ATContentTypes?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ATContentTypes is the Plone core product that provides the default content types (since Plone 2.1).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>ATContentTypes es el producto core de Plone que proporciona los tipos de contenido por defecto (a partir Plone 2.1).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the major changes introduced in Plone 2.1 was that the core content types (Page, Image, etc) were changed from being based on stock CMF types, to using Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Uno de los principales cambios introducidos en Plone 2.1 es que los tipos de contenido core (página, imagen, etc.) se han cambiado de estar basados en tipos stock CMF, a la utilización de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new core types are housed in the ATContentTypes product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los nuevo tipos core se encuentran en el producto ATContentTypes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ATContentTypes introduces a number of base classes and tools that provide common &quot;Plone-ish&quot; behaviour.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>ATContentTypes introduce un número de clases base y las herramientas que proporcionan comportamiento &quot;tipo Plone&quot; común.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes things like support for the &quot;display&quot; menu and the &quot;more...&quot; menu and restrictions for the &quot;add item&quot; menu.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto incluye cosas como el soporte para el menú de visualización y el menú &quot;más ...&quot;, y restricciones para el menú de agregar elemento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use ATContentTypes' base classes and tools in your own products.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede utilizar las clases base ATContentTypes y herramientas en sus propios productos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;RichDocument tutorial&lt;/a0&gt; covers the core techniques, and is probably a good place to go when you have finished this reference.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &lt;a0&gt;tutorial RichDocument&lt;/a0&gt; cubre las técnicas core, y es probablemente un buen lugar para ir cuando haya terminado con esta referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Simple AT Product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un simple producto AT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A semi-realistic example Archetypes-based content type product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un ejemplo de producto semi-realista de tipo de contenido base-Arquetipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introducing a sample AT Product and the contents of the tutorial.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introducción de una muestra de producto AT y los contenidos del tutorial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this part of the manual, we discuss a sample AT Product to explain CMF/Archetypes practices.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En esta parte del manual, mostramos una muestra de un producto AT para explicar practicas CMF/Archetypes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will be building a product called &lt;s0&gt;example.archetype&lt;/s0&gt;, which will implement a content type (InstantMessage) that members with specific rights can use to add messages readable by other members.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a construir un producto llamado &lt;s0&gt;example.archetype&lt;/s0&gt;, el cual implementará un tipo de contenido (InstantMessage) que miembros con derechos específicos puedan utilizar para agregar mensajes legibles por otros miembros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, as you may have guessed, this is more a learning example than a usable product for a real website application.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, como podrá haber adivinado, esto es más un ejemplo de aprendizaje que un producto útil para una aplicación web real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is a Product ?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué es un producto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A product - a Zope product to be precise - is a third party add-on that can be integrated to provide additional functionality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un producto, un producto Zope para ser más precisos, es un complemento de terceros que puede ser integrado para proporcionar funcionalidad adicional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is a code package written using the Python language and conventions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se trata de un paquete de código escrito utilizando el lenguaje Python y sus convenciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to understand this section you will need to have some prior knowledge of working on the file system and programming protocols common to Python and Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A fin de comprender esta sección, es preciso tener un conocimiento previo sobre trabajar en el sistema de archivos y protocolos comunes de programación en Python y Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;example.archetype&lt;/s0&gt; product features the following CMF and Archetypes capabilities:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El producto &lt;s0&gt;example.archetype&lt;/s0&gt; posee el siguiente CMF y capacidades de Arquetipos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>basic fields and widgets;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>campos básicos y widgets;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>defining and using a vocabulary for a field with a selection widget;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>definición y uso de un vocabulario para un campo con una selección de widget;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>defining specific &quot;Add&quot; permissions for the contents.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>definición específica de permisos para &quot;añadir&quot; contenidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code of the product can be downloaded here: &lt;a0&gt;http://plone.org/products/example.archetype/&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código del producto se puede descargar aquí: &lt;a0&gt;http://plone.org/products/example.archetype/&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Product package layout</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Diseño del paquete de producto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conventions and techniques for organizing the package for an AT product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Convenciones y técnicas para la organización del paquete para producto AT.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Following Zope, Plone and AT's conventions, the content of our example product pakage will look like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Siguiendo Zope, Plone y convenciones AT, el contenido de nuestro paquete de producto tendrá este aspecto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the purpose of these files and directories?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Cuál es la finalidad de dichos archivos y directorios?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>__init__.py: The usual &quot;Python package&quot; initialization module;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>__init__.py: el usual módulo de inicialización &quot;Python package&quot;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configure.zcml: Using Zope's new Configuration Markup Language (ZCML), this file configures the services or behaviour the Zope server needs to load at startup;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>configure.zcml: Usando el nuevo ZCML de Zope, este archivo configura los servicios o el comportamiento del servidor Zope requerido para cargar el arranque;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config.py: Provides configuration variables for the product;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>config.py: Proporciona las variables de configuración para el producto;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>interfaces.py: Where you define interfaces describing what the packages' classes will do;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>interfaces.py: Donde se definen las interfaces que describen lo que las clases de paquetes harán;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>content: Contains the modules providing the implementation of the content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>content: Contiene los módulos que proporcionan la implementación de tipos de contenido. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, it contains the message.py file where the 'InstantMessage' class should be defined;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, contiene el archivo message.py dónde la clase &quot;InstantMessage&quot; debería esta definida;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>profiles/default: Contains a set of XML files that are needed to provide the settings that will be used by Plone's Quick-Installer tool when installing the product within Plone; this is what we call an &lt;e0&gt;Extension Profile&lt;/e0&gt;, an artifact of Zope CMF's GenericSetup technology.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>profiles/default: Contiene un conjunto de archivos XML que son necesarios para proporcionar los parámetros que serán utilizados por la herramienta Quick-Installer de Plone cuando se instala el producto dentro de Plone; esto es lo que se llama un &lt;e0&gt;Extension Profile&lt;/e0&gt;, un artefacto de la tecnología Zope de GenericSetup de CMF.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e1&gt;Note that this replaces the old way of doing based on the Extensions/Install&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e1&gt;Note que esto sustituye a la antigua manera de hacer las cosas basado en Extensions/Install&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More precisely, since Plone 3.0, you do not need that old-style technique;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ser más preciso, desde Plone 3.0, no es necesario esa técnica de estilo antiguo;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>browser: The sub-package where the developer can add specific presentation code such as browser views and templates; the contained configure.zcml is used to provide these components registration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>browser: El sub-paquete dónde el desarrollador puede agregar códigos de presentación específicos tales como las vistas del explorador y las plantillas, el configure.zcml contenido se utiliza para proporcionar estos registros de componentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tests: Contains the unit tests code for the product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>tests: contiene los códigos de pruebas unitarias para el producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have ZopeSkel installed, you can use the following command to create a similar structure:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted tiene ZopeSkel instalado, puede utilizar el siguiente comando para crear una estructura similar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we will go through the files one by one and add what we need to produce our application.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora vamos a ir a través de los archivos uno por uno y añadir lo que necesitamos para producir nuestra aplicación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interfaces module</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo de interfaces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The module where you define interfaces describing what your content class(es) will do.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo donde se definen las interfaces que describen lo que sus  clase(es) de contenido harán.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why do you need interfaces?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Por qué necesita interfaces?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces are useful to describe what a class will do.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las interfaces son útiles para describir que va a hacer una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are a kind of contract between a class and the components that class interact with.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Son una especie de contrato entre una clase y los componentes que interactúan con esa clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting a content management functionality package with writing interfaces is recommended practice as it helps document your code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arrancar un paquete de funcionalidad de administración de contenido con escrituras de interfaces es una práctica recomendada, ya que le ayuda a documentar su código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to that, Zope Component Architecture (ZCA) allows us to use interfaces as components for adapting a class (which is useful as new user requirements appear) and thus specializing its behaviour.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además de eso, la Arquitectura de componente Zope (ZCA - Zope Component Architecture) nos permite utilizar interfaces como componentes para la adaptación de una clase (que es útil en la medida que nuevas exigencias de usuario aparezcan) y por lo tanto especializando su comportamiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The interface for the Instant Message class</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La interfaz para la clase Instant Message</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done by convention in the &lt;c0&gt;interfaces.py&lt;/c0&gt; file, that you need to add at the root of the package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace por convención en el archivo &lt;c0&gt;interfaces.py&lt;/c0&gt;, que necesita agregar al root del paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we need an import from Zope's &lt;c0&gt;zope.interface&lt;/c0&gt; module, which is included into Zope 2's distribution since version 2.8:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero necesitamos un import del módulo &lt;c0&gt;zope.interface&lt;/c0&gt; de Zope, el cual es incluido dentro de la distribución de Zope 2 desde la versión 2.8:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Following ZCA naming conventions (interface names start with an &lt;e0&gt;I&lt;/e0&gt;), we define the &lt;c1&gt;IInstantMessage&lt;/c1&gt; interface we need for the &lt;c2&gt;InstantMessage&lt;/c2&gt; class that we will define later:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Bajo la convenciones ZCA para nombres (los nombres de interfaces comienzan con &lt;e0&gt;I&lt;/e0&gt;), definimos la interfaz &lt;c1&gt;IInstantMessage&lt;/c1&gt; que necesitamos para la clase &lt;c2&gt;InstantMessage&lt;/c2&gt; que vamos a definir después:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's it!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Eso es todo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could add attribute definitions to it using the &lt;c0&gt;zope.interface.Attribute&lt;/c0&gt; class, but this is not mandatory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Podríamos agregar definiciones de atributos a este usando la clase &lt;c0&gt;zope.interface.Attribute&lt;/c0&gt;, pero no es algo obligatorio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an interface is defined as above, without any function nor attribute, we call it a &quot;marker interface&quot; meaning that it will be used simply to &quot;mark&quot; the instances of the class that implements it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando una interfaz se define como se hizo arriba, sin ninguna función o atributo, lo llamamos un &quot;interfaz de marcador&quot;, lo que significa que se utiliza simplemente para &quot;marcar&quot; las instancias de la clase que la implemente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information about interfaces in the context of Archetypes can be found in the &lt;a0&gt;b-org tutorial - Interfaces section&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más información sobre las interfaces en el contexto de Arquetipos se pueden encontrar en el &lt;a0&gt;b-org tutorial - sección de Interfaces&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a detailed presentation of interfaces and their usage patterns, read the &lt;a1&gt;doctests document available from Zope's documentation site&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para una presentación detallada de las interfaces y sus patrones de uso, lea el &lt;a1&gt;documento de doctests disponible en la documentación de Zope &lt;/a1&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration module</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo de configuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration details for your content type, in config.py.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los detalles de configuración para su tipo de contenido, en config.py.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we have to import a class from Archetypes:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero tenemos que importar una clase desde Arquetipos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Displaylist is a data container we use when displaying pulldowns/radiobuttons/checkmarks with different choices.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Displaylist es contenedor de datos que se usa al mostrar pulldowns/radiobuttons/checkmarks con diferentes opciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say we wanted priorities on our instant messages, and we wanted those to be &lt;c0&gt;High&lt;/c0&gt;, &lt;c1&gt;Normal&lt;/c1&gt; and &lt;c2&gt;Low&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Digamos que quisiéramos prioridades en nuestro instant messages, y quisiéramos que fueran &lt;c0&gt;High (alta)&lt;/c0&gt;, &lt;c1&gt;Normal&lt;/c1&gt; y &lt;c2&gt;Low (baja)&lt;/c2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will specify these later in the file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a especificar estas más adelante en el archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next two lines set the project (Product in Zope) name, and point to the skin directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las próximas dos líneas definen el nombre (Producto en Zope) del proyecto, y apunta al directorio de skin.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;PROJECTNAME&lt;/c0&gt; should reference the name of the package: &lt;c1&gt;example.archetype&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;c0&gt;PROJECTNAME&lt;/c0&gt; debería hacer referencia al nombre del paquete: &lt;c1&gt;example.archetype&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we need to specify our 'Priority' pulldown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, tenemos que especificar nuestra &quot;prioridad&quot; desplegable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It should look like this, using the DisplayList utility class that Archetypes has provided for exactly that purpose:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Debería tener este aspecto, utilizando la clase de utilidad DisplayList que Arquetipos ha proporcionado para exactamente ese propósito:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python notes:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Notas Python:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reason for double parantheses is that DisplayList is a class that you pass a &lt;e0&gt;tuple of tuples&lt;/e0&gt; to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La razón para doble paréntesis es que DisplayList es una clase a la que usted le pasa un &lt;e0&gt;tuple of tuples (tupla de tuplas)&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also need to define the &quot;Add&quot; permission(s) for the content type(s):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También tenemos que definir el/los permiso(s) para el/los tipo(s) de contenido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend using the standard way of naming permissions: '&lt;ProductName&gt;: &lt;Permission&gt;'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nosotros recomendamos utilizar la manera estándar de nombrar permisos: '&lt;ProductName&gt;: &lt;Permission&gt;'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will group the related permissions together within the ZMI (Security tab), and allow the Administrator to recognize which permissions belong to which Product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto agrupara los permisos relacionados entre sí dentro de la ZMI (ficha Seguridad), y permitir que el Administrador reconocer cuales permisos corresponden a que Producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that, unless you have an advanced case which needs custom security settings, you don't need to define your own permissions for the &quot;edit&quot; and &quot;view&quot; of the content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que, a menos que tenga un caso avanzado que necesite configuraciones personalizadas de seguridad, no es necesario que defina sus propios permisos para la &quot;edición&quot; y &quot;vista&quot; de los contenidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this simple case you will just reuse, in the modules where needed, the generic permissions defined in CMFCore.permissions: &quot;View&quot;, &quot;Modify portal content&quot;...</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este simple caso usted sólo volverá a utilizar, en los módulos dónde sea necesario, los permisos genéricos definidos en CMFCore.permissions: &quot;Ver&quot;, &quot;Modificar el contenido del portal&quot; ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The startup module</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo startup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The initialization module (__init__.py) provides the script that is run when Zope is started.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo de arranque (__init__.py) el script que se ejecuta cuando se inicia Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before starting the usual Zope product initialization code, we need to define a Message Factory for when this product is internationalized.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de iniciar el código habitual de producto de inicialización de Zope, es necesario definir una Message Factory (fábrica de mensajes) para cuando este producto sea internacionalizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The defined &lt;c0&gt;MessageFactory&lt;/c0&gt; object will be imported with the special name &quot;_&quot; in most modules, and strings like &lt;s1&gt;_(u&quot;message&quot;)&lt;/s1&gt; will then be extracted by i18n tools for translation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El objeto definido &lt;c0&gt;MessageFactory&lt;/c0&gt; será importado con el nombre especial  &quot;_&quot; en la mayoría de los módulos, y cadenas como &lt;s1&gt;_(u&quot;message&quot;)&lt;/s1&gt; luego se extraerán por herramientas i18n para traducción. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we import some useful stuff from the Archetypes API:&lt;c0&gt;process_types&lt;/c0&gt; is useful to get the product's &lt;e1&gt;content types&lt;/e1&gt;, associated &lt;e2&gt;constructors,&lt;/e2&gt; and &lt;e3&gt;Factory Type Information&lt;/e3&gt; (FTI) data structures, while &lt;c4&gt;listTypes&lt;/c4&gt; can be used to list the types available in the product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, vamos a importar algunas cosas útiles de Arquetipos API:&lt;c0&gt;process_types&lt;/c0&gt; es útil para obtener las estructuras de datos &lt;e1&gt;content types&lt;/e1&gt;, associated &lt;e2&gt;constructors,&lt;/e2&gt; y &lt;e3&gt;Factory Type Information&lt;/e3&gt; (FTI) de productos, mientras que &lt;c4&gt;listTypes&lt;/c4&gt; se puede utilizar para listar los tipos disponibles en el producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also need to import the &lt;c0&gt;utils&lt;/c0&gt; module from &lt;c1&gt;CMFCore&lt;/c1&gt; to be able to use its &lt;c2&gt;ContentInit&lt;/c2&gt; class later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También tenemos que importar el módulo &lt;c0&gt;utils&lt;/c0&gt; de &lt;c1&gt;CMFCore&lt;/c1&gt; para poder usar su clase &lt;c2&gt;ContentInit&lt;/c2&gt; más adelante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Factory Type Information (FTI): Part of a CMF portal's configuration, the FTI for a content type is the data structure that holds the information needed to expose a content type within the portal.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Información de tipo fábrica (FTI - Factory Type Information): Parte de la configuración CMF del portal, la FTI para un tipo de contenido es la estructura de datos que contiene la información necesaria para exponer ese tipo de contenido dentro del portal. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the integrator's perspective, the FTI is the object (Factory-based Type Information object) within the portal_types component that tells CMF and Plone how to create a content from the type and how to display it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desde la perspectiva de integradores, la FTI es el objecto (objeto de información tipo base-fábrica) dentro del componente portal_types que le dice a CMF y Plone cómo crear un contenido desde el tipo y cómo presentarlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How exactly does 'listTypes' work: See those registerType() calls in your content type modules?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Cómo 'listTypes' trabaja exactamente: Ver esas llamadas registerType() en sus módulos de tipos de contenidos?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how we also import those modules (but do nothing with the import) in the 'content' package's __init__.py.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Observe cómo también importamos los módulos (pero no hacen nada con la importación) en &quot;content&quot; __init__.py de paquetes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The registerType() call tells AT about the type so that listTypes() can find it later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La llamada registerType() le dice a AT sobre el tipo para que listTypes() pueda encontrarlo más tarde.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the important import steps : we import everything that is defined in the content sub-package, i.e. all its modules:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Uno de los pasos importantes de importación : nosotros importamos todo lo que es definido el sub-paquete de contenido, es decir, todo los módulos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we import the configuration module, in order to have access to the variables it contains, such as the &quot;Add&quot; permission setting:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, vamos a importar el módulo de configuración, con el fin de tener acceso a las variables que contiene, tal como el permiso para &quot;Agregar&quot;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now for the real action.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, por la acción real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You define a function that is required by Zope and CMF internals to initialize our content type(s):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>usted define una función que es requerida por Zope e internos CMF para arrancar nuestros tipos de contenido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first part of the code of this function generates the &lt;e0&gt;content types&lt;/e0&gt;, the &lt;e1&gt;constructors&lt;/e1&gt; and the &lt;e2&gt;Factory-based Type Informations&lt;/e2&gt; (or FTIs) required to make your types work with the CMF:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La primera parte del código de esta función genera el &lt;e0&gt;content types (tipos de contenido)&lt;/e0&gt;, los &lt;e1&gt;constructors (constructores)&lt;/e1&gt; y las &lt;e2&gt;Factory-based Type Informations (nformación tipo base-fábrica)&lt;/e2&gt; (o FTI) requerido para hacer que sus tipos trabajen con el CMF:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second part instantiates an object of the class ContentInit (from CMFCore), and registers your types in the CMF:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La segunda parte instancia un objeto de la clase ContentInit (de CMFCore), y registra sus tipos en el CMF:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Handling several content types</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Manejando varios tipos de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a better way to write the code that initializes the content type class with its &quot;Add&quot; permission and constructor, so that it still works if you define several content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay una mejor manera de escribir el código que arranca la clase de tipo de contenido con su permiso de &quot;Agregar&quot; y constructor, para que todavía funcione si usted define varios tipos de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful if you plan to later augment your product with additional types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es útil si va aumentar después su producto con tipos adicionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the improved code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está el código mejorado:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;# We want to register each type with its own permission,

&lt;/e0&gt;    &lt;e1&gt;# this will afford us greater control during system

&lt;/e1&gt;    &lt;e2&gt;# configuration/deployment (credit : Ben Saller)



&lt;/e2&gt;    allTypes = zip(content_types, constructors)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;# Queremos registrar cada tipo con su permiso propio,

&lt;/e0&gt;    &lt;e1&gt;# esto nos permitirá mejor control durante la configuración/implementación

&lt;/e1&gt;    &lt;e2&gt;# del sistema (créditos : Ben Saller)



&lt;/e2&gt;    allTypes = zip(content_types, constructors)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can use the &quot;ADD_CONTENT_PERMISSIONS[atype.portal_type]&quot; construct because ADD_CONTENT_PERMISSIONS references a dictionary in which the keys are the potential content types names.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Podemos usar la construcción &quot;ADD_CONTENT_PERMISSIONS[atype.portal_type]&quot; ya que ADD_CONTENT_PERMISSIONS hace referencia a un diccionario en cual las llaves son potenciales tipos de contenidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The zip() function is a Python built-in that pairs up elements of two lists.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La función zip() es un integrado de Python que empareja elementos de dos listas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, &quot;allTypes&quot; will be a list of tuples containing a content type from &quot;content_types&quot; and the corresponding constructor from &quot;constructors&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, &quot;allTypes&quot; será una lista de tuplas que contienen un tipo de contenido de &quot;content_types&quot; y el constructor correspondiente de &quot;constructores&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have several content types, you should not forget to import each content module, as is done for the message example discussed here !</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si tiene varios tipos de contenido, no debe olvidarse de importar cada módulo de contenido, como se hace con ¡el ejemplo de mensajes discutido aquí!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The content package and its modules</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El paquete de contenido y sus módulos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we are ready for the core of the product, i.e. the content class definition module (content/message.py).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora estamos listos para el core del producto, es decir, el módulo de definición de clase de contenido (content/message.py).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since it provides a Python (sub)package, the 'content' directory contains 2 modules:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya que proporciona un (sub)paquete Python, el directorio &quot;content&quot; contiene 2 módulos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The message module</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El módulo message</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First imports we need</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar necesitamos imports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We start the message module by adding the general Zope-related imports we need, such as the &lt;c0&gt;implements&lt;/c0&gt; function from the &lt;c1&gt;zope.interface&lt;/c1&gt; module:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Iniciamos el módulo message agregando imports gnerales Zope-relacionados que necesitemos, tal como la función &lt;c0&gt;implements&lt;/c0&gt; desde el módulo &lt;c1&gt;zope.interface&lt;/c1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We need to use a few classes and/or functions provided by the core of our codebase, i.e. CMF/Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenemos que utilizar algunas clases y/o funciones proporcionadas por el core de nuestra codebase, es decir, CMF/Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to have access to all the classes and helper functions made publicly available by Archetypes, by importing its faÃ§ade or API module (&lt;c0&gt;Products.Archetypes.atapi&lt;/c0&gt;) this way:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es posible tener acceso a todas las clases y funciones de ayuda a disposición del público por Arquetipos, mediante la importación de su faÃ§ade o módulo API (&lt;c0&gt;Products.Archetypes.atapi&lt;/c0&gt;) de esta manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is always a good idea to have an i18n-enabled application.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Siempre es una buena idea tener una aplicación i18n-enabled.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To start using Zope's i18n support, let's import the MessageFactory object created in the product's startup module:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para comenzar a utilizar el soporte i18n de Zope, importemos el objeto MessageFactory creado en el módulo startup de productos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The MessageFactory referenced with the &lt;c0&gt;_&lt;/c0&gt; symbol can now be used to provide i18nized labels, descriptions, and all the miscellaneous text snippets that are injected in the UI, also known as &quot;messages&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El MessageFactory referido con el símbolo &lt;c0&gt;_&lt;/c0&gt; ahora puede ser utilizado para proporcionar rótulos i18nized, descripciones, y todos los fragmentos de texto misceláneos que se inyectan en la interfaz (UI) de usuario, también conocido como &quot;messages&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a content type implementation, this is useful for UI widgets; for example to define the label of the content title field widget, we could define &lt;c1&gt;label = _(u'Title')&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para una implementación de tipo de contenido, esto es útil para los widgets de UI, por ejemplo para definir el rótulo del widget de campo de título de contenido, podríamos definir &lt;c1&gt;label = _(u'Title')&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(See later for how we make use of this tool/practice.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Vea más adelante para saber cómo hacemos uso de esta herramienta/práctica).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ATContentTypes-based schema definition</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definición de esquema base-ATContentTypes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can base your implementation directly on these stock Archetypes schemas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede basar su implementación directamente en estos esquemas de stock de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you can add better support for Plone's UI and content management policies (such as the parameters that allow showing/hiding contents in the navigation menu), by basing the implementation on ATContentTypes' base schema, &lt;c0&gt;ATContentTypeSchema&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pero usted puede agregar mejor soporte para UI de Plone y políticas de administración de contenido (como los parámetros que permiten mostrar/ocultar contenidos en el menú de navegación), al basar la ejecución en el esquema base de ATContentTypes, &lt;c0&gt;ATContentTypeSchema&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To be compatible with that schema, you will also need to inherit from ATContentTypes' ATCTContent base class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para que sea compatible con ese esquema, también tendrá que heredar de clase base ATCTContent de ATContentTypes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's add the import of modules we need for that:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a agregar el import de módulos que necesitamos para eso:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, we import things internal to our product package, such as our defined interface(s) and the configuration module (for access to things such as &lt;c0&gt;PROJECTNAME&lt;/c0&gt; and &lt;c1&gt;MESSAGE_PRIORITIES&lt;/c1&gt;):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces importamos las cosas internas a nuestro paquete de producto, tal como nuestras interfaz(ces) definidas y el módulo configuration (para acceder a cosas como &lt;c0&gt;PROJECTNAME&lt;/c0&gt; y &lt;c1&gt;MESSAGE_PRIORITIES&lt;/c1&gt;):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we have everything we need to start building the schema, and then the class that will use it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, nosotros tenemos todo lo necesario para empezar a construir el esquema, y ​​luego la clase que lo va a usar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We start out by copying ATContentTypes' &lt;c0&gt;ATContentTypeSchema&lt;/c0&gt;, and we extend it by adding our specific fields and/or overriden field properties.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Comenzamos por copiar &lt;c0&gt;ATContentTypeSchema&lt;/c0&gt; de ATContentTypes, y lo extendemos por la adición de nuestros campos específicos y/o sustituir propiedades de campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notes:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Notas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To instantiate an Archetypes schema object, you pass a tuple of field objects to the 'Schema' class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para instanciar un objeto de esquema Arquetipos, se pasa una tupla de objetos de campo a la clase &quot;Schema&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We define the body of the InstantMessage object using a RichWidget, so the user can use formatting with a WYSIWYG editor.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definimos el cuerpo del objeto InstantMessage usando un RichWidget, para que el usuario pueda dar formato con el editor WYSIWYG.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full list of out-of-the-box available Fields and Widgets can be found &lt;a0&gt;in the Fields section at the end of the manual&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La lista completa de campos y widgets disponibles de paquete &lt;a0&gt;en la sección Campos al final del manual&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find more 3rd party fields and widgets &lt;a1&gt;here&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a1&gt;Aquí&lt;/a1&gt; puede encontrar más campos y widgets de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content-type class definition</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definición de clase de tipo de contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The last step is to create the class for the InstantMessage content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El último paso es crear la clase para el contenido InstantMessage.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It inherits from ATContentTypes' ATCTContent, which itself is based on AT's BaseContent, which automatically gives its 'id' and 'title' attributes, and the entire Dublin Core metadata set (Title, Description, Creator, CreationDate, etc):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hereda desde ATCTContent de ATContentTypes, que por sí mismo es basado en BaseContent de AT, el cual automáticamente da sus atributos &quot;id&quot; y &quot;título&quot;, y el completo conjunto de metadatos Dublin Core (título, descripción, creador, fecha de creación, etc):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first information we add for the class definition is saying that it implements the &lt;c0&gt;IInstantMessage&lt;/c0&gt; interface that we have previously defined (in &lt;c1&gt;interfaces.py&lt;/c1&gt;) and imported.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La primera información que agregamos para la definición de clase es decir; que implementa la interfaz &lt;c0&gt;IInstantMessage&lt;/c0&gt; que previamente hemos definido (en &lt;c1&gt;interfaces.py&lt;/c1&gt;) e importado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next thing is assigning the reference of the Archetypes schema, using the &lt;c0&gt;schema&lt;/c0&gt; class attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El siguiente paso es la asignación de la referencia del esquema de Arquetipos, usando el atributo de clase &lt;c0&gt;schema&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The content class definition is done.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La definición de clase de contenido está lista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, we are ready to activate the content type in Archetypes' internal types registry.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, estamos listos para activar el registro de tipos internos de Arquetipos para tipos de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done using the helper function called &lt;c0&gt;registerType&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace mediante la función de ayuda llamada &lt;c0&gt;registerType&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Congratulations!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Felicitaciones!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have just created your first Archetype for Plone!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Acaba de crear su primer Arquetipo para Plone!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It allows you to handle the content of an instant message with Zope-based persistent objects which:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto le permite manejar el contenido de un mensaje instantáneo con objetos Zope-base persistentes que:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>can be added within your Plone site,</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>pueden ser añadidos dentro su sitio Plone,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>published by the Zope Publisher, which means you can visit them via their URLs, etc...</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>publicados por el Zope Publisher, lo que significa que usted puede visitarlos mediante sus URL, etc...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>searched since they are automatically indexed,</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>buscados ya que estos son automáticamente indexados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But wait!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Pero espere!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have some final packaging work to do to ease installation of the product within your Plone site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted tiene un poco de trabajo de empaquetado final para facilitar la instalación del producto dentro de su sitio Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the content class level, you could also provide the 'actions' attribute useful for defining the settings of the type's actions (for the portal_actions tool).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A nivel de clase de contenido, también podría proporcionar el atributo 'actions' útil para definir las configuraciones de las acciones de tipos (para la herramienta portal_actions).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone 3, this is no more needed, since this is part of the FTI's configuration details, and should be provided using GenericSetup, in the types-related XML files (i.e. 'profiles/default/types/InstantMessage.xml').</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Plone 3, esto es más necesitado, ya que es parte de los detalles de configuración FTI, y debería ser proporcionado usando GenericSetup, en los archivos tipos-relacionados XML (ejemplo, &quot;profiles/default/types/InstantMessage.xml&quot;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Same for the aliases.&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;Lo mismo para los alias.&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The trick here is to simply import the message module so that all the code of that module gets interpreted as soon as the Python interpreter initializes the package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El truco aquí es simplemente importar el módulo de mensaje para que todo el código de ese módulo sea interpretado tan pronto como el intérprete de Python inicie el paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a custom view for the content</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregando una vista personalizada para el contenido</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing the custom presentation template for the InsantMessage, using Zope's browser layer mechanism.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporcionar una plantilla de presentación personalizada para InstantMessage, usando el mecanismo de capa para el navegador de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The browser layer concept</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El concepto de capa de navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A browser layer is a concept introduced by Zope Component Architecture (Zope 3), and which can be used in Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una capa de navegador es un concepto introducido por la Arquitectura Zope de componente (Zope 3), y la cual puede ser utilizada en Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is useful for registering views and resources (images, CSS, JS) for the site, in a way that they can override default elements (which are implicitly registered for the default browser layer) or be overriden when needed, even through the ZMI.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es útil para el registro de vistas y recursos (imágenes, CSS, JS) para el sitio, de manera que puede anular(sustituir) los elementos por defecto (que son implícitamente registrados para la capa de navegador por defecto) o ser anulados cuando sea necesario, incluso a través de la ZMI.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;A browser layer is similar in purpose to a CMF skin layer, but is implemented differently&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;Una capa de navegador es similar en propósito a una capa skin de CMF, pero se implementa de manera distinta&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a browser layer to your product, you need 3 steps:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para añadir una capa de navegador para su producto, usted necesita 3 pasos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define the marker interface for the browser layer (for example, &lt;c0&gt;example.archetype.interfaces.IInstantMessageSpecific&lt;/c0&gt;.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definir la interfaz de marcador para la capa de navegador (por ejemplo &lt;c0&gt;example.archetype.interfaces.IInstantMessageSpecific&lt;/c0&gt;.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add an XML file in your extension profile named &lt;c0&gt;browserlayer.xml&lt;/c0&gt; providing the browser layer settings to the site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregar un archivo XML en su perfil de extensión denominado &lt;c0&gt;browserlayer.xml&lt;/c0&gt; proporcionando las configuraciones de la capa de navegador para su sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e1&gt;(This step is covered later as part of the various product setup details.)&lt;/e1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e1&gt;(Este paso se describe más adelante como parte de los distintos detalles para las configuraciones de productos.)&lt;/e1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Register (using ZCML) your browser views, templates and resources.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Registrar (usando ZCML) sus vistas de navegador, plantillas y recursos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customization for developers</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Personalización para desarrolladores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more about browser layer techniques, check &lt;a0&gt;this tutorial&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para más información sobre las técnicas de la capa de navegador, consulte &lt;a0&gt;este tutorial&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining the browser layer interface</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definiendo la interfaz de capa de navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add a marker interface for the browser layer (in &lt;c0&gt;interfaces.py&lt;/c0&gt;):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregue una interfaz de marcador para la capa de navegador (in &lt;c0&gt;interfaces.py&lt;/c0&gt;):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from plone.theme.interfaces import IDefaultPloneLayer



class IInstantMessageSpecific(IDefaultPloneLayer):

    &quot;&quot;&quot;Marker interface that defines a Zope 3 skin layer for this product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>from plone.theme.interfaces import IDefaultPloneLayer



class IInstantMessageSpecific(IDefaultPloneLayer):

    &quot;&quot;&quot;interfaz de marcador que define a una capa de skin Zope 3 para este producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding and registering the browser template</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregar y registrar la plantilla de navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To provide a custom view template for your content type, you need a page template called &lt;c0&gt;instantmessage.pt&lt;/c0&gt; in the &lt;c1&gt;browser/&lt;/c1&gt; directory, and a ZCML declaration in the &lt;c2&gt;configure.zcml&lt;/c2&gt; to associate the template to the &lt;c3&gt;IInstantMessageSpecific&lt;/c3&gt; Zope 3 skin layer.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para proporcionar una plantilla de vista personalizada para su tipo de contenido, usted necesita una plantilla de página llamada &lt;c0&gt;instantmessage.pt&lt;/c0&gt; en el directorio &lt;c1&gt;browser/&lt;/c1&gt;, y una declaración ZCML en el &lt;c2&gt;configure.zcml&lt;/c2&gt; para asociar la plantilla a la capa de skin &lt;c3&gt;IInstantMessageSpecific&lt;/c3&gt; Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the example template code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está el ejemplo del código de la plantilla:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new methods we use on the content object (getPriority, getBody, etc), called the &quot;accessors&quot;, are generated by Archetypes as part of its internal mechanisms, based on the field definition in the content schema; so if the field is called 'priority', there is a generated method called 'getPriority' responsible to return the stored value on the object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los nuevos métodos que utilizamos en el objeto de contenido (getpriority, getBody, etc), llamado el &quot;accessors&quot;, son generados por Arquetipos como parte de sus mecanismos internos, en base a la definición de campo en el esquema de contenido, de modo que si el campo se llama &quot;prioridad&quot;, hay un método generado llamado &quot;getPrioridad&quot; responsable de devolver el valor almacenado en el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the code of the method is not available somewhere for modification ; &quot;generated&quot; here means it is available in the server's memory, within Archetypes engine's registries, when the Zope server has started.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que el código del método no está disponible en alguna parte para la modificación, &quot;generated (generado)&quot; aquí significa que está disponible en la memoria del servidor, dentro de los registros del motor de Arquetipos, cuando el servidor Zope ha iniciado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the product installation step, which we still have to discuss (see later), Plone should be able to find this template and use it as the content object's default view when you invoke the content's URL.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tras el paso de instalación del producto, que todavía tenemos que discutir (ver más adelante), Plone debe ser capaz de encontrar esta plantilla y usarla como la vista por defecto del objeto de contenido cuando invoca la URL del contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing the product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalando del producto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ensuring the product elements (types, browser layers, resources) are correctly installed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegurar que los elementos de contenido (tipos, capas del navegador, recursos) están correctamente instalados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this part, we will provide the code to be executed when the integrator &quot;adds&quot;, i.e. installs, the InstantMessage product to the Plone site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En esta parte, vamos a proporcionar el código que se ejecutará cuando el integrador &quot;agrega&quot;, esto es, instalar el producto InstantMessage al sitio Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This aspect of the product code is called the &quot;Extension Profile&quot; (or &quot;Setup Profile&quot;) and is managed under the hood by a machinery called GenericSetup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este aspecto del código de producto es llamado &quot;Extension Profile&quot; (perfil de extensión) o &quot;Setup Profile&quot; (perfil de instalación) y el motor que lo maneja se llama GenericSetup.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more about GenericSetup, its possibilities, and how a developer uses it, read the &lt;a0&gt;GenericSetup tutorial&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para más información sobre GenericSetup, sus posibilidades, y cómo un desarrollador lo usa, lea el &lt;a0&gt;tutorial de GenericSetup &lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The setup profile files (profiles/default)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los archivos del perfil de instalación (profiles/default)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The setup profile is composed of a set of GenericSetup XML files containing setup declarations.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El perfil de instalación se compone de un conjunto de archivos GenericSetup XML que contienen las declaraciones de la instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type declaration and definition</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tipo de declaración y definición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we provide the files needed for adding the types to CMF's types registry (portal_types): &lt;c0&gt;types.xml&lt;/c0&gt; and &lt;c1&gt;types/InstantMessage.xml&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar, proporcionamos los archivos necesarios para agregar los tipos de registro de CMF (portal_types): &lt;c0&gt;types.xml&lt;/c0&gt; and &lt;c1&gt;types/InstantMessage.xml&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;c0&gt;types.xml&lt;/c0&gt;, within the &lt;c1&gt;&lt;object name=&quot;portal_types&quot; ... /&gt;&lt;/c1&gt; element, add the setup code for the type(s) you want to install:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;c0&gt;types.xml&lt;/c0&gt;, dentro del elemento &lt;c1&gt;&lt;object name=&quot;portal_types&quot; ... /&gt;&lt;/c1&gt;, agregue el código de instalación para el tipo(s) que desea instalar:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;name&lt;/e0&gt; property of the &lt;c1&gt;&lt;object&gt;&lt;/c1&gt; node constitutes the called &lt;e2&gt;portal type&lt;/e2&gt; name of the content-type, a CMF concept which supports two things:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;e0&gt;name&lt;/e0&gt; del nodo &lt;c1&gt;&lt;object&gt;&lt;/c1&gt; constituye el llamado nombre &lt;e2&gt;portal type&lt;/e2&gt; del tipo de contenido, un concepto CMF que soporta dos cosas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dynamic typing: objects can change their content type during their lifetime.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tecleado dinámico: los objetos pueden cambiar su tipo de contenido durante toda su vida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do this use &lt;c0&gt;_setPortalTypeName(&lt;type&gt;&lt;/c0&gt;&lt;c1&gt;)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ser esto use &lt;c0&gt;_setPortalTypeName(&lt;type&gt;&lt;/c0&gt;&lt;c1&gt;)&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can have arbitrarily many different content types using the same base class (and having therefore the same &lt;c0&gt;meta_type&lt;/c0&gt;) but differing in their Factory Type Information (FTI) settings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede tener, de manera arbitraria, distintos tipos de contenido usando las misma clase base (y por lo tanto teniendo &lt;c0&gt;meta_type&lt;/c0&gt;) pero que difieren en sus configuraciones FTI.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;portal type&lt;/e0&gt; name was formerly set in a content-type class attribute called &lt;e1&gt;portal_type&lt;/e1&gt;, which is no longer necessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre &lt;e0&gt;portal type&lt;/e0&gt; fue formalmente definido en un atributo de clase para tipo de contenido denominado &lt;e1&gt;portal_type&lt;/e1&gt;, el cual ya no es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the file inside the &lt;c0&gt;profiles/default/types&lt;/c0&gt; folder must match the portal type name, with spaces converted to underscores whenever necessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre del archivo dentro de la carpeta &lt;c0&gt;profiles/default/types&lt;/c0&gt; debe coincidir con el nombre del tipo de portal, con espacios convertidos en guiones bajo cuando sea necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, in&lt;c1&gt; types/InstantMessage.xml&lt;/c1&gt;, add the code for the InstantMessage FTI object:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que en&lt;c1&gt; types/InstantMessage.xml&lt;/c1&gt;, agregue el código para el objeto FTI de InstantMessage:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In these first lines we give the content-type a title and a description.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En estas primeras líneas le damos al tipo de contenido; un título y una descripción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;title&lt;/e0&gt; property indicates the user-friendly name of the content-type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;e0&gt;title (título)&lt;/e0&gt; indica nombre amigable-usuario del tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is what's supposed to be used in the user interface, and can be accessed using the &lt;c1&gt;&lt;fti&gt;.title_or_id()&lt;/c1&gt; or the &lt;c2&gt;Type()&lt;/c2&gt; methods, which both return the content-type title if it exists or the content-type id otherwise.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es lo que se supone que se utilizará en la interfaz de usuario, y se puede acceder mediante &lt;c1&gt;&lt;fti&gt;.title_or_id()&lt;/c1&gt; o los métodos &lt;c2&gt;Type()&lt;/c2&gt;, que devuelven el título del tipo de contenido si existe, o el id del tipo de contenido en caso de que haya título.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like portal type, this property was formerly set in a the content-type class attribute called &lt;c3&gt;archetype_name&lt;/c3&gt;, which is no longer neccessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como la tipo de portal, esta propiedad se ha establecido anteriormente en un atributo de clase para tipo de contenido llamado &lt;c3&gt;archetype_name&lt;/c3&gt; , el cual ya no es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;meta_type&lt;/c0&gt; property of the object is a Zope concept to organize object classification or containment.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las propiedades &lt;c0&gt;meta_type&lt;/c0&gt; del objeto es un concepto Zope para organizar clasificación de objeto o contención.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For historical reasons, it is used in CMF in some places because first versions of CMF didn't have today's &lt;c1&gt;portal_type&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por razones históricas, se usa en algunos lugares del CMF, porque las primeras versiones de CMF no tenían el &lt;c1&gt;portal_type&lt;/c1&gt; de hoy en día.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also note that Archetypes uses the content-type class name as the meta_type value, unless given explicitly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También tenga en cuenta que Arquetipos utiliza el nombre de la clase para tipo de contenido como el valor meta_type, a menos que se de manera explícita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;content_icon&lt;/c0&gt; property specifies the icon image file which will be shown in the Plone UI for this content-type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;c0&gt;content_icon&lt;/c0&gt; especifica el archivo de imagen de icono que se muestra en la interfaz de usuario de Plone para este tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This icon image file must be accessible from the context of the content-type, and therefore should be placed into a CMF skin layer (the CMF way) or in a browser resource directory (the Zope 3 way).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este archivo de imagen de icono debe ser accesible desde el contexto del tipo de contenido, y por lo tanto debe ser colocado en una capa de skin del CMF (el camino del CMF) o en un directorio de recursos de navegador (el camino Zope 3).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;factory&lt;/c0&gt; property indicates the factory function which will be used to create and initialize new content objects of this type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;c0&gt;factory&lt;/c0&gt; indica la función factory que se utilizará para crear e iniciar nuevos objetos de este tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This factory is automatically generated by the Archetypes framework, when the product is initialized (via the code in the startup module), and is always named &lt;c1&gt;add&lt;content-meta-type&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta factory es generada automáticamente por el framework de Arquetipos, cuando el producto se iniciado (mediante el código en el módulo startup), y siempre es llamado &lt;c1&gt;add&lt;content-meta-type&gt;&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The factory is also associated with a certain product by means of the &lt;c2&gt;product&lt;/c2&gt; property.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La factory también está asociada con un determinado producto mediante medios de la propiedad &lt;c2&gt;product&lt;/c2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;global_allow&lt;/c0&gt; property determines if the content-type will be available to be added from anywhere in the site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;c0&gt;global_allow&lt;/c0&gt; determina si el tipo de contenido estará disponible para ser añadido a cualquier parte del sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;filter_content_types&lt;/c0&gt; property, paired with allowed_content_types, controls what content-types will be addable inside the current one.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La propiedad &lt;c0&gt;filter_content_types&lt;/c0&gt;, se junta con allowed_content_types, controla que tipos de contenido se agregarán al actual parte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With &lt;c0&gt;allow_discussion&lt;/c0&gt;, we specify whether or not comments will be allowed by default on this content-type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con &lt;c0&gt;allow_discussion&lt;/c0&gt;, se especifica si los comentarios serán permitido o no por defecto en este tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we define CMF views (templates) and aliases that map content-type methods to views.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí se define vistas CMF (plantillas) y los alias que mapean los métodos de tipos de contenidos para las vistas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;action&gt;&lt;/c0&gt; elements register type-specific actions for the content-type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los elementos &lt;c0&gt;&lt;action&gt;&lt;/c0&gt; registran las acciones tipo-específicas para los tipos de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;object&lt;/c1&gt; category makes the render as tabs in the Plone UI.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La categoría &lt;c1&gt;object&lt;/c1&gt; hace el renderizar como pestañas en la interfaz de usuario de Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;url_expr&lt;/c0&gt; is a &lt;a1&gt;TALES expression&lt;/a1&gt; that defines the URL from where the action will be triggered and should match one of the method aliases defined above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &lt;c0&gt;url_expr&lt;/c0&gt; es un &lt;a1&gt;TALES expression&lt;/a1&gt; que define el URL desde donde la acción se dispara y debe coincidir con uno de los alias (de métodos) definido anteriormente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, the &lt;c2&gt;edit&lt;/c2&gt; action points to &lt;c3&gt;string:${object_url}/edit&lt;/c3&gt;, which means that if you are at &lt;c4&gt;/path/to/object&lt;/c4&gt; and click &lt;c5&gt;edit&lt;/c5&gt;, you will go to &lt;c6&gt;/path/to/object/edit&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto la acción &lt;c2&gt;edit&lt;/c2&gt; apunta a &lt;c3&gt;string:${object_url}/edit&lt;/c3&gt;, lo que significa que si usted está en &lt;c4&gt;/path/to/object&lt;/c4&gt; y hace clic en &lt;c5&gt;edit&lt;/c5&gt;, irá a &lt;c6&gt;/path/to/object/edit&lt;/c6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c7&gt;/edit&lt;/c7&gt; then gets recognized as a method alias, which points to the page template &lt;c8&gt;atct_edit&lt;/c8&gt;, causing Zope to render &lt;c9&gt;/path/to/object/atct_edit&lt;/c9&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;c7&gt;/edit&lt;/c7&gt; entonces es reconocido como un alias de método, lo que apunta a la plantilla de página &lt;c8&gt;atct_edit&lt;/c8&gt;, causando que Zope renderice &lt;c9&gt;/path/to/object/atct_edit&lt;/c9&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;permission /&gt; element specifies a guard permission for this action.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El elemento &lt;permission /&gt; especifica un permiso de guardia para esta acción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the user's role doesn't have this permission, the action won't be available and the corresponding action tab won't be shown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si el rol usuario no tiene este permiso, la acción no estará disponible y la pestaña de acción correspondiente no se mostrará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the former criteria, the &lt;c0&gt;condition_expr&lt;/c0&gt; is a TALES expression which will be evaluated to decide if the action is available or not.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además de los criterios anteriores, &lt;c0&gt;condition_expr&lt;/c0&gt; es una expresión TALES la cual va a ser evaluada para decidir si la acción está disponible o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;visible&lt;/c0&gt; attribute indicates wheter the action tab will be visible or hidden.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El atributo &lt;c0&gt;visible&lt;/c0&gt; indica si la pestaña de acción será mostrada o escondida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it's set to False, the tab won't appear even when the action is available, but the exposed page will still be accesible from the associated URL.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si se establece en False, la pestaña no aparecerá incluso cuando la acción esté disponible, pero la página expuesta seguirá siendo accesible desde la dirección URL asociada. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining new content-type actions this way, i.e. using GenericSetup, supersedes the old &lt;c0&gt;updateActions&lt;/c0&gt; function from &lt;c1&gt;ATContentTypes.content.base&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La definición de nuevas acciones para tipos de contenido de esta manera, es decir, usando GenericSetup, reemplaza a la antigua función &lt;c0&gt;updateActions&lt;/c0&gt; de &lt;c1&gt;ATContentTypes.content.base&lt;/c1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't worry.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No se preocupe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't have to type all this XML each time you create a new content-type; since most of it is boilerplate (XML is very verbose) you can copy &amp; paste an already working example (like &lt;a0&gt;the CMFPlone ones&lt;/a0&gt;) and modify only the changing bits.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted no tiene que escribir todo este XML cada vez que cree un nuevo tipo de contenido, ya que la mayoría es repetitivo (XML es muy verboso) se puede copiar y pegar un ejemplo que ya esté trabajando (como &lt;a0&gt;los CMFPlone&lt;/a0&gt;) y modificar sólo algunos detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type factory</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tipo factory</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also need the file useful for setting the type against Plone's factory tool (portal_factory): &lt;c0&gt;factorytool.xml&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También necesitamos el archivo útil para configurar el tipo contra la herramienta factory de Plone (portal_factory): &lt;c0&gt;factorytool.xml&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is needed so that when a user adds a content object and then clicks Cancel in the edit form, a stale object won't be lying around.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es necesario para cuando un usuario agrega un objeto de contenido y luego haga clic en Cancelar en el formulario de edición, un objeto obsoleto no estará rondando por ahí.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles - Permissions mapping</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Roles - Mapeo de permisos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For our content type(s) to be usable, we need to assign the required &quot;Add&quot; permission to the Plone site's default roles: Contributor, Owner, and Manager.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para que nuestro tipo(s) de contenido sea utilizable, es necesario asignar el necesario permiso de &quot;añadir&quot; para roles predeterminados del sitio Plone: ​​Contribuyente, Propietario y Administrador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done using the &lt;c0&gt;rolemap.xml&lt;/c0&gt; file as follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace utilizando el archivo &lt;c0&gt;rolemap.xml&lt;/c0&gt; de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Browser skin layer</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Capa skin de navegador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to install our browser skin layer, we also add a &lt;c0&gt;browserlayer.xml&lt;/c0&gt; file with the following code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con el fin de instalar nuestra capa skin de navegador, además agregamos un archivo &lt;c0&gt;browserlayer.xm&lt;/c0&gt; con el siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Registering our setup profile</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Registrando nuestro perfil de instalación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This last step ensures everything can work.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este último paso asegura que todo funcione.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We update the package's &lt;c0&gt;configure.zcml&lt;/c0&gt; file with the code snippet that will load the extension profile:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Actualizamos el archivo &lt;c0&gt;configure.zcml&lt;/c0&gt; de paquetes con el fragmento de código que cargará el perfil de extensión:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Restarting Zope</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Reiniciando Zope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you have a first version of your product ready to be tested, and installed via your buildout, you need to (re)start Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora que tiene una primera versión de su producto lista para ser probada, e instalada a través de su buildout, usted necesita reiniciar Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quick-installing the product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalación rápida del producto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Back in the Plone configuration (or Plone control panel), when you visit the &quot;Add/Remove Products&quot; interface or the &lt;e0&gt;portal_quickinstaller&lt;/e0&gt; tool through the ZMI (at the root of the site), you can see the product show up under the category of &quot;installable products&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la configuración de Plone (o panel de control de Plone), cuando visite la interfaz de agregar o remover productos o la herramienta &lt;e0&gt;portal_quickinstaller&lt;/e0&gt; a través de la ZMI (en el root del sitio), usted puede ver que el producto de se muestra bajo la categoría de &quot;installable products&quot; (productos &quot;instalables&quot;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Select and click the button to install the product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Seleccione y haga clic para instalar el producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If everything goes fine, the product should be installed, and you're ready to start using it!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si todo sale bien, el producto debe ser instalado, y ya ¡está listo para comenzar a usarlo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Basic integration tests</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pruebas de integración básicas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No product is complete without tests.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ningún producto está completo sin una prueba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build high-quality software, you &lt;e0&gt;must&lt;/e0&gt; provide automatic tests - often known as &quot;unit&quot; tests (though tests for Archetypes products tend to be &quot;integration&quot; tests, strictly speaking).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para construir software de alta calidad, usted &lt;e0&gt;debe&lt;/e0&gt; proporcionar pruebas automáticas, generalmente conocidas como pruebas &quot;unitarias&quot;, (sin embargo las pruebas para productos de Arquetipos tienden a ser pruebas unitarias, técnicamente hablando).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;tutorial on testing and test-driven development&lt;/a0&gt; is essential reading if you want to write high-quality software (and you don't know the techniques it advocates already).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &lt;a0&gt;tutorial en pruebas y desarrollo basado en pruebas&lt;/a0&gt; esencialmente tiene que leerlo, si quiere escribir software de alta calidad (y usted no conoce las técnicas que ya defiende).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to it for details.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por favor, consulte para más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example.archetype product contains basic tests that prove that the product is properly installed, that it registers its types, and that an InstantMessage object can actually be instantiated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El producto example.archetype contiene pruebas básicas que demuestran que el producto está correctamente instalado, que registra sus tipos, y que un objeto InstantMessage en realidad puede ser instanciado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it contained more functionality, there would have been more tests, but even simple integration tests like this can be surprisingly useful - if you accidentally broke the content type with some change, you'd notice that it failed to install or instantiate.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si este contiene más funcionalidad, habría habido más pruebas, pero incluso pruebas simples de integración como esta puede ser sorprendentemente útil; si accidentalmente daño el tipo de contenido con algún cambio, se daría cuenta de que no se instala o no se instancia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tests are in the &quot;tests&quot; directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las pruebas están en el directorio de pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file &quot;base.py&quot; contains some base classes that are used for tests, to ensure the site is properly set up:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El archivo &quot;base.py&quot; contiene algunas clases base que se utilizan para pruebas, para asegurar que el sitio está configurado correctamente:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Set up the package and its dependencies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Configure el paquete y sus dependencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The @onsetup decorator causes the execution of this body to be deferred</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El decorador @onsetup causa que la ejecución de este cuerpo sea aplazada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>until the setup of the Plone site testing layer.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>hasta el setup de la capa de pruebas del sitio Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could have created our</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pudimos haber creado nuestra</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>own layer, but this is the easiest way for Plone integration tests.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>propia capa, pero esta es la manera más fácil para las pruebas Plone de integración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Base class for integration tests.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Clase base para pruebas de integración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may provide specific set-up and tear-down operations, or provide</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede proporcionar operaciones específicas de montaje y desmontaje, o proporcionar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>convenience methods.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>métodos de conveniencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actual tests are in &quot;test_setup.py&quot;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La pruebas se encuentran en &quot;test_setup.py&quot;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run these tests within your buildout environment:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ejecutar estas pruebas dentro de su entorno buildout:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may see output like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede ver una salida como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If there was an error with one or more of the tests, you'd be told here!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si hubiera un error con una o más pruebas, ¡se le notificaría aquí!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to the &lt;a0&gt;testing tutorial&lt;/a0&gt; for more about writing tests - and writing &lt;e1&gt;good&lt;/e1&gt; tests - and how to run them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por favor revise el &lt;a0&gt;tutorial de pruebas&lt;/a0&gt; para más sobre la escritura de pruebas, y escribir &lt;e1&gt;buenas&lt;/e1&gt; pruebas, y por supuesto como ejecutarlas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Troubleshooting: solucionar problemas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When creating new content types, many factors can silently fail due to human errors in the complex content type setup chain and security limitations.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando se crean nuevos tipos de contenido, hay muchos factores que discretamente pueden fallar debido a errores humanos en la compleja cadena de configuración para tipo de contenido y limitaciones de seguridad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The effect is that you don't see your content type in Add drop down menu.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La consecuencia es que usted no ve el tipo de contenido en el menú desplegable de añadir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some tips for debugging.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay algunos consejos para la depuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is your product broken due to Python import time errors?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿su producto está dañado debido a errores de tiempos de importación en Python?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check the *Zope Management Interface (ZMI from now on) â Control Panel â Products*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise la *Interfaz de Administración de Zope (ZMI de ahora en adelante) &gt;Panel de control &gt;Productos*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Turn on Zope debugging mode to trace import errors.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Active el modo de depuración de Zope para localizar errores de importación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see error messages directly in the console with buildout, use *bin/instance fg*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ver mensajes de error directamente en la consola con buildout, utilice *bin/instance fg*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have you rerun the quick installer (GenericSetup) after creating/modifying the content type?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿ha usted ejecutado nuevamente el quick installer (GenericSetup) después de crear/modificar el tipo de contenido?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not, (re)install the product from the *Plone Control Panel â Add-on Products* or from the *ZMI â portal_quickinstaller*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si no, (re)instale el producto desde el Panel de Control de Plone, y agregar productos o desde la ZMI &gt; portal_quickinstaller*.  </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do you have a correct Add permission for the product?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿tiene usted un permiso para Agregar adecuado para el producto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check the call of the ``ContentInit()`` method inside the *__init__.py* file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise la llamada del método ``ContentInit()`` dentro del archivo *__init__.py*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See `The startup module &lt;http://plone.org/documentation/manual/archetypes-developer-manual/a-semi-realistic-example/the-startup-module&gt;`_.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea `El módulo startup &lt;http://plone.org/documentation/manual/archetypes-developer-manual/a-semi-realistic-example/the-startup-module&gt;`_.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does it show up in the portal factory?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿se muestra en el factory del portal?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check *ZMI â portal_factory* and *factorytool.xml*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise *ZMI &gt; portal_factory* y *factorytool.xml*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is it correctly registered as a portal type and implictly addable?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Está correctamente registrado como un tipo de portal y implícitamente es &quot;agregable&quot;? </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check *ZMI â portal_types*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise *ZMI &gt; portal_types*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check *default/profiles/type/yourtype.xml*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise *default/profiles/type/yourtype.xml*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does it have a correct product name defined?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Posee un nombre correcto de producto definido?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does it have a proper factory method?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Posee un método factory adecuado?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check *ZMI â types_tool*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise *ZMI &gt; types_tool*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check Zope logs for ``_queryFactory`` and import errors.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise los registros de Zope por ``_queryFactory`` y errores de importación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does it register itself with Archetypes?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Se registra así mismo con Arquetipos? </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check *ZMI â archetypes_tool*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise *ZMI &gt; archetypes_tool*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure that you have ``ContentInit`` properly run in your *__init__.py*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese que  ``ContentInit`` debidamente se ejecute en su *__init__.py*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure that all modules having Archetypes content types defined and ``registerType()`` calls are imported in *__init__py*.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de que todos los módulos que tienen tipos de contenido de Arquetipos definidos y llamadas ``registerType()`` son importadas en *__init__py*.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Campos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields for Archetypes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Campos para Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields Reference</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Referencias de campos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes of standard Archetypes fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Atributos de campos estándar de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common Field Attributes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Atributos de campo comunes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These attributes are common to nearly all fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos atributos son comunes a casi todos los campos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Field-specific attributes follow, and are listed by field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación los atributos campo-específico, listados por campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Particular fields have different defaults, types, and some other specialized attributes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Determinados campos tienen distintos &quot;por defecto&quot;, tipos, y otros atributos especializados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nombre</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Descripción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible Values</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Valores posibles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por defecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of a class method that will return the value of the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de un método de clase que devolverá el valor del campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use this to change how the field is retrieved.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use este para cambiar como el campo es recuperado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't provide a custom method name here, a default accessor, named getYourFieldName, is going to be created that just returns the value of the Field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted no proporciona un nombre de método personalizado aquí, un accessor por defecto llamado getYourFieldName, va a ser creado para que sólo devuelva el valor del campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class method name; for example, &lt;e0&gt;specialGetMethod&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nombre para método de clase, por ejemplo &lt;e0&gt;specialGetMethod&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>None</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ninguno</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por defecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default value for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El valor por defecto para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type should be appropriate to the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El Tipo debe ser apropiado para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of a class method returning a value for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de un método de clase que devuelve un valor para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class method name; for example, &lt;e0&gt;getSpecialDescription&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nombre para método de clase, por ejemplo &lt;e0&gt;getSpecialDescription&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of a class method that returns the raw value of a field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de un método de clase que devuelve el valor bruto de un campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any method name (for example, &lt;e0&gt;rawGetMethod&lt;/e0&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nombre de cualquier método (por ejemplo, &lt;e0&gt;rawGetMethod&lt;/e0&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether or not values outside the vocabulary will be accepted.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Determina si los valores fuera del vocabulario serán aceptados o no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, Archetypes will validate input for the field against the vocabulary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es True (verdadero), validará la entrada para los campos contra el vocabulario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only values already in the vocabulary will be accepted.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo los valores que ya están en el vocabulario, serán aceptados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;True&lt;/e0&gt; or &lt;e1&gt;False&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;True (verdadero)&lt;/e0&gt; o &lt;e1&gt;False (Falso)&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>False</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>False (Falso)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Plone &lt; 3 only)&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Plone &lt; 3 solamente)&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want this field to be placed in its own catalog index, then specify the type of index here as a string.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si desea que este campo sea colocado en su propio índice de catálogo, pues entonces especifique el tipo de índice aquí como una cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you append &lt;e0&gt;:schema&lt;/e0&gt; onto the end of the schema, then this will also be added as a metadata column.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted anexa &lt;e0&gt;:schema&lt;/e0&gt; al final de un esquema, entonces esto también se agregará como una columna de metadatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The actual index will be on the field accessor, typically &quot;getFieldName&quot;.)&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Realmente el índice estará en el campo de accessor, por lo general &quot;getFieldName&quot;.)&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ignored in Plone 3+; use GenericSetup profile for similar functionality.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ignore en Plone 3+; use el perfil GenericSetup para funcionalidades similares.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of any index, such as &lt;e0&gt;KeywordIndex&lt;/e0&gt; or &lt;e1&gt;KeywordIndex:schema&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de cualquier índice, tal como &lt;e0&gt;KeywordIndex&lt;/e0&gt; o &lt;e1&gt;KeywordIndex:schema&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>May be used to specify the method called when indexing a field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede ser utilizado para especificar el método llamado cuando se indexa un campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use '_at_accessor' to use the default accessor, '_at_edit_accessor' to use the edit accessor, or the name of a method returning the value to be indexed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use '_at_accessor' para utilizar el accessor por defecto, '_at_edit_accessor' para utilizar el accessor de edición, o el nombre de un método que devuelve el valor para que sea indexado. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;_at_accessor&lt;/e0&gt;, &lt;e1&gt;_at_edit_accessor, getIndexAccessor&lt;/e1&gt; and &lt;e2&gt;getIndexAccessorName&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;_at_accessor&lt;/e0&gt;, &lt;e1&gt;_at_edit_accessor, getIndexAccessor&lt;/e1&gt; y &lt;e2&gt;getIndexAccessorName&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Flag for Fields that are independent of the language, such as dates.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Bandera para campos que son prácticamente independientes de un idioma, como las fechas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>True tells LinguaPlone that no translation is necessary for this field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>True (verdadero) le dice a LinguaPlone que ninguna traducción es necesaria para este campo. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;True&lt;/e0&gt; or &lt;e1&gt;False&lt;/e1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;True (Verdadero)&lt;/e0&gt; o &lt;e1&gt;False (Falso)&lt;/e1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marks metadata fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Marca campos de metadatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is currently only needed as a convenience for the filterFields method of Schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la actualidad sólo es necesario para su conveniencia para el método filterFields de esquema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fields marked as metadata are not displayed in the uncustomized base view.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos marcados como metadatos no se muestran en la vista base no personalizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The read/write mode of field, as a string; the default is to be read and write.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El modo lectura/escritura del campo, como una cadena; por defecto es para leer y escribir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessors will not be created without the read mode, and Mutators will not be created without the write mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Accessors no serán creados sin el modo de lectura, y Mutators no serán creados sin el modo de escritura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For read only: &lt;e0&gt;r&lt;/e0&gt;, for write only: &lt;e1&gt;w&lt;/e1&gt;, for read and write: &lt;e2&gt;rw&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para leer solamente: &lt;e0&gt;r&lt;/e0&gt;, para escribir solamente: &lt;e1&gt;w&lt;/e1&gt;, para leer y escribir: &lt;e2&gt;rw&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set this to True if the field can have multiple values.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Establezca esto a verdadero si el campo puede tener múltiples valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The string name of a class method that changes the value of the Field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de cadena de un método de clase que cambia el valor del campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't provide a special method name here, a default mutator is generated with the name 'setYourFieldName' to simply store the value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted no proporciona un nombre de método especial aquí, un mutator por defecto es generado con el nombre 'setYourFieldName' para simplemente guardar el valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A class method name; for example, &lt;e0&gt;specialSetMethod&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nombre para método de clase, por ejemplo &lt;e0&gt;specialSetMethod&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A unique name for this field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nombre único para este campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually specified as the first item in the field definition.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general especificado como primer elemento de la definición de campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any string.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cualquier cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strongly recommended: lowercase, no punctuation or spaces, conforming to standard Python identifier rules.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Altamente recomendado: minúsculas, sin puntuación o espacios, conforme a las normas estándar de identificador Python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;e0&gt;description&lt;/e0&gt;, &lt;e1&gt;user_name&lt;/e1&gt;, or &lt;e2&gt;coffee_bag_6&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo &lt;e0&gt;description&lt;/e0&gt;, &lt;e1&gt;user_name&lt;/e1&gt;, o &lt;e2&gt;coffee_bag_6&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No default.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No hay por defecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, this will be the field that used for File Transfer Protocol (FTP) and WebDAV requests.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si verdadero, este será el campo que se utiliza para el Protocolo de transferencia de archivos  (FTP - File Transfer Protocol) y solicitudes WebDAV.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There can be only field that does this; if multiple are defined, the first one in the schema will be used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede haber sólo un único campo que haga esto; si varios están definidos, el primero en el esquema es el que se utilizará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You normally set this for the main body attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Normalmente se establece esto para el atributo del cuerpo principal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only used for TextField and FileField field types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Solamente para tipos de campo TextField y FileField.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The permission required for the current user to allowed to view or access the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El permiso necesario para que el usuario actual pueda ver o tener acceso al campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only useful if the read mode is activated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo es útil si el modo de lectura está activado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This read permission is checked when rendering the widget in read mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este permiso de lectura se comprueba al renderizar el widget en modo de lectura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A permission identifier imported from Products.CMFCore.permissions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un identificador de permiso importado desde Products.CMFCore.permissions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vista</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies that some value for this field required.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica que un valor para este campo es requerido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use named schematas to organize fields into grouped views.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use schematas nombradas parar organizar los campos en vistas agrupadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A short string that labels the group.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cadena corta que etiqueta el grupo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies whether or not the field value will be indexed as part of the SearchableText for the content object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica si el valor del campo será indexado o no como parte del SearchableText para el objeto de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;SearchableText&lt;/e0&gt; is what is checked by the portal's main search.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;SearchableText&lt;/e0&gt; es lo que se revisa por la búsqueda principal del portal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The storage mechanism for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El mecanismo de almacenamiento para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default is &lt;e0&gt;Attribute Storage&lt;/e0&gt;, which stores the field as an attribute of the object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El predeterminado es &lt;e0&gt;Attribute Storage&lt;/e0&gt;, el cual almacena el campo como un atributo del objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any valid storage object such as &lt;e0&gt;AttributeStorage&lt;/e0&gt; or &lt;e1&gt;SQLStorage&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cualquier objeto valido de almacenamiento tal como &lt;e0&gt;AttributeStorage&lt;/e0&gt; o &lt;e1&gt;SQLStorage&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find these in the Archetypes Application Programming Interface (API).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede encontrar estos en la API (Interfaz de programación de aplicaciones).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provided by the field class..</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporcionado por la clase de campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Should never be changed in a Schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nunca debe ser cambiado en un esquema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list or tuple of strings naming validators that will check field input.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una lista o tupla de cadenas nombrando validators que revisarán las entradas de un campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you only have one validator, you may specify it as a string.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si sólo tiene un validator, lo puede especificar como una cadena. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validators may also be instances of a class implementing the IValidator interface from from Products.validation.interfaces.IValidator.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Validators también puede ser instancias de una clase implementando la interfaz IValidator de Products.validation.interfaces.IValidator.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing a class instance allows you more flexibility as you may set additional parameters.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporcionar una instancia de clase le permite una mayor flexibilidad, ya que puede configurar parámetros adicionales. &lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validators are checked in order specified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los validators se comprueban en el orden indicado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The names of validators registered via Products.validation; for example, isEmail.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los nombres de validators registrados vía Products.validation, por ejemplo, isEmail.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides the values shown in selection and multi-selection inputs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporciona los valores mostrados en las entradas de selección y selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be specified as a static list or as the name of a class method returning the choice list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede estar especificado como una lista estática o como el nombre de un método de clase devolviendo la lista de opciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list of strings (in which case keys and values will be the same); a list of 2-tuples of strings [(&quot;key1&quot;,&quot;value 1&quot;),(&quot;key 2&quot;,&quot;value 2&quot;),...]; a Products.Archetypes.utils.DisplayList.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una lista de cadenas (en las cuales llaves y valores serán los mismos); una lista de 2-tuplas de cadenas [(&quot;key1&quot;,&quot;value 1&quot;),(&quot;key 2&quot;,&quot;value 2&quot;),...]; un Products.Archetypes.utils.DisplayList.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, the name of a class method returning any of the above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>O bien, el nombre de un método de clase arrojando cualquiera de los anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like the vocabulary attribute, in Plone 3 provides the values shown in selection and multi-selection inputs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al igual que el atributo vocabulary (vocabulario), en Plone 3 ofrece los valores que aparecen en las entradas de selección y selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string name of a Zope 3 style vocabulary factory (a named utility providing zope.schema.interfaces.IVocabularyFactory)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nombre de cadena de una fábrica Zope 3 de estilo vocabulario (una utilidad que proporciona zope.schema.interfaces.IVocabularyFactory)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The widget that will be used to render the field for viewing and editing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El widget que se utiliza para renderizar el campo para visualización y edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the widget reference for a list of available widgets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea la referencia para obtener una lista de widgets disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An instance of a widget; for example, StringWidget().</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una instancia de un widget, por ejemplo, StringWidget().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The permission required for the current user to edit the field value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El permiso requerido al usuario actual para editar el valor de campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only interesting if the write mode is activated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Característica interesante sólo si el modo de escritura está activado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The write permission is checked when rendering the widget in write mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El permiso de escritura es revisado cuando se renderiza el widget en modo de escritura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard Fields</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Campos estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simple storage of &lt;e0&gt;True&lt;/e0&gt; or &lt;e1&gt;False&lt;/e1&gt; for a field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Simple almacenamiento &lt;e0&gt;Verdadero&lt;/e0&gt; o &lt;e1&gt;Falso&lt;/e1&gt; para un campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard properties</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Propiedades estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tipo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>example values</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ejemplo de valores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implemented as a check box.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Implementado como una casilla de verificación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The &lt;e1&gt;required&lt;/e1&gt; attribute for the boolean field is often confusing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;Nota:&lt;/s0&gt; El atributo &lt;e1&gt;requerido&lt;/e1&gt; para el campo booleano es a menudo confuso </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does &lt;e2&gt;not&lt;/e2&gt; require that the box be checked.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este &lt;e2&gt;no&lt;/e2&gt; requiere que la caja sea verificada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use a validator if you need to require the box be checked.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use un validator si usted necesita que la caja sí sea verificada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read-only field, whose content cannot be edited directly by users, but is computed instead from a Python expression.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Campo de sólo lectura, cuyo contenido no se puede editar directamente por usuarios, sino que en lugar se computa desde una expresión de Python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, it can be the result of an operation on the contents from some other fields in the same schema, e.g. calculating the sum of two or more currency amounts, or composing a full name from first name and surname.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, puede ser el resultado de una operación para los contenidos de otros campos en el mismo esquema, por ejemplo, el cálculo de la suma de dos o más cantidades de divisas, o componer un nombre completo del primer nombre y apellido. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This field is usually not stored in the database, because its content is calculated on the fly when the object is viewed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este campo no suele ser almacenado en la base de datos, ya que su contenido se calcula sobre la marcha cuando el objeto sea visto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Standard&lt;/s0&gt;&lt;s1&gt; properties&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s1&gt;Propiedades&lt;/s1&gt; &lt;s0&gt;Estándar&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>descripción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>some possible values</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>algunos posibles valores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Special properties</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Propiedades especiales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evaluated on the object to compute a value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Evaluado en el objeto para computar un valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for storing values inside a CMF Object, which can have workflow.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza para almacenar valores dentro de un objeto CMF, el cual puede tener flujo de trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can only be used for BaseFolder-based content objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo puede ser usado para objetos de contenido base-BaseFolder.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>True</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>True (Verdadero)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for storing dates and times.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza para el almacenamiento de fechas y horas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; The default for the DateTimeField needs to be specified as a DateTime object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;Nota:&lt;/s0&gt; El valor por defecto para el DateTimeField debe ser especificado como un objeto DateTime.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to set the current date/time as the default, you'll need to use the default_method attribute to specify a class method returning the current date/time as a DateTime object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si necesita ajustar la fecha/hora actual como predeterminado, tendrá que utilizar el atributo default_method para especificar un método de clase que arroje la fecha/hora actual como un objeto DateTime.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Storage for large chunks of data such as plain-text files, office-automation documents, and so on.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Almacenamiento para grandes cantidades de datos como archivos de texto plano, documentos de ofimática, y así sucesivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using Plone 4 or newer, consider using &lt;e0&gt;plone.app.blob.field.BlobField&lt;/e0&gt; instead, that stores the file data outside of the ZODB and accepts the same parameters as &lt;e1&gt;atapi.FileField&lt;/e1&gt;. See &lt;a2&gt;this page&lt;/a2&gt; for info about migration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está utilizando Plone 4 o posterior, considere en cambio usar &lt;e0&gt;plone.app.blob.field.BlobField&lt;/e0&gt;, que almacena los datos de archivo fuera de la ZODB y acepta los mismos parámetros que &lt;e1&gt;atapi.FileField&lt;/e1&gt;. Vea &lt;a2&gt;esta página&lt;/a2&gt; para información sobre la migración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set this &lt;e0&gt;True&lt;/e0&gt; to mark the field as primary for FTP or WebDAV.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Establezca esto en &lt;e0&gt;True&lt;/e0&gt; para marcar el campo como un primario para FTP o WebDAV.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; File field values are stored as strings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;Nota:&lt;/s0&gt; los valores de campo de archivo se almacenan como cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's a common practice to use streams to read/write the values as if they were files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es una práctica común usar streams para leer/escribir los valores como si fueran archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For storing numerical data with fixed points.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para el almacenamiento de datos numéricos con puntos fijos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For storing numerical data with floating points.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para el almacenamiento de datos numéricos con números flotantes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stores an image and allows dynamic resizing of the image.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Almacena una imagen y permite el cambio de tamaño dinámico de la imagen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using Plone 4 or newer, consider using &lt;e0&gt;plone.app.blob.field.ImageField&lt;/e0&gt; instead, that stores the image data outside of the ZODB, and accepts the same parameters as &lt;e1&gt;atapi.ImageField&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está utilizando Plone 4 o posterior, considere en cambio usar &lt;e0&gt;plone.app.blob.field.ImageField&lt;/e0&gt;, que almacena los datos de archivo fuera de la ZODB y acepta los mismos parámetros que &lt;e1&gt;atapi.ImageField&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a2&gt;this page&lt;/a2&gt; for info about migration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea &lt;a2&gt;esta página&lt;/a2&gt; para información sobre la migración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tuple of MIME strings</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>tupla de cadenas MIME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the types of images that will be allowed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica los tipos de imágenes que serán permitidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Note:&lt;/s0&gt; Archetypes Image field values are stored as strings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;Nota:&lt;/s0&gt; los valores en Arquetipos para campos de imagen son almacenados como cadenas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The size to which the original image will be scaled.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El tamaño al cual la imagen original será modificada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it's None, then no scaling will take place; the original size will be retained.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es None, entonces no se llevará a cabo ninguna modificación; el tamaño original se conservará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Caution: the aspect ratio of the image may be changed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Precaución: la relación de aspecto de la imagen puede ser cambiada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If specified then the image is scaled to be no bigger than either of the given values of width or height.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si se especifica entonces la imagen se escala para que no sea más grande que cualquiera de los valores dados para anchura o altura.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aspect ratio is preserved.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La relación de aspecto se conserva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful to prevent storage of megabytes of unnecessary image data.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Útil para evitar el almacenamiento de megabytes de datos de imágenes innecesarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dictionary specifying any additional scales in which the image will be available.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un diccionario que especifica cualquier escala adicional en el que la imagen estará disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dictionary entries should be of the form 'scaleName':(width,height).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las entradas de diccionario deben ser de la forma &quot;scaleName&quot;:(width (ancho),height (alto)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The scaled versions will be accessible as object/&lt;imagename&gt;_&lt;scalename&gt;, e.g. object/image_mini.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las versiones a escala serán accesibles como object/&lt;imagename&gt;_&lt;scalename&gt;, ejemplo, object/image_mini.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A JPEG quality setting (range 0 to 100).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un valor de calidad JPEG (rango de 0 a 100).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lower numbers yield high compression and low image quality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los números más bajos producen compresiones altas y imágenes de baja de calidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>High numbers yield low compression and better quality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los números más altos producen compresiones bajas y mejor calidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50 (a medium quality)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>50 (calidad media)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Image Scales</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizando escalas de imagen</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To display the original image (possibly rescaled if you used original_size or max_size attributes), you may use a URL like &quot;http://url_of_content_object/imageFieldName&quot; as the SRC attribute of an IMG tag where &lt;e0&gt;url_of_content_object&lt;/e0&gt; is the URL of the content object and &lt;e1&gt;imageFieldName&lt;/e1&gt; is the name of the image field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para mostrar la imagen original (posiblemente reajustada si ha utilizado atributos original_size o max_size), usted puede usar una URL como &quot;http://url_of_content_object/imageFieldName&quot; como el atributo SRC de una etiqueta IMG donde &lt;e0&gt;url_of_content_object&lt;/e0&gt; es la URL del objeto de contenido y &lt;e1&gt;imageFieldName&lt;/e1&gt; es el nombre del campo de imagen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To display one of the scales, use a URL like &quot;http://url_of_content_object/imageFieldName_scale&quot;,&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para mostrar una de las escalas. use una URL como URL like &quot;http://url_of_content_object/imageFieldName_scale&quot;,&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>where &lt;e1&gt;scale&lt;/e1&gt; is one of the keys of the &lt;e2&gt;sizes&lt;/e2&gt; dictionary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>donde &lt;e1&gt;scale&lt;/e1&gt; es una de las llaves del diccionario &lt;e2&gt;sizes&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;Attention&lt;/e0&gt;: The direct attribute access as shown above works only together with AttributeStorage, which will be used by default.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;Atención&lt;/e0&gt;: El acceso de atributo directo como se muestra arriba sólo funciona junto con AttributeStorage, que será utilizado por defecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid heavy memory consumption on sites with many images it is recommended to use AnnotationStorage for the ImageField.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para evitar el consumo pesado de memoria ​​en sitios con muchas imágenes, se recomienda el uso de AnnotationStorage para ImageField.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also generate a ready-to-insert IMG tag with the python code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También puede generar una etiqueta IMG lista para insertar con el código python:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if &lt;e0&gt;obj&lt;/e0&gt; is your content object, &lt;e1&gt;image&lt;/e1&gt; the name of your image field, and &lt;e2&gt;mini&lt;/e2&gt; the name of your scale.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si &lt;e0&gt;obj&lt;/e0&gt; es su objeto de contenido, &lt;e1&gt;image&lt;/e1&gt; el nombre del campo de imagen, y &lt;e2&gt;mini&lt;/e2&gt; el nombre de su escala.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may rescale to other sizes than those in the sizes field attribute with code like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede cambiar la escala a otros tamaños distintos a aquellos en el atributo de campo de tamaños con un código como este:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From Plone 4 on, the plone.app.imaging package introduces a new way to control image scales, factoring this functionality out of Archetypes for reutilization.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desde Plone 4 en adelante, el plone.app.imaging package introduce una nueva manera de controlar las escalas de imágenes, factorizando esta funcionalidad fuera de Arquetipos para su reutilización.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Would create an up to 64 by 64 pixel scaled down version of the image stored in the &quot;image&quot; field of the context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Crearía una versión con una escala hasta un máximo de 64 por 64 píxeles de la imagen almacenada en el campo &quot;image&quot; del contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further info, check the &lt;a0&gt;plone.app.imaging README file&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para más información, revise el &lt;a0&gt;archivo README de plone.app.imaging&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For storing numerical data as integers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para el almacenamiento de datos numéricos como números enteros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets the size of the input field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define el tamaño del campo de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for storing text as a list, for example a list of data such as keywords.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para almacenar el texto como una lista, por ejemplo, una lista de datos tales como palabras clave.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for storing references to other Archetypes Objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para almacenar referencias a otros objetos de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set multiValued True to allow multiple references (one-to-many), or False to allow only a single reference (one-to-one).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Establezca multiValued a True (Verdadero) para permitir múltiples referencias (de una a muchas), o False (Falso) para permitir una sola referencia (una-a-una).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifes an identifier for the type of relationships associated with the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica un identificador para el tipo de relaciones asociadas con el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This should be unique within your content type, but has no larger meaning.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este debe ser único dentro de su tipo de contenido, pero no tiene un significado más amplio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A ReferenceField allows you to edit the set of references with a particular relationship identifier from the current content object to other objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un ReferenceField le permite editar el conjunto de referencias con un identificador de relación particular desde los objetos de contenido actual a otros objetos. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tuple of portal types</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>tupla de tipos de portal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines all the portal types that will be searched to find objects that the user can make a reference to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Determina todos los tipos de portal que se buscarán para encontrar objetos a los que el usuario puede hacer una referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also specifies the Types that should be allowed to be added directly from the reference widget.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También especifica los Tipos que se deben permitir para que sean agregados directamente desde el widget de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is only activated if the addable property is set.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto sólo se activa si la propiedad &quot;agregable&quot; se establece-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An empty list or tuple will allow references to all portal types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una lista vacía o tupla permitirá referencias a todos los tipos de portal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string containing the name of a class method that will return a list of portal types to which references are allowed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cadena que contiene el nombre de un método de clase que devolverá una lista de tipos de portal a los cuales las referencias están permitidas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets a limit for presentation of reference items.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Establece un límite para la presentación de elementos de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Up to this limit, only titles are displayed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hasta este límite, sólolos títulos son mostrados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Above the limit, the path to the referenced object is also displayed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por encima del límite, la ruta hacia al objeto referido también se muestra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The idea is that if there are a large number of referenced items, the user will need help to differentiate them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La idea es que si hay un gran número de elementos a los que se le hace referencia, el usuario tendrá que ayudar a diferenciarlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string containing a python expression that will be evaluated to get the displayed text for a referenced item.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cadena que contiene una expresión Python que será evaluada para obtener el texto mostrado para un elemento de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your expression may use the variable &quot;b&quot; which will be a reference to the catalog brain returned by the reference lookup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Su expresión puede utilizar la variable &quot;b&quot;, que será una referencia al cerebro del catálogo devuelto por la búsqueda de referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More about References</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más sobre las referencias</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes References work with any object providing the IReferenceable interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las Referencias de Arquetipos funcionan con cualquier objeto proporcionando la interfaz IReferenceable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are mantained in the uid_catalog and reference_catalog catalogs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Son mantenidos en los catálogos uid_catalog y reference_catalog.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find both at the root of your Plone site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede encontrarlos en el root de su sitio Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check them to see their indexes and metadata.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revíselos para ver sus índices y metadatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Althought you could use the ZCatalogs API to manage Archetypes references, these catalogs are rarely used directly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aunque se puede utilizar la API de ZCatalogs para administrar referencias de Arquetipos, estos catálogos son rara vez utilizados directamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A ReferenceField and its API is used instead.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un ReferenceField y su respectiva API es utilizado en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To set a reference, you can use the setter method with either a list of UIDs or one UID string, or one object or a list of objects (in the case the ReferenceField is multi-valued) to which you want to add a reference to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para establecer una referencia, puede utilizar el método de establecimiento con una lista de los UID o una cadena UID, o un objeto o una lista de objetos (en el caso de ReferenceField tiene varios valores) a los que desea agregarle una referencia .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;e0&gt;Non&lt;/e0&gt;e and &lt;e1&gt;[]&lt;/e1&gt; are equal.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que &lt;e0&gt;Non&lt;/e0&gt;e y &lt;e1&gt;[]&lt;/e1&gt; son iguales.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to set a reference from the &lt;e3&gt;myct1&lt;/e3&gt; object to the &lt;e4&gt;areferenceableobjec&lt;/e4&gt;t object using the &lt;e5&gt;MyReferenceField&lt;/e5&gt; field:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, para establecer una referencia desde el objeto &lt;e3&gt;myct1&lt;/e3&gt; al objeto &lt;e4&gt;areferenceableobjec&lt;/e4&gt;t utilizando el campo &lt;e5&gt;MyReferenceField&lt;/e5&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get the referenced object(s), just use the getter method.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para obtener el objeto(s) referido(s), sólo tiene que utilizar el método getter.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that what you get are&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que lo que obtiene son&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the objects themselves, not their catalog brains.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>los objetos mismos, y no los cerebros de catálogos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A field for plain-text, unformatted strings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un campo para texto plano, cadenas sin formato.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rarely changed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Raramente cambiado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string field typically used for longer, multi-line strings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un campo de cadena normalmente utilizado por cadenas multi-línea y más largas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The string may also be transformed into alternative formats.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La cadena también puede ser transformada en formatos alternativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string designating MIME the default input type for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cadena que designa MIME el tipo de entrada por defecto para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used in the TextArea and Rich widgets to let the user choose between different text formats in which the content is entered.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado en TextArea y widgets Rich para permitir al usuario elegir entre diferentes formatos de texto en donde se introduce el contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is used by the accessor (get) method to and decides which MIME-Type the content should be transformed into if no special MIME-Type is demanded.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es utilizado por el método accessor (get) para decidir a que tipo MIME el contenido debería ser transformado si ningún tipo MIME es exigido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Widgets Reference</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Widgets de referencia</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This page is a syntax reference and general guide for defining and using Widgets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta página es una referencia de sintaxis y guía general para la definición y uso de Widgets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Widget Attribute Topics</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Temas de atributos widget</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common Widget Attributes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Atributos comunes widget</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The table below describes attributes common to nearly all widgets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La siguiente tabla describe los atributos comunes a casi todos los widgets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Illustrations and special attributes listings for each of the standard widgets follows.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación, ilustraciones y listados de atributos especiales para cada uno de los widgets estándar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A string containing a TALES expression to determine whether or not a field/widget is included on a view or edit page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cadena que contiene una expresión TALES para determinar si un campo/widget es incluido o no en una vista o una página de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This does not distinguish between view and edit mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto no hace distinción entre la vista y el modo de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your TALES expression may referenc the current context as 'object' and the Plone site root as 'portal'</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sus expresiones TALES puede hacer referencia al contexto actual como un &quot;objeto&quot; el root del sitio Plone como &quot;portal&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Help or explanatory text for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ayuda o texto explicativo para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually shown on the edit form under the label and above the input field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general, aparece en el formulario de edición bajo el rótulo y sobre el campo de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The i18n identifier for the description message.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El identificador i18n para el mensaje de descripción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used to translate the message.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para traducir el mensaje.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Should be unique within your product's i18n domain.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Debería ser único dentro del dominio i18n de su producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The label that will appear in the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La rótulo que aparecerá en el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any string, for example, &lt;e0&gt;Start Date&lt;/e0&gt; for a field &lt;e1&gt;start_date&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cualquier cadena, por ejemplo &lt;e0&gt;Start Date&lt;/e0&gt; para un campo &lt;e1&gt;start_date&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also &lt;e2&gt;label_msgid&lt;/e2&gt; (takes string message ids for i18n.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También &lt;e2&gt;label_msgid&lt;/e2&gt; (toma id de mensajes de cadena para i18n.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The i18n identifier for the label message.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El identificador i18n para el mensaje del rótulo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The i18n domain specifier for your product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El especificador de dominio i18n para su producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This should be unique for your product, and will be used to find the translation catalogs for your product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este debería ser único para su producto, y utilizarse para encontrar los catálogos de traducción para su producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The modes that this widget will be shown in; by default there are two modes: view and edit.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los modos que este widget mostrará; por defecto hay dos modos: ver y editar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list of modes as strings; by default &lt;e0&gt;(&quot;view&quot;, &quot;edit&quot;)&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una lista de modos como cadenas; por defecto &lt;e0&gt;(&quot;view&quot;, &quot;edit&quot;)&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is enabled, the view and edit fields will be populated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esta opción está activada, los campos de ver y editar serán llenados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually this is enabled, but for fields such as a password field, this shouldn't be the case.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general esta opción está activada, pero para los campos tales como el campo de contraseña, esto no debería ser el caso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually this is true by default.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general esto es verdadero por defecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is enabled, then when an error is raised, the field is repopulated; for fields such as a password field, this shouldn't be the case.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esto está habilitado, cuando se produzca un error, el campo se vuelve a llenar, para campos como un campo de contraseña, este no debería ser el caso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually this is True by default.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general esto es verdadero por defecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Determines whether or not the field is visible view and edit mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Determina si el campo es visible o no y el modo de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a dictionary mapping the view mode to a string describing the visibility.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este es un diccionario haciendo un mapeo para el modo de vista a una cadena que describe la visibilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Choices are &lt;e0&gt;visible&lt;/e0&gt;, &lt;e1&gt;hidden&lt;/e1&gt; (rendered in an HTML hidden form value), &lt;e2&gt;invisible&lt;/e2&gt; (not rendered at all).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las opciones son &lt;e0&gt;visible&lt;/e0&gt;, &lt;e1&gt;hidden (oculto)&lt;/e1&gt; (renderizado en un valor HTML forma oculta), &lt;e2&gt;invisible&lt;/e2&gt; (no es renderizado en absoluto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;e0&gt;{'view': 'visible', 'edit': 'hidden' }&lt;/e0&gt; means that the view will show, but the edit page will hide the value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, &lt;e0&gt;{'view': 'visible', 'edit': 'hidden' }&lt;/e0&gt; significa que la vista se mostrará, pero la página de edición ocultará el valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard Widgets</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Widgets estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML checkbox, from which users can choose between two values such as on/off, true/false, yes/no.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza una casilla de verificación HTML, desde donde los usuarios pueden escoger dos valores tales como on/off, true/false, yes/no.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders a HTML input box with a helper popup box for choosing dates.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un cuadro de entrada HTML con una caja de ayuda emergente para la elección de fechas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Special Properties</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Propiedades especiales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the date/time format using strftime, e.g. '%d.%m.%Y', for the view.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define el formato fecha/hora con strftime, ejemplo, '%d.%m.%Y', para la vista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(See the strftime section of the &lt;a0&gt;Python time documentation&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Vea la sección strftime de la &lt;a0&gt;documentación de Python para horas)&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is not specified, the long form of the portal's local time format is used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esto no es especificado, el formato de formulario largo del portal para hora local es utilizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the number of future years offered by the year drop-down portion of the date widget.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica el número de años futuros ofrecidos por la parte del widget despegable para el año.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not use both future_year and end_year.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No utilice ambos future_year y end_year.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first year offered by the year drop-down.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El primer año ofrecido por el menú desplegable para años.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The final year offered by the year drop-down.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El último año ofrecido por el menú desplegable para años.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not use both future_years and end_year.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No utilice ambos future_year y end_year.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Should the widget ask for a time as well as a date?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Debería el widget pedir por la fecha así como la hora?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally used for ComputedField field type, it renders the computed value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Generalmente se usa para el tipo de campo ComputedField, que renderiza el valor computado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that if your field has a vocabulary, and the field value is a key in that vocabulary, the widget will lookup the key in the vocabulary and show the result.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que si su campo tiene un vocabulario, y el valor del campo es una llave en ese vocabulario, el widget buscará la clave en el vocabulario y mostrará el resultado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard Properties</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Propiedades estándar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As ComputedField is a read-only field, this property can be used to prevent the widget from appearing in edit templates, by setting it to just ('view',).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como ComputedField es un campo de sólo lectura, esta propiedad puede ser utilizada para evitar que el widget aparezca en plantillas de edición, al establecerlo a sólo ('view' - &quot;vista&quot;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In edit mode, renders an HTML text input box which accepts a fixed point value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el modo de edición, renderiza un texto HTML de entrada que acepta un valor de punto fijo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In view mode, formats the value to shows commas for thousands.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En modo vista, formatea el valor para mostrar comas en números de tres o más dígitos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, when thousands_commas is True, &quot;7632654849635.02&quot; is displayed as &quot;7,632,654,849,635.02&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo cuando thousands_commas es Verdadero, &quot;7632654849635.02&quot; se muestra así &quot;7,632,654,849,635.02&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note: this feature is not localized; it uses commas independent of locale.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Nota: esta característica no está localizada; utiliza comas independiente a la localidad.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows whole dollars in view, leaving out the cents.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muestra cantidades de dólares completas, omitiendo los centavos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter &quot;1.123&quot;, and &quot;$1&quot; is shown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introduzca &quot;1.123&quot;, y se mostrará &quot;$1&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note: this feature is not localized; it uses the dollar sign independent of locale.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Nota: esta característica no está localizada; utiliza el símbolo del dolar independiente a la localidad.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maximum input size; sets the HTML input tag's maxlength attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El tamaño máximo de entrada; establece el atributo maxlength de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In view mode, shows dollars and cents.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En modo vista, muestra dólares y centavos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter &quot;123.123&quot; and &quot;$123.12&quot; is shown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Introduzca &quot;123.123&quot; y se mostrará &quot;$123.12&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note: this feature is not localized; it always uses the dollar sign, period, and two digits precision.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Nota: esta característica no está localizada; utiliza siempre el símbolo del dolar, punto y dos dígitos de precisión.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Size of the input field; sets the HTML input tag's size attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tamaño del campo de entrada; establece el atributo size de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML widget so a user can upload a file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un widget de HTML para que un usuario pueda cargar un archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML widget that can be used to upload, display, delete, and replace images.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un widget de HTML que se puede utilizar para cargar, mostrar, eliminar y sustituir imágenes. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can provide a &lt;e0&gt;display_threshold&lt;/e0&gt; that allows you to set the size of an image; if it's below this size, the image will display in the Web page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede proporcionar un &lt;e0&gt; display_threshold &lt;/e0&gt; que le permite definir el tamaño de una imagen, si esta está por debajo de este tamaño, la imagen se mostrará en la página Web.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only display the image inline if img.getSize() &lt;= display_threshold</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo muestra la imagen en línea si img.getSize() &lt;= display_threshold</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In edit mode, renders a widget for moving items from one list to another.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En modo de edición, renderiza un widget para mover elementos de una lista a otra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Items are removed from the source list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los elementos son eliminados de la lista fuente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be used to choose multiple values from a list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se puede utilizar para elegir varios valores de una lista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This provides a good alternative to the MultiSelectionWidget when the vocabulary is too long for checkboxes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporciona una buena alternativa al MultiSelectionWidget cuando el vocabulario es demasiado largo para casillas de verificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple HTML input box for a string.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una simple caja de entrada HTML para una cadena.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Size of the select widget; sets the HTML select tag's size attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tamaño del widget de selección; establece el atributo size de etiqueta HTML para seleccionar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maximum input size; sets the HTML input tag's maxlength attribute</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El tamaño máximo de entrada; establece el atributo maxlength de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This widget allows the user to select keywords or categories from a list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este widget permite al usuario seleccionar palabras clave o categorías de una lista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is used for the &lt;e0&gt;Categories&lt;/e0&gt; field in the Categorization Schema (Plone 3+) or the equivalent &lt;e1&gt;Keywords&lt;/e1&gt; field on the Properties Tab (Plone &lt; 3) of a content object.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es utilizado para el campo de &lt;e0&gt;categorias&lt;/e0&gt; en el esquema de categorización (Plone 3+) o el equivalente campo de &lt;e1&gt;palabras clave&lt;/e1&gt; en la pestaña de propiedades (Plone &lt; 3) de un objeto de contenido.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Keywords are drawn from the field vocabulary and/or the unique values for the field in a specified catalog.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las palabras clave son elaboradas a partir del vocabulario de campo y/o los valores únicos para el campo en un catálogo específico. &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional keywords may be added unless the enforceVocabulary property of the field is True.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Palabras clave adicionales pueden ser añadidas a menos que la propiedad enforceVocabulary del campo sea Verdadera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets the catalog to search for additional vocabulary to be combined with the vocabulary defined for the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configura el catálogo para que busque por vocabulario adicional para ser combinado con el vocabulario definido para el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional keywords from existing content are found using catalog.uniqueValuesFor(fieldName).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Palabras clave adicionales de contenido existente se encuentran utilizando catalog.uniqueValuesFor(fieldName).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only shows the &quot;New keywords&quot; input for adding keywords if the current user has one of the roles stored in the allowRolesToAddKeywords property in the site_properties property sheet in portal_properties</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo muestra la entrada de &quot;Nuevas palabras clave&quot; para añadir palabras clave si el usuario actual tiene uno de los roles almacenados en la propiedad allowRolesToAddKeywords en la hoja de propiedades site_properties en portal_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used to display labels on forms -- without values or form input elements.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para mostrar rótulos en formularios; sin valores o elementos de formulario de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Displays a text area so that users can enter a list of values, one per line.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muestra un área de texto para que los usuarios pueden introducir una lista de valores, uno por línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rows of the lines widget; sets the HTML textarea tag's rows attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Filas de líneas de widget, establece el atributo rows de etiqueta HTML para textarea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Columns of the lines widget; sets the HTML textarea tag's cols attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Columnas de líneas de widget, establece el atributo cols de etiqueta HTML para textarea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A selection widget; by default it's an HTML select widget which can be used to choose multiple values.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un widget de selección, por defecto es un widget de HTML para seleccionar, que puede ser utilizado para elegir múltiples valores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a checkbox users can choose one or more values from a list (useful if the list is short).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como una casilla de verificación, en la que los usuarios pueden elegir uno o más valores de una lista (muy útil si la lista es corta).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible values: 'select' or 'checkbox'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Posibles valores: &quot;select&quot; (selección) o &quot;checkbox&quot; (casilla de verificación).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses a either a series of checkboxes or a multi-selection list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utiliza una serie de casillas de verificación o una lista de selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that checkboxes have much better usability for short vocabularies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que las casillas tienen mejor facilidad de uso para vocabularios corto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider using the InAndOutWidget for longer vocabularies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Considere utilizar InAndOutWidget para vocabularios largos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the size of the multi-select list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define el tamaño de la lista de selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does not apply for checkboxes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No aplica para casillas de verificación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML password input.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza una entrada de contraseña HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similar to the InAndOutWidget, but the values stay in the source list after selection.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Similar al InAndOutWidget, pero los valores permanecen en la lista fuente después de la selección.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Size of the selection box; sets the HTML select tag's size attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tamaño de la caja de selección; establece el atributo size de etiqueta HTML para seleccionar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML text input box which accepts a list of possible reference values.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un cuadro de texto HTML de entrada que acepta una lista de valores de referencia posibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used in combination with the Reference Field.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado en combinación con el campo de referencia. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;Note:&lt;/s1&gt; In Plone 2.5 and above, the ReferenceBrowserWidget is a usually a better choice for a reference widget due to its ability to browse for content referenceable objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s1&gt;Nota:&lt;/s1&gt; en Plone 2.5 o posterior, el ReferenceBrowserWidget es usualmente la mejor opción para un widget de referencia debido a su capacidad para buscar objetos de contenidos &quot;referenciables&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the number of items exceeds this value, multi-selection lists are used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando el número de elementos supera este valor, se utilizan listas de selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, radio buttons or checkboxes are used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De lo contrario, los botones de opción o casillas de verificación se utilizan.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>May be:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede ser:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;.&quot;, context object;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;.&quot;, context object (objeto de contexto);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>None, any place where Field.allowed_types can be added;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>None (ninguno), cualquier lugar donde Field.allowed_types pueda ser agregado;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>string path;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>ruta de cadena;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name of method on instance (it can be a combination list);</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>nombre del método en la instancia (puede ser una lista de combinaciones);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a list, combining all item above;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>una lista, que combina todos los elementos anteriores;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a dict, where {portal_type:} destination is relative to portal root</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>un diccionario, donde el destino de {portal_type:} es relativo al root del portal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create createObject link for every addable type</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Crea un enlace createObject para cada tipo &quot;agregable&quot;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Either a single type given as a string, or a list of types given as a string, defining what types we allow adding to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya sea un solo tipo dado como una cadena, o una lista de tipos dados como una cadena, definiendo que tipos se les pueden añadir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only applies when addable is set on the widget.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo aplica cuando addable se establece en el widget.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A sophisticated widget for browsing, adding and deleting references.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un widget sofisticado para navegar, añadir y borrar referencias. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard in Plone 2.5+, available for earlier versions as an add-on product.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estándar en Plone 2.5+, disponible para versiones anteriores como un producto complementario.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Import from &lt;e2&gt;Products.ATReferenceBrowserWidget.ATReferenceBrowserWidget&lt;/e2&gt; in Plone 2.5 and 3.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Importe de &lt;e2&gt;Products.ATReferenceBrowserWidget.ATReferenceBrowserWidget&lt;/e2&gt; en Plone 2.5 y 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone 4, this widget has been improved and now lives in&lt;e3&gt;archetypes.referencebrowserwidget.ReferenceBrowserWidget&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Plone 4, este widget ha sido mejorado y ahora se encuentra en&lt;e3&gt;archetypes.referencebrowserwidget.ReferenceBrowserWidget&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Size of the field if not multiValued; sets the HTML input tag's size attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tamaño del campo si no es multiValued; establece el atributo size de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>when a user searches in the popup, this index is used by default</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>cuando un usuario busca en el menú emergente, este índice es utilizado por defecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, a drop-down list is shown in the popup to select the index used for searching.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, una lista desplegable se muestra en la ventana emergente para seleccionar el índice utilizado para la búsqueda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If set to False, default_search_index will be used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si se define a Falso, default_search_index será utilizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optional dictionary containing all the indexes that can be used for searching along with their friendly names.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Diccionario opcional que contiene todos los índices que se pueden utilizar para buscar junto con sus nombres descriptivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Format: {'catalogindex':'Friendly Name of Index', ... } The friendly names are shown in the widget.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Formato: {&quot;catalogindex&quot;: &quot;Nombre descriptivo del índice&quot;, ... } Los nombres descriptivos se muestran en el widget. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;Caution:&lt;/s1&gt; If you set show_indexes True, but do not use this property to specify indexes, then all the indexes will be shown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s1&gt;Precaución:&lt;/s1&gt; si establece show_indexes a Verdadero, pero no utilizar esta propiedad para especificar índices, a continuación, todos los índices se muestran.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, a search form is included in the popup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, un formulario de búsqueda está incluido en el menú emergente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows the user to browse content to find referenceable content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Permite al usuario navegar por el contenido para encontrar contenido &quot;referenciable&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory shown when the popup opens.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Directorio que se muestra cuando se abre la ventana emergente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optional.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Opcional.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When empty, the current folder is used.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando está vacío, la carpeta actual se utiliza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the ATReferenceBrowser readme.txt for advanced usage.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea el readme.txt de ATReferenceBrowser para usuarios avanzados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dict or name of method</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>dict o nombre del método</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines query terms that will apply to all searches, mainly useful to create specific restrictions when allow_browse=0.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define los términos de consulta que se aplicarán a todas las búsquedas, principalmente útil para crear restricciones específicas cuando allow_browse=0.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can be either a dictonary with query parameters, or the name of a method or callable available in cotext that will return such a dictionary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede ser un diccionario con parámetros de consulta, o el nombre de un método o callable disponible en cotext que arrojará tal diccionario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If true, closes the popup when the user choses insert.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, se cierra la ventana emergente cuando el usuario elige insertar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This overrides the default behavior in multiselect mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto anula el comportamiento por defecto en el modo de selección múltiple.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the catalog used for searches</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica el catálogo utilizado para búsquedas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows changing the order of referenced objects (requires multiValued).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Permite cambiar el orden de los objetos referidos (requiere multiValued).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, popup will display the workflow state for objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, la ventana emergente mostrará el estado de flujo de trabajo para los objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, display the relative path (relative to the portal object) of referenced objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, muestra la ruta relativa (en relación con el objeto de portal) de los objetos referidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If set, content items are only referenceable if their workflow state matches one of the specified states.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si se establece, los elementos de contenido son sólo &quot;referenciables&quot; si sus estados de flujo de trabajo coinciden con uno de los estados especificados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If None there will be no filtering by workflow state.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es None no habrá ningún tipo de filtro por el estado de flujo de trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use to specify a list of image portal_types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza para especificar una lista de portal_types de imagen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of these portal types are previewed within the popup widget</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las instancias de estos tipos de portal son observados previamente en el widget emergente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the name of a method that is added to the image URL to preview the image in a particular resolution (e.g. 'mini' for thumbnails).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Especifica el nombre de un método que es agregado a la URL de la imagen para previsualizar la imagen con una resolución en particular (por ejemplo, &quot;mini&quot; para miniaturas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not zero, enables a history feature that show the paths of the last N visited folders.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si no es cero, permite que una característica de historia muestre las rutas de las últimas N carpetas visitadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, the user will not be able to browse above the starting directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, el usuario no podrá navegar por encima del directorio de inicio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The cited Plone 4 implementation of this widget includes the following additional properties:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La citada implementación Plone 4 de este widget incluye las siguientes propiedades adicionales:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of a method or variable that, if available at the instance, will be used to obtain the path of the startup directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de un método o variable que, si está disponible en la instancia, se utilizará para obtener la ruta del directorio de arranque.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If present, 'startup_directory' will be ignored.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está presente, &quot;startup_directory&quot; será ignorado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't ignore empty queries, but display results.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No ignore consultas vacías, pero muestre resultados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't show inaccessible objects (no permission) in view mode.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No muestre objetos de difícil acceso (sin permiso) en el modo de vista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Width of popup window in pixels.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ancho de la ventana emergente en píxeles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Height of popup window in pixels</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Altura de la ventana emergente en píxeles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name of template to be used for popup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nombre de la plantilla que se utilizará para la ventana emergente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use another template you have to register a named adapter for this template.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usar otra plantilla que tiene que registrar un adaptador nombrado para esta plantilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example of registering a popup in ZCML:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ejemplo de registro de una ventana emergente en ZCML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows the input of text, or upload of a file, in multiple formats that are then transformed as necessary for display.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Permite la entrada de texto, o carga de un archivo, en múltiples formatos que luego son transformados según sea necesario para su visualización.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, allows you to type some content, choose formatting and/or upload a file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, le permite escribir un contenido, seleccionar el formato y/o cargar un archivo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If available, the visual editor set in personal preferences is used for editing and formatting.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si está disponible, el editor visual definido en las preferencias personales se utiliza para la edición y formato.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number of rows.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Número de filas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Since the visual mode of the RichWidget is controlled by JavaScript, this is not very useful.)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Ya que el modo visual del RichWidget es controlado por JavaScript, esto no es muy útil.)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number of columns.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Número de columnas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If True, a file upload option is included with the field.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es Verdadero, la opción de cargar el archivo se incluye con el campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML selection widget, which can be represented as a dropdown, or as a group of radio buttons.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un widget de selección HTML, que puede ser representado como una lista desplegable, o como un grupo de botones para opciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Possible values: 'flex', 'select', 'radio'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Posibles valores: 'flex', 'select', 'radio'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses radio buttons when set to radio, and a single-selection list when set to select.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utiliza los botones radio (de opciones) cuando se establece a radio, y una lista de selección simple cuando se establece a select.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using flex will automatically use single-selection lists for more than three settings at a time, and a single-select list for up to three settings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El uso de flex utiliza automáticamente listas de selección única para más de tres opciones al mismo tiempo, y una lista de selección única para un máximo de tres opciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML text input box which accepts a single line of text.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un cuadro de texto HTML de entrada que acepta una sola línea de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For simple text lines such as author.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para líneas de texto simple, como la línea para el autor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maximum input length in characters; sets the HTML input tag's maxlength attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Longitud máxima de entrada de caracteres, establece el atributo maxlength de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Size of the input widget; sets the HTML input tag's size attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tamaño del widget de entrada; establece el atributo size de etiqueta HTML de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Renders an HTML text area for typing a few lines of text.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Renderiza un área de texto HTML para escribir unas pocas líneas de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also provides for the entry of the content in multiple formats when &lt;e0&gt;allowed_content_types&lt;/e0&gt; in the enclosing TextField allows it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También proporciona para la entrada del contenido en múltiples formatos cuando &lt;e0&gt;allowed_content_types&lt;/e0&gt; en la TextField lo permite.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number of rows for the edit widget; sets the HTML textarea tag's rows attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Número de filas para el widget de edición; establece el atributo rows de etiqueta HTML para textarea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Column width of the edit widget; sets the HTML textarea tag's cols attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ancho de columnas para el widget de edición; establece el atributo cols de etiqueta HTML para textarea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set this attribute to True to make an append-only TextArea widget.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Establezca este atributo a Verdadero para hacer un widget TextArea de solo adición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>New text gets added to the top of the existing text, dividing the new text from the existing text using the divider property.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Texto nuevo se agrega a la parte superior del texto actual, dividiendo el nuevo texto del texto existente mediante la propiedad divider.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The existing text is shown below the TextArea, and is not editable.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El texto actual se muestra debajo de TextArea, y no es &quot;editable&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This currently works with TextArea widgets and using plain text format.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto en la actualidad trabaja con widgets TextArea y utiliza texto sin formato.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Divider text marker to use for append only text areas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Marcador divider de texto que se utiliza para agregar sólo áreas de texto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only used then the append_only property is True.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo se utiliza entonces la propiedad append_only si es Verdadera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If non-zero, sets a maximum input length in characters.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si no es cero, establece una longitud máxima de entrada de caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since the HTML textarea tag has no maxlength property, this is enforced via a JavaScript snippet.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya que la etiqueta textarea (área de texto) HTML no tiene ninguna propiedad maxlength, esto se aplica a través de un fragmento de código JavaScript.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, it is is not applicable when JavaScript is unavailable.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, no es aplicable cuando JavaScript no está disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add-on Widgets</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Widgets de extensión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find all available add-on widgets contributed by the community, &lt;a0&gt;follow this link&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para encontrar todos los widgets de extensión disponibles aportados por la comunidad, &lt;a0&gt; siga este enlace &lt;/a0&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validator Reference</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Referencias de validadores (validators)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A quick reference to the built-in Archetypes validators.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una breve referencia de los validadores incorporados en Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Validators</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizando validadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes fields may have validators specified in the Field schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos de Arquetipos pueden tener validadores especificados en el esquema de Campo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the schema for the basic page type includes the stanza:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, el esquema para el tipo de página básico incluye la estrofa:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specifies that the &lt;e0&gt;isTidyHtmlWithCleanup&lt;/e0&gt; test will be applied to validate form input.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto especifica que la prueba &lt;e0&gt;isTidyHtmlWithCleanup&lt;/e0&gt; se aplica para validar entrada de formulario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may specify a sequence of validators:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede especificar una secuencia de validadores:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>and the validators will tested in order.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>y los validadores serán probados en orden.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The validators sequence may contain two kinds of entries:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La secuencia de validadores puede contener dos tipos de entradas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The string names of validators registered with the validation service (see Products.validation);</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los nombres de cadena de validadores registrados con el servicio de validación (vea Products.validation);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instances of classes implementing the IValidator interface (Products.validation.interfaces.IValidator.IValidator).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instancia de clases implementando la interfaz IValidator (Products.validation.interfaces.IValidator.IValidator).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A validation specification using a validator class instance can look like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una especificación de validación utilizando una instancia de clase de validación puede verse así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Registered Validators</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Validadores registrados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are validators pre-registered with the validation service.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos son validadores pre-registrados en el servicio de validación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They may be specified by name.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pueden ser especificados por su nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Uso</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Details</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Detalles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is the input a decimal number.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es la entrada un número decimal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows exponent notation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Permite notación exponencial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is the input an integer.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es la entrada un número entero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does not contain unprintable characters</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No contiene caracteres que no se pueden imprimir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is a well-formed social-security number</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es un buen-formado número de seguro social.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very naive: r'^\d{9}$'</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muy ingenuo: r'^\d{9}$'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is a valid US phone number</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es un número de teléfono válido de EE.UU.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Looks for 10 digits, ignores spaces, parens and dashes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Busca por 10 dígitos, ignora los espacios, paréntesis y guiones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is a valid international phone number</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es un número de teléfono valido internacional</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Looks for any number of digits, ignores spaces, parens and dashes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Busca cualquier cantidad de dígitos, ignora los espacios, paréntesis y guiones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very naive: is five or nine digits</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muy ingenuo: si hay cinco o nueve dígitos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is a valid URL</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>es una URL válida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recognizes most protocols</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Reconoce la mayoría de protocolos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is a valid e-mail address</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es una dirección de correo valida</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pretty good regular expression test</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una prueba de expresión regular bastante buena</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is an e-mail address preceded by &quot;mailto:&quot;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es una dirección de correo electrónico precedida por &quot;mailto:&quot;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passes the basic test to be a Unix-style name</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pasa la prueba básica para ser un nombre estilo Unix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests if an upload, file or something supporting len() is smaller than a given max size value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Comprueba si un proceso de carga, archivo o algo soportando len() es menor que un determinado valor máximo de tamaño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests against a &lt;e0&gt;maxsize&lt;/e0&gt; attribute on the field</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Prueba en contra de un atributo &lt;e0&gt;maxsize&lt;/e0&gt; en el campo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests whether or not input value can be converted to a DateTime object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Prueba si el valor de entrada se puede o no convertir en un objeto DateTime.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Input value must be empty.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El valor de entrada debe estar vacío.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validation will fail if input value is not empty; but no error will show.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La validación fallará si el valor de entrada no está vacío; pero ningún error se mostrará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Input value is a valid identifier.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El valor de entrada es un identificador válido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses mx.Tidy to validate HTML input.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usa mx.Tidy para validar la entrada HTML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fails on errors and warnings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Falla en errores y advertencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fails only on errors; cleans up.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Falla sólo en errores; limpia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The uploaded file is not empty.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El archivo subido no está vacío.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validates as Template Attribute Language</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Valida como Lenguaje de atributos de plantillas (TAL)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Useful Validation Classes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Clases útiles de validación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These classes are useful for creating your own validation class instances.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas clases son útiles para crear sus propias instancias de clase de validación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Imports and prototypes are shown.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las importaciones y los prototipos son mostrados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See source for details.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea la fuente para más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evaluates an expression to test the input value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Evalúa una expresión para poner a prueba el valor de entrada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests value against a regular expression after removing &lt;e0&gt;ignore&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Prueba el valor contra una expresión regular después de remover &lt;e0&gt;ignore&lt;/e0&gt; </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>characters.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>caracteres.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests to see if specified minval &lt;= input_value &lt; maxval</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Prueba para ver si minval especificado &lt;= input_value &lt; maxval</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other Useful Archetypes Features</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otras características útiles de Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Complementary features you'd be pleased to know about.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Características complementarias que estaría encantado de conocer.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to use events to hook the Archetypes creation process</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo utilizar los eventos para conectar o enganchar el proceso de creación en Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Times have changed since the days of at_post_create_script().</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las cosas han cambiado desde los días de at_post_create_script().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the way to hook into Zope3 (or Five's) event system in order to execute code during the Archetypes content creation and or editing process.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está la forma de conectarse al sistema de eventos Zope 3 (o Five) con el fin de ejecutar código durante la creación de contenidos en Arquetipos y/o en el proceso de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the old days the only way to execute code during the object creation process for Archetypes was to add a method to your content type called &lt;e0&gt;at_post_create_script&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En viejos tiempos la única forma de ejecutar código durante el proceso de creación de objetos para Arquetipos era añadir un método a su tipo de contenido llamado &lt;e0&gt;at_post_create_script&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this script you would add any code that should execute after Archetypes was done creating the object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este script debía añadir el código que debía ejecutar después que Arquetipos llevaba a cabo la creación del objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new method for hooking the Archetypes object creation and editing process is to use Zope3 style events, like &lt;e0&gt;Products.Archetypes.interfaces.IObjectInitializedEvent&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nuevo método para conectar la creación Arquetipos de objetos y el proceso de edición es usar eventos de estilo Zope 3, como &lt;e0&gt;Products.Archetypes.interfaces.IObjectInitializedEvent&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a content type handy so we can add a post creation hook to it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tener un tipo de contenido práctico para que podamos agregar un gancho post creación a él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn how to create a content type, check previous sections of this manual.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para aprender a crear un tipo de contenido, consulte las secciones anteriores de este manual.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We're going to use a content type called &lt;e0&gt;ExampleContent&lt;/e0&gt; with the interface &lt;e1&gt;IExampleContent&lt;/e1&gt; for this how to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a usar un tipo de contenido llamado &lt;e0&gt;ExampleContent&lt;/e0&gt; con la interfaz &lt;e1&gt;IExampleContent&lt;/e1&gt; para esta guía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code structure will look like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La estructura del código se verá así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First let's create the interface for our &lt;e0&gt;ExampleContent&lt;/e0&gt; type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar vamos a crear la interfaz para nuestro tipo &lt;e0&gt;ExampleContent&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;e1&gt;interfaces.py&lt;/e1&gt;, add:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;e1&gt;interfaces.py&lt;/e1&gt;, agregue:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can store the implementation for your event handlers anywhere but for the purpose of this example we're going to put it in the same module as the &lt;e0&gt;ExampleContent&lt;/e0&gt; type:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede almacenar la implementación para los controladores de su evento en cualquier lugar, pero para el propósito de este ejemplo vamos a ponerlo en el mismo módulo que el tipo &lt;e0&gt;ExampleContent&lt;/e0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All we need to do now is register the &lt;e0&gt;addSubFolder&lt;/e0&gt; method as a handler for &lt;e1&gt;Products.Archetypes.interfaces.IObjectInitializedEvent&lt;/e1&gt; and for anything implementing the &lt;e2&gt;IExampleContent&lt;/e2&gt; interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo lo que necesitamos ahora es registrar el método &lt;e0&gt;addSubFolder&lt;/e0&gt; como un controlador para &lt;e1&gt;Products.Archetypes.interfaces.IObjectInitializedEvent&lt;/e1&gt; y para cualquier cosa implementando la interfaz &lt;e2&gt;IExampleContent&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We do this in a &lt;e3&gt;configure.zcml&lt;/e3&gt; file:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hacemos esto en un archivo &lt;e3&gt;configure.zcml&lt;/e3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that there are two interfaces in the &quot;for&quot; attribute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que hay dos interfaces en el atributo &quot;for&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because we are registering a multi-adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se debe a que se está registrando un multi-adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now when you add an &lt;e0&gt;ExampleContent&lt;/e0&gt; type the &lt;e1&gt;addSubFolder&lt;/e1&gt; method will be executed after Archetypes has created the object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora cuando agregue un tipo &lt;e0&gt;ExampleContent&lt;/e0&gt; el método &lt;e1&gt;addSubFolder&lt;/e1&gt; será ejecutado después que Arquetipos ha creado el objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The object itself will be passed to the handler and we can use the object reference to make additional modifications, in this case adding a sub folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El objeto en sí será pasado al controlador y podemos utilizar la referencia del objeto para realizar modificaciones adicionales, en este caso, la adición de una subcarpeta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can register as many handlers as you need.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede registrar tantos controladores como necesite.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Warnings from your future</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Advertencias desde su futuro</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Having implemented all of your content type's event hooks you might then run off and try using &lt;e0&gt;invokeFactory&lt;/e0&gt; somewhere in your code only to realize that your &lt;e1&gt;IObjectInitializedEvent&lt;/e1&gt; handlers are not being executed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Después de haber implementado la totalidad de ganchos para eventos de tipos de contenido, usted puede ejecutarlos y tratar de usar &lt;e0&gt;invokeFactory&lt;/e0&gt; en alguna parte en su código sólo para darse cuenta de que sus controladores &lt;e1&gt;IObjectInitializedEvent&lt;/e1&gt; no se están ejecutando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because &lt;e2&gt;invokeFactory&lt;/e2&gt; does not notify Zope's event system that new objects are being created.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es porque &lt;e2&gt;invokeFactory&lt;/e2&gt; no notifica al sistema de eventos Zope que nuevos objetos están siendo creados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to provide these notifications yourself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted tiene que proporcionar estas notificaciones manualmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So here is an example:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will both create your object and invoke any &lt;e0&gt;IObjectInitializedEvent&lt;/e0&gt; handlers you have registered.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto crea su objeto e invoca cualquier controlador &lt;e0&gt;IObjectInitializedEvent&lt;/e0&gt; que se haya registrado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that we are importing &lt;e1&gt;ObjectInitializedEvent&lt;/e1&gt;, not the interface &lt;e2&gt;IObjectInitializedEvent&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que estamos importando &lt;e1&gt;ObjectInitializedEvent&lt;/e1&gt;, y no la interfaz &lt;e2&gt;IObjectInitializedEvent&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want to actually instantiate an event passing it our newly created object as the single parameter and then pass the event to &lt;e3&gt;zope.event.notify&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Queremos en realidad instanciar un evento pasandole nuestro objeto recién creado como el único parámetro y luego pasar el evento a &lt;e3&gt;zope.event.notify&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From there, Zope takes care of figuring out which handlers need to execute.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A partir de ahí, Zope se encarga de averiguar qué controladores necesita ejecutar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So for example, in our &lt;e0&gt;addSubFolder&lt;/e0&gt; method above, any events registered for the folder we created would not fire.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que por ejemplo, en nuestro método anterior &lt;e0&gt;addSubFolder&lt;/e0&gt;, cualquier evento registrado para la carpeta que hemos creado no se disparará.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To complete our hook in this case we should provide a notification for our newly created folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para completar nuestro gancho en este caso se debe proporcionar una notificación para nuestra carpeta recién creada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes or other products may be expecting notifications so when using invokeFactory, always send an &lt;e1&gt;IObjectInitializedEvent &lt;/e1&gt;for the object&lt;e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos u otros productos pueden estar esperando notificaciones para que al usar invokeFactory, siempre se envíe un &lt;e1&gt;IObjectInitializedEvent &lt;/e1&gt;para el objeto&lt;e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;/e2&gt;The complete method looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;/e2&gt; El método completo es luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;T&lt;/s0&gt;&lt;s1&gt;h&lt;/s1&gt;&lt;s2&gt;e&lt;/s2&gt;&lt;s3&gt; &lt;/s3&gt;&lt;s4&gt;&lt;e5&gt;IObjectInitializedEvent&lt;/e5&gt; is fired once during the objects creation process.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;s0&gt;T&lt;/s0&gt;&lt;s1&gt;h&lt;/s1&gt;&lt;s2&gt;e&lt;/s2&gt;&lt;s3&gt; &lt;/s3&gt;&lt;s4&gt;&lt;e5&gt;IObjectInitializedEvent&lt;/e5&gt; es disparado una vez durante el proceso de creación de objetos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To hook the editing process for an object use &lt;e6&gt;IObjectEditedEvent&lt;/e6&gt;.&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para enganchar el proceso de edición para un objeto utilice &lt;e6&gt;IObjectEditedEvent&lt;/e6&gt;.&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;&lt;s1&gt;&lt;s2&gt;&lt;/s2&gt;&lt;/s1&gt;&lt;/s0&gt;&lt;a3&gt;Sending and handling events&lt;/a3&gt; tutorial is a little out of date but provides a broader explanation of the underlying mechanics.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los tutoriales de &lt;s0&gt;&lt;s1&gt;&lt;s2&gt;&lt;/s2&gt;&lt;/s1&gt;&lt;/s0&gt;&lt;a3&gt;envío y manejo de eventos&lt;/a3&gt; están un poco desactualizados pero ofrecen una explicación más amplia de procesos mecánicos subyacentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a4&gt;Walking through Five to Zope 3 - Events&lt;/a4&gt; is another great introduction to events handling.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;a4&gt;Caminando por Five a Zope 3 - Eventos&lt;/a4&gt; es otra buena introducción para el manejo de eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Appendix: Practicals</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Apéndice: Prácticas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How-To Extend A Basic Archetype Content Type</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo extender un tipo de contenido básico de Arquetipo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This How-To describes what to do next after you've gotten the basic Archetype examples working.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta guía describe qué hacer después de haber conseguido que los ejemplos básicos de Arquetipo trabajen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add functions, views, actions, and edit-page validation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede agregar funciones, vistas, acciones y validación de editar-página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ok, so you've got the Archetype examples to work, and now you'd like to know how to flesh out the basic example into something useful.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Bien, así que tiene los ejemplos de Arquetipo para trabajar, y ahora que le gustaría saber cómo elaborar el ejemplo básico en algo útil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(That's how I started; I knew I needed to make new Content Types, but didn't know how they worked.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(Así es como empecé, yo sabía que tenía que hacer nuevos tipos de contenido, pero no sabía cómo funcionaban.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I got the examples going, then tried to figure out how to modify them to do what I wanted.) I found learning Plone/Zope very frustrating until I got to this point.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenía los ejemplos corriendo, y luego traté de averiguar cómo modificarlos para hacer lo que yo quería.) Me había parecido el aprendizaje de Plone/Zope muy frustrante hasta que llegué a este punto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, once I figured out how to make Content Types do what I wanted, it all made sense.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces después que me di cuenta cómo hacer que los tipos de contenido hicieran lo que yo quería, todo tuvo sentido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding Functions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregando funciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is probably one of the first things on your mind.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es probablemente una de las primeras cosas en su mente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where do I add functions to my Content Type?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Dónde puedo agregar funciones a mi tipo de contenido?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do I call them?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Cómo las llamó?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What syntax do I use?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué sintaxis utilizo?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, these were the things that I wondered about.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Bueno, estas eran las cosas en las que estaba pensando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I figured out how to do them after some trial and error.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Me di cuenta que hacer después de algunas pruebas de ensayo y error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I never made a real website before, where I had to write scripts (a blog doesn't count).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nunca había hecho un sitio web real antes, donde tuviera que escribir scripts (un blog no cuenta).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So even though I had a lot of python experience, I was confused at first.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que, aunque tenía mucha experiencia en python, en un primer momento estaba confundido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;First, know that the Zope server converts a URL path into an object path, to find the object that will render your page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>[&lt;e0&gt;En primer lugar, sabemos que el servidor Zope convierte una ruta URL en una ruta de objeto, para encontrar el objeto que va a renderizar página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is covered in the Zope Developer's guide.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se explica en la Guía del desarrollador de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The key point you need to know is that there's a parallel between the URL and your object hierarchy, but it's not exactly the same&lt;/e0&gt;.]</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El punto clave que usted necesita saber es que hay un paralelismo entre la URL y su jerarquía de objetos, pero no es exactamente lo mismo&lt;/e0&gt;.]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To cut to the chase, Zope figures out which object/function the URL is pointing to, and it takes the query string (?arg=val,arg2=val2, etc.) and uses it to figure out all the right arguments for the function call.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ir al grano, Zope determina a cual objeto/función la URL está apuntando, y toma la cadena de consulta (?arg=val,arg2=val2, etc.) y lo utiliza para descubrir todos los argumentos correctos para la llamada de función.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, you define your function in the ususal way, i.e.,</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, usted define su función en la forma ususal, es decir,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># define the schema</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># defina el esquema</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># override the default actions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># anule las acciones por defecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot; You need a doc string here!!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot; ¡¡¡Aquí necesita una doc string!!!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I lost a lot of time finding this out.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Perdí bastante tiempo para darme cuenta de esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes needs this when registering the function in the framework.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos necesita esto cuando está registrando la función en el framework.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll get a 404 error if you forget the doc string.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted recibirá un error 404 si se olvida de la doc string</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># if you don't return anything, then the Zope server will not re-render a page</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Si no devuelve nada, entonces el servidor Zope no vuelve renderizar una página.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># anything you return will be rendered</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># cualquier cosa que usted devuelva será renderizado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># return &quot;got here&quot; will show up as text</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># return &quot;got here&quot; (&quot;llegue aquí&quot;) se mostrará como texto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># return context.index_html() will return the default page (should be reasonable in any content; people won't get lost)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># return context.index_html() devolverá la página por defecto (debería ser razonable en cualquier contenido; para que la gente no se pierda)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># return context.base_edit() has the effect of &quot;jumping&quot; to the edit page</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># return context.base_edit() tiene el efecto de &quot;saltar&quot; a la página de edición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding Actions</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregando acciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I was confused when I saw the description of &lt;e0&gt;actions&lt;/e0&gt; in the Plone manual.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Yo estaba confundido cuando vi la descripción de &lt;e0&gt;acciones&lt;/e0&gt; en el manual de Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how I think of them: they're just the hyper-linked tabs along the top of the Content Type (content actions) or horizontal site navagation (site actions).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es lo que pienso de ellos: son sólo pestañas de hipervínculos junto con la parte superior del tipo de contenido (acciones de contenido) o navegación horizontal de sitio (acciones de sitio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The links are typically to a Content Type function (that returns a page), or to a page template (I only know how to make .pt and .cpt types so far).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los enlaces son por lo general a una función de tipo de contenido (que devuelve una página), o a una plantilla de página (sólo se como hacer tipos .pt y .cpt hasta ahora).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actions for the Content Type are defined (overriden) using the Factory Type Information format, and the process well described in the Archetype tutorials.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las acciones para el tipo de contenido están definidas (anulando) utilizando el formato de Información Factory Type, y el proceso bien descrito en los tutoriales de Arquetipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'll just add that you can make most of the tabs (actions) visible=True or visible=False.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sólo voy a agregar para que usted pueda hacer la mayoría de las pestañas (acciones) visible=True o visible=False.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can append your own actions that show up as tabs for your content type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede agregar sus propias acciones que se muestran como pestañas para tu tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing Page Views</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cambiando vistas de página</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can change the various views of your content type by defining new page templates to display your data.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede cambiar las distintas vistas de su tipo de contenido mediante la definición de nuevas plantillas de página para mostrar sus datos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, these page templates (.pt) are placed within the skins/ directory of your product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Típicamente, estas plantillas de página (.pt) están localizadas en el directorio skins/ de su producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I can't fill you in on exactly how Zope maps the URL (http://.../myArchExample/my_view) to the my_view.pt, but the details are taken care of (by the Install.py script?) and you should put your page templates in the skins/ directory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No puedo decirle exactamente como Zope mapea la URL (http://.../myArchExample/my_view) al my_view.pt, pero los detalles se están trabajando (¿mediante el script Install.py?) y debería colocar sus plantillas de páginas en el directorio skins/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;[This section needs updating, as soon as I learn how it's done.]&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;e0&gt;[Esta sección deber actualizada, tan pronto como yo aprenda como se hace.]&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Validating the Edit Form</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Validando el formulario de edición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You probably have a need to validate the data that users enter on the edit page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es probable que tenga la necesidad de validar los datos que los usuarios introducen en la página de edición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process is called &lt;e0&gt;validation&lt;/e0&gt;, and the scripts that implement the rules are called &lt;e1&gt;validators&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este proceso se llama &lt;e0&gt;validación&lt;/e0&gt;, y los scripts que implementan las reglas se llaman &lt;e1&gt;validadores (o en inglés validators)&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There's a clean way to do this in Archetypes using built-in field validators and your own post_validation() function for the Content Type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay una manera ordenada de hacer esto en Arquetipos utilizando un validador de campo integrado y su propia función post_validation() para el tipo de contenido. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't have to write any (.cpt,.cpy,.vpy) form templates, or controller scripts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No tiene que escribir ninguna plantilla de formulario (.cpt,.cpy,.vpy), ni tampoco scripts de controladores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, validation is optional, so you can skip either step.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, la validación es opcional, por lo que puede pasar cualquiera de estos pasos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use field validators on individual entries (see the validator = (,) field attribute).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use validadores de campo en entradas individuales (vea el atributo de campo validator = (,)).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the first-line of validation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta es la primera línea de validación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a post_validation() function.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Defina una función post_validation().</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows you to validate fields in the context of the entire class, and set error (re-do) flags for individual fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto le permite validar los campos en el contexto de toda la clase, y definir banderas de errores (re-hacer) para los campos individuales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any validators fail, the input field is highlighted, and the user is sent back to the edit page to fix the errors.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si algún validador falla, el campo de entrada se resalta, y el usuario es enviado de vuelta a la página de edición para corregir los errores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all the field validators pass, then your post_validate(self, REQUEST, errors) is called.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si todos los validadores de campo pasan, entonces su post_validate(self, REQUEST, errors) es llamado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The form keys and data are passed to you in the REQUEST dictionary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las llaves de formulario y datos se pasan a usted en el diccionario REQUEST.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your code will validate the edit form values in the REQUEST dictionary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Su código validará los valores del formulario de edición en el diccionario REQUEST.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you see errors that require fixing, you'll set them in the errors dictionary (using the corresponding key in the REQUEST).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted ve errores que necesitan ser corregidos, usted los encontrará en el diccionario de errores (usando la tecla correspondiente en el REQUEST).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, here's a</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, aquí hay una</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot; This function checks the edit form values in context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot; Esta función prueba los valores del formulario de edición en contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's called after the field validation passes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es llamado después de que el campo de validación pase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding Child Members</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agregando miembros hijos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your content type is a folder-like object, you can write functions that will add child objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si su tipo de contenido es un objeto tipo-carpeta, puede escribir funciones que van a agregar objetos hijos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be useful, for example, if your Content Type is a ledger, and you need to add new transactions when the user hits an action.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede ser útil, por ejemplo, si el tipo de contenido es un libro mayor, y es necesario agregar nuevas transacciones cuando el usuario pulsa una acción.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example code shows how to do this.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El siguiente ejemplo de código muestra cómo hacer esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot; This function creates a new MyTransaction object in the folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot; Esta función crea un objeto MyTransaction nuevo en la carpeta.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># create a unique id for this transaction</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># cree una id única para esta transacción</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># create a new MyTransaction object</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># cree un nuevo objeto MyTransaction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return myTransaction.base_edit()     # send the user to the edit page</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>return myTransaction.base_edit()     # envíe al usuario a la página de edición</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implement Archetypes ComputedField and ComputedWidget on your Product and reference other Fields</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Implementar Archetypes ComputedField y ComputedWidget en su producto y hacer referencia a otros campos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple use of ComputedField and ComputedWidget referencing other fields, built-in or 3rd party, in the same Plone product</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un uso sencillo de ComputedField y ComputedWidget haciendo referencia a otros campos, incorporado o de terceros, en el mismo producto de Plone</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Motivation</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Motivación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many reasons why this how-to exists:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay muchas razones para que esta guía exista:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Almost no Archetypes examples using ComputedField and ComputedWidget</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Casi no hay ejemplos de Arquetipos para la utilización ComputedField y ComputedWidget</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We want our product to process some data on itself, but reload isn't a matter of concern</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Queremos que nuestro producto procese por sí mismo algunos datos, pero la recarga no es un asunto de interés</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We love PZP (Python-Zope-Plone)!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Nosotros amamos PZP (Python-Zope-Plone)!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What do we need?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué necesitamos?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Plone installation</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una instalación de Plone</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A nice text editor (my wintel box runs SciTE)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un buen editor de texto (mi caja wintel corre SciTE)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some product (for real dummies like me, try http://plone.org/documentation/tutorial/anonymously-adding-custom-content-types-with-argouml-and-archgenxml/view)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un producto (para un tonto como yo, pruebe http://plone.org/documentation/tutorial/anonymously-adding-custom-content-types-with-argouml-and-archgenxml/view)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What we are going to achieve?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué vamos a lograr?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make a page process it's own information</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hacer un proceso de página es la propia información</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say you created a product, maybe using ArgoUML (an UML editor) and ArchGenXML.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Digamos que usted ha creado un producto, tal vez usando ArgoUML (un editor UML) y ArchGenXML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One thing you might realize it's missing on creating UML's is that: we create classes (Plone products), their types are also classes (Archetypes' fields and widgets) and Attributes (Fields and Widgets' properties) as TD's (tagged data) for Archetypes' types, but we have no &lt;e0&gt;methods&lt;/e0&gt;!&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cosa de la que usted puede darse cuenta es que falta la creación de UML: creamos clases (productos de Plone), sus tipos también son clases (campos y widgets de Arquetipos) y Atributos (campos y propiedades de Widgets) como TD (datos marcados) para tipos de Arquetipos, pero ¡no tenemos &lt;e0&gt;métodos&lt;/e0&gt;! &lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we could do more if we inserted code: classes are made of attributes and methods (code).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pero podríamos hacer más si inserta código: las clases se hacen de atributos y métodos (código),</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But as UML editors are not that Python friendly, we do that by hand.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>pero como los editores UML no son tan amigables con Python, lo hacemos a mano.&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, how?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>pero ¿cómo?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you already have navigated the path of a product, you've stumbled on some source files (.py) inside, so take some time to read their source (&lt;e0&gt;Read the source, Luke!&lt;/e0&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si ya ha navegado por la ruta de un producto, ha tropezado entonces con algunos archivos de código fuente (.py) en el interior, así que tómese algún tiempo para leer la fuente ( &lt;e0&gt;¡Lea el código fuente, amigo!&lt;/e0&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Probably you've seen some like this (for example, MyOrder.py):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Probablemente ha visto algo como esto (por ejemplo, MyOrder.py):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aargh!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡brrr!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I've just core dumped and almost killed 30!&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Acabo de hacer un volcado de memoria y casi mató a 30!&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The above code can be divided in two parts: Schema and Class (Product).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código anterior puede ser divido en dos parte: Esquema y clases (Producto)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have declared 3 different fields in the schema: the first is a bultin trivial Archetype field; the second is imported from the Product DataGridField (you need it installled on your Plone instance to work); the third is our the field we want to change as someone changes values on the form.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos declarado tres campos diferentes en el esquema: el primero es un campo bultin trivial de Arquetipo, el segundo es importado desde el DataGridField de Productos (es necesario tenerlo instalado en su instancia de Plone para que trabaje), el tercero es el campo que queremos cambiar para cuando alguien cambia los valores en el formulario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>o</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expression=&quot;context.calculateTotal()&quot; # VoilÃ¡!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>expression=&quot;context.calculateTotal()&quot; # ¡helo aquí!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference to some real(?) code!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Referencia a un código real!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We've just called something (a function, in fact) named &lt;e0&gt;calculateTotal&lt;/e0&gt;.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Acabamos de llamar a algo (una función que, de hecho) llamado &lt;e0&gt;calculateTotal&lt;/e0&gt;.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But smart as we are, we realized that expresssions called this way must be somewhere in our context scope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, inteligentes como somos, nos dimos cuenta de que expresiones llamadas de esta manera deben estar en algún lugar de nuestro alcance de contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I mean, inside our class definition.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>es decir, dentro de nuestra definición de clase.&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The function definition itself isn't that simple: it adds up the total and returns its value.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La definición de la función en sí no es tan simple: se suma al total y devuelve su valor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What isn't simple?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué no es tan simple?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our generous DataGridField returns a tuple of dictionaries like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nuestro generoso DataGridField devuelve una tupla de diccionarios como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;for&lt;/e0&gt; loop iterates over every item on the tuple and searches for two dictionary items.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El bucle &lt;e0&gt;for&lt;/e0&gt; se repite en cada elemento de la tupla y busca por dos diccionarios. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other field are rather simple to retrieve data: just use field's name attribute.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otros campos son más bien simples para recuperar datos, solamente se usa el atributo de nombre de campos&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e3&gt;widget=SomeWidget(modes='view',...) &lt;/e3&gt;realizes the feat of showing this field only on the view mode: not when adding the item and editting, nor when editting an existing item.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &lt;e3&gt;widget=SomeWidget(modes='view',...) &lt;/e3&gt;se da cuenta de la hazaña de mostrar este campo sólo en el modo de vista: no al agregar el elemento y editarlo, ni cuando se edita un elemento existente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's next?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué sigue?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What could we do with PhotoField (ImageWidget)?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué podemos hacer con PhotoField (ImageWidget)?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>try-except is always recomended</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>try-except siempre es recomendado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Could this better than &lt;e0&gt;mutate&lt;/e0&gt;?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Puede ser esto mejor que &lt;e0&gt;mutar (mutate)&lt;/e0&gt;?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can we make a file avaible for download with some strange mime type based on the information of this product?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Podemos hacer un archivo disponible para descargar con algún tipo extraño mime basado en la información de este producto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Making the view page of a content type use your schemata declarations</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Haciendo que la página de vista de un tipo de contenido utilice sus declaraciones schemata</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to make the schemata declarations in a Archetypes schema be used in the view page of a content type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cómo hacer que las declaraciones schemata en un esquema de Arquetipos se utilice en la página de vista de un tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring schematas in your Archetype schema has the nice effect of displaying the fields of the different schemas on different edit pages (very much like a &quot;wizard&quot; for adding a new content type instance).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Declarar schematas en el esquema de Arquetipo tiene el efecto agradable de mostrar los campos de los diferentes esquemas en diferentes páginas de edición (muy parecido a un &quot;asistente&quot; para agregar una instancia nueva de tipo de contenido).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often times you might like to also have the view page be divided according to the different schemas you have declared.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Muchas veces le gustaría también que la página de vista se dividiera de acuerdo a los diferentes esquemas que se han declarado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is not done automatically by Archetypes so in this document I'll show you how to do it yourself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto no lo hace automáticamente Arquetipos, así que en esta parte le mostraré cómo puede hacerlo usted mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't worry!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡No se preocupe!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's really quite easy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es realmente muy fácil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python class and schema</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Clase Python y el esquema</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'll be using a simple article content type I have constructed for this how-to to show you how the schematas can be used on your content type's view page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Voy a utilizar un tipo simple de artículo de contenido que he construido para esta guía para mostrar cómo las schematas se pueden utilizar en la página vista de tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example type is really not very usable, but just complex enough to show you how to do this.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El tipo de ejemplo no es realmente muy útil, pero lo suficientemente complejo para mostrar cómo hacer esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has a schema of four fields in addition to the default id and title fields: abstract, body, firstname, lastname.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tiene un esquema de cuatro campos, además de la id por defecto y los campos de títulos: abstract (resumen), body (cuerpo), firstname (nombre), lastname (apellido).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The abstract and body fields are in a schemata named article and the firstname and lastname field in a schemata named author.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los campos para resumen y cuerpo están en una schemata llamada &quot;article&quot;  y los campos para nombre y apellido en un esquema llamado &quot;author&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I have also defined the title and id fields to be in schemata article.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También he definido el título y los campos de Id para que estén en schemata article.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This was done so I won't have an extra schemata called default and so I can use the title field for the title of the article.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hizo para no tener una schemata adicional llamado default y para que pueda utilizar el campo de título para el título del artículo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Remember to use &lt;c0&gt;BaseSchema.copy()&lt;/c0&gt;!)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(¡Recuerde usar &lt;c0&gt;BaseSchema.copy()&lt;/c0&gt;!)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class itself has just the schema declaration and a new view action definition.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La clase en sí sólo tiene la declaración de esquema y una definición de acción nueva de vista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I have defined the view action to use a template called article_view that we'll be getting to shortly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>He definido la acción de vista para utilizar una plantilla llamada article_view que obtendremos a la brevedad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the file in it's entirety:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está el archivo en su totalidad:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>View template</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Plantilla View</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The view template article_view is the main part of this how-to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La plantilla view (de vista) article_view es la parte principal de esta guía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has the page template code to generate the different pages for the different schematas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tiene el código de plantilla de página para generar las diferentes páginas para las diferentes schematas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First you should copy the base.pt file from the Archetypes skins folder (on my Debian GNU/Linux unstable it's in /usr/share/zope/Products/Archetypes:1.3/skins/archetypes) to your product's skins folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero debería copiar le archivo base.pt desde la carpeta skins de Arquetipos (en mi Debian GNU/Linux inestable está en /usr/share/zope/Products/Archetypes:1.3/skins/archetypes) a su carpeta skins de productos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has most of the template code you'll need ready, so you'll only need to make some minor changes to make this work.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tiene la mayoría de los código de plantilla que necesita listos, por lo que sólo tendrás que hacer algunos pequeños cambios para que esto funcione.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also it uses all the default macros and such, so you'll view page will look like a real plone page.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También utiliza todas las macros por defecto, etc. Por lo que la vista de página se verá como una verdadera página Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base.pt template just goes through all the fields of your content type and shows their widgets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La plantilla base.pt simplemente va a través de todos los campos de su tipo de contenido y muestra sus widgets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What we want to do is to have it only go through the fields of one schemata at a time and give us links to see the others.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo que queremos hacer es que sólo vaya a través de los campos de una schemata a la vez y nos de enlaces para ver los otros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will be done using REQUEST parameters to the scripts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se puede hacer usando parámetros REQUEST para utilizar scripts.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'll go though the changes from the top of the file downwards so you'll have a easier time keeping up and making the changes to your own template.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Iré a través de los cambios de la parte superior del archivo hasta abajo por lo que le será más fácil entender y hacer los cambios a su propia plantilla.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Links to the different schematas</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Enlaces a las diferentes schematas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll want the list of different schematas to be at the top of the page, so that'll go in first.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a querer que la lista de las distintas schematas estén en la parte superior de la página, para que vayan de primero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Find the line that says '&lt;c0&gt;&lt;metal:main_macro define-macro=&quot;main&quot;&gt;&lt;/c0&gt;'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Encuentre la línea que dice &quot;&lt;c0&gt;&lt;metal:main_macro define-macro=&quot;main&quot;&gt;&lt;/c0&gt;&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is where the body of the template starts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí es donde el cuerpo de la plantilla comienza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After this line is the header with the title and the little icons for edit, print and such, and I want to have my links to show up above that.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Después de que esta línea es el encabezado con el título y los pequeños iconos para editar, imprimir entre otros, quiero que mis enlaces se muestren por encima de esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So after the beginning of the body and above the header add the following code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que después del comienzo del cuerpo y por encima del encabezado agregue el siguiente código:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This just repeats over our schematas' names (we get them with &lt;c0&gt;here.Schemata().keys()&lt;/c0&gt;) and prints all of them on one line as links, each one in square brackets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se repite en nuestros nombres de schematas (los conseguimos con &lt;c0&gt;here.Schemata().keys()&lt;/c0&gt;) e imprime todos ellos en una línea como enlaces, cada uno entre corchetes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The links are to the same view page, but they all set a parameter in REQUEST called page that points to the schemata we are linking to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los enlaces están en la misma página de vista, pero todos ellos definen un parámetro en REQUEST llamado page que apunta al schemata que estamos vinculando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This isn't very pretty so you'll probably want to make them look nicer if you like.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto no es muy bonito, así que es probable que quiera hacer que luzcan mejor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The '&lt;c1&gt;schemata != 'metadata'&lt;/c1&gt;' part is because there's a schemata called metadata created automatically for your content type to support default standard metadata which can be set via the properties tab and that we do not want to include here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La parte &quot;&lt;c1&gt;schemata != 'metadata'&lt;/c1&gt;&quot; se debe a que hay una schemata llamada metadata creada automáticamente para su tipo de contenido para soportar metadata estándar por defecto, lo cual se puede definir a través de la pestaña de propiedades y que no queremos incluir aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Showing only the schemata we want</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mostrar sólo las schemata que queremos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the next part we'll be diving deeper into the code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la siguiente parte vamos a sumergirnos a más profundidad en el código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You're looking for a part that says '&lt;c0&gt;tal:repeat=&quot;field python:here.Schema().filterFields(isMetadata=0)&quot;&lt;/c0&gt;'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted está buscando una parte que diga &quot;&lt;c0&gt;tal:repeat=&quot;field python:here.Schema().filterFields(isMetadata=0)&quot;&lt;/c0&gt;&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This repeats through the fields of your content type and the following parts show their widgets.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se repite a través de los campos de su tipo de contenido y las siguientes partes muestran sus widgets.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What we want to do here is to have it repeat through the fields of the schemata we want instead of all of them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo que queremos hacer aquí es que se repita a través de los campos de schemata que queremos en lugar de todos ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous part we set a parameter in REQUEST called page that points to the schemata we want to see, and here we want to use that to pick which schemata's fields to loop over.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la parte anterior establecimos un parámetro en REQUEST llamado page que apunta a los schemata que queremos ver, y aquí queremos usarlo para elegir qué campos de schemata queremos hacerle bucle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So just go ahead and replace the part with '&lt;c1&gt;tal:repeat=&quot;field python:here.Schemata()[here.REQUEST.get('page', here.Schemata().keys()[0])].filterFields(isMetadata=0)&quot;&lt;/c1&gt;'.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así adelante, vaya y reemplace la parte con &quot;&lt;c1&gt;tal:repeat=&quot;field python:here.Schemata()[here.REQUEST.get('page', here.Schemata().keys()[0])].filterFields(isMetadata=0)&quot;&lt;/c1&gt;'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This just gets the page parameter from REQUEST (if page is not found, ie.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto simplemente obtiene el parámetro de página de REQUEST (si la página no se encuentra, por ejemplo,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the template is called with no parameters, then first schemata, in this case article, is used) and loops through the fields of the schemata with that name.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>la plantilla se llama sin ningún parámetro, entonces primer schemata, en este caso, se utiliza) y hace bucle a través de los campos de la schemata con ese nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The completed article_view.pt looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El article_view.pt terminado se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conclusion</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Conclusión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So that was it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así que eso fue todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I told you it was going to be easy!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Le dije que iba a ser fácil!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Happy hacking!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Feliz hackeo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enabling versioning on your custom content-types</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Activación del versionado en sus tipos de contenidos personalizados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plone 3 includes a robust versioning system as well as a tool for viewing diffs, which allows you to easily see the changes between two revisions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Plone 3 incluye un robusto sistema de versionados así como una herramienta para ver diffs, que le permite ver con facilidad los cambios entre dos revisiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This document explains how to integrate versioning and diff functionality with your custom Archetypes-based content-types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este documento explica cómo integrar el versionado y la funcionalidad diff con sus tipos de contenido base-Arquetipos personalizados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll need a Plone 3 instance and a custom product which contains at least one Archetypes-based content-type on which you want to enable versioning.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted necesitará una instancia de Plone 3 y un producto personalizado que contenga al menos un tipo de contenido base-Arquetipos, en el cual quiera habilitar el versionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll also need to have the &lt;s0&gt;Working Copy Support (Iterate)&lt;/s0&gt; product installed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También va a necesitar tener el producto &lt;s0&gt;Working Copy Support (Iterar)&lt;/s0&gt; instalado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> This product is part of the Plone core so to install it, all you need to do it visit the &lt;s1&gt;Add-on Products&lt;/s1&gt; section (a.k.a.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este producto es parte del core de Plone, para su instalación todo lo que necesita para hacer es visitar la sección de &lt;s1&gt;productos complementarios &lt;/s1&gt;(también conocido como</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quickinstaller) of the &lt;s2&gt;Plone control panel&lt;/s2&gt; and select it for installation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Quickinstaller) del &lt;s2&gt;panel de control de Plone&lt;/s2&gt; y selecciónelo para su instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a setup handler script for GenericSetup</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Crear un script controlador de configuración para GenericSetup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The integration code we'll be writing here is best run as a setup handler using GenericSetup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código de integración que vamos a escribir aquí es mejor ejecutado como un controlador de configuración mediante el uso de GenericSetup.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your product doesn't already have a GenericSetup profile and a custom setup handler, &lt;a0&gt;this tutorial&lt;/a0&gt; provides instructions on how to create those.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si su producto no tiene todavía un perfil GenericSetup y un controlador de configuración personalizada, &lt;a0&gt;este tutorial&lt;/a0&gt; proporciona instrucciones sobre cómo crearlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring versionable types in your setup handler</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Declarar tipos versionables en su controlador de configuración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The portal_repository tool stores a list of content-types on which version is enabled.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La herramienta portal_repository almacena una lista de tipos de contenido en el cual la versión está habilitada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> With the following code we create a list of the custom types on we which we want to activate versioning and then notify the repository tool to start versioning the types in this list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con el siguiente código creamos una lista de los tipos personalizados en donde queremos activar el versionado y luego notificar a la herramienta de repositorio que inicie el versionado de los tipos en esta lista.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you copy the code below, make sure to edit the TYPES_TO_VERSION setting so that it contains a list of the types on which you want to activate versioning.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si copia el código de abajo, asegúrese de editar la configuración TYPES_TO_VERSION para que contenga una lista de los tipos sobre los que desea activar el versionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from Products.CMFCore.utils import getToolByName
from Products.CMFEditions.setuphandlers import DEFAULT_POLICIES

# put your custom types in this list
TYPES_TO_VERSION = ('Scientist', 'Article', 'Presentation')

def setVersionedTypes(portal):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>from Products.CMFCore.utils import getToolByName
from Products.CMFEditions.setuphandlers import DEFAULT_POLICIES

# coloque sus tipos personalizados en esta lista
TYPES_TO_VERSION = ('Scientist', 'Article', 'Presentation')

def setVersionedTypes(portal):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># use append() to make sure we don't overwrite any</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># use append() para asegurarse de no sobrescribir nada</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># content-types which may already be under version control</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Tipos de contenido que ya puede estar bajo el versionado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Add default versioning policies to the versioned type</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Agregue políticas por defecto de versionados para el tipo versionado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we call this function from the &lt;s0&gt;importVarious() function in our setup handler script.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora llamamos esta función desde la función &lt;s0&gt;importVarious() en nuestro script de controlador de configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Make sure to pass the portal object as a parameter.&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de pasar el objeto de portal como un parámetro.&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enabling visual diffs on your versioned types</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Habilitando diffs visuales en sus tipos versionados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you've enabled versioning, you'll probably want to enable visual diffs so you can compare the changes made between different versions of an object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora que ha habilitado el versionado, es probable que desee habilitar diffs visuales para que pueda comparar los cambios entre diferentes versiones de un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting in Plone 3.2 the diff tool can be configured via a GenericSetup configuration file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Iniciando en Plone 3.2 la herramienta diff puede ser configurada con un archivo GenericSetup de configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> You'll want to create or edit the &lt;s0&gt;diff_tool.xml&lt;/s0&gt; file in the /profiles directory of your product.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted querrá crear o editar el archivo &lt;s0&gt;diff_tool.xml&lt;/s0&gt; en el directorio /profiles de su producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Here's an example confirmation file that enables compound diffs on the 3 content-types used in the example above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un ejemplo de archivo de confirmación que permite diffs compuesto en los 3 tipos de contenido utilizados en el ejemplo anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Plone versions earlier than 3.2, there is not a GenericSetup handler for configuring the diff tool, but you can create these settings through the ZMI using the &lt;s0&gt;portal_diff&lt;/s0&gt; tool.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para las versiones de Plone anterior a la 3.2, no hay controlador GenericSetup para la configuración de la herramienta diff, pero puede crear estos valores a través de la ZMI utilizando la herramienta &lt;s0&gt; portal_diff &lt;/s0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> In the &lt;s1&gt;Portal Type&lt;/s1&gt; drop-down menu select the content-type on which you want to enable diffs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En menú desplegable &lt;s1&gt;Portal Type&lt;/s1&gt; seleccione el tipo de contenido sobre el que desea habilitar diffs. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> In the &lt;s2&gt;Field name&lt;/s2&gt; box type &quot;any&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la caja &lt;s2&gt;Field name&lt;/s2&gt; escriba &quot;any&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> For the &lt;s3&gt;Diff Type&lt;/s3&gt; select &quot;Compound Diff for AT Types&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para el &lt;s3&gt;Diff Type&lt;/s3&gt; seleccione &quot;Compound Diff for AT Types&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Finally click the &lt;s4&gt;Add Field&lt;/s4&gt; button.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente haga clic en el botón &lt;s4&gt;Add Field&lt;/s4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Repeat these steps for each content-type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Repita estos pasos para cada tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deploying your new versioning and diffs policy</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desplegar su nuevo versionado y políticas diffs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To deploy these changes you'll need to re-run you product's GenericSetup policy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para implementar estos cambios tendrá que volver a ejecutar la política GenericSetup de producto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> If your instance is not running in debug mode, you'll first need to restart your Zope instance to make your new filesystem code available.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si su instancia no se está ejecutando en modo de depuración, primero tendrá que reiniciar la instancia Zope para hacer el código nuevo de sistema de archivos disponible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assuming you've used paster to create your product package, reinstalling your product in the &lt;s0&gt;Add-on Products&lt;/s0&gt; section of the &lt;s1&gt;Plone control panel&lt;/s1&gt; should be sufficient to re-run your&lt;s2&gt; &lt;s3&gt;GenericSetup policy&lt;/s3&gt;&lt;/s2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asumiendo que usted ha utilizado paster para crear su paquete de producto, la reinstalación de su producto en la sección de &lt;s0&gt;productos complementarios &lt;/s0&gt; del &lt;s1&gt;panel de control de Plone&lt;/s1&gt; debería ser suficiente para volver a ejecutar su &lt;s2&gt;&lt;s3&gt;política GenericSetup&lt;/s3&gt;&lt;/s2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> If your product's install method does not run your GenericSetup policy, you may need to visit the &lt;s4&gt;portal_setup&lt;/s4&gt; tool in the ZMI and run it manually.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si el método de instalación de su producto no ejecuta su política GenericSetup, puede que tenga que visitar la herramienta &lt;s4&gt;portal_setup&lt;/s4&gt; en la ZMI y ejecutarla manualmente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verifying that versioning and visual diffs are now enabled</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Verificando que el versionado y diffs visuales estén ahora habilitados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visit an instance of one of the types on which you've enabled versioning.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Visite una instancia de uno de los tipos en las que ha habilitado el versionado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Make some edits to one or more of the fields save those changes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Haga algunas modificaciones a uno o más campos y guarde esos cambios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Next, visit the &lt;s0&gt;history&lt;/s0&gt; tab for the item you just edited.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego visite la pestaña de &lt;s0&gt;histórico&lt;/s0&gt; para el elemento que recién ha editado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should see a list showing two versions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted debería ver una lista con dos versiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg> Click the link to compare versions you should see a diff showing you what has been changed between the two revisions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si hace clic en el enlace para comparar versiones debería ver un diff que muestra lo que se ha cambiado entre las dos revisiones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org: Creating content types the Plone 2.5 way</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org: Creando tipos de contenido de la forma Plone 2.5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plone 2.5 brings us closer to the promised land of Zope 3.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Plone 2.5 nos acerca a la tierra prometida de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 brings us a new way of working.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Zope 3 nos trae una nueva forma de trabajar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial will show how to marry the old and the new, to make Plone products that are more extensible, better tested and easier to maintain.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este tutorial mostrará cómo casar el viejo y el nuevo, para hacer que productos de Plone sean más extensibles, mejor probados y más fáciles de mantener.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is b-org, and what will you learn here?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Qué es b-org, y que se aprenderá aquí?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org stands for &quot;base-organisation&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org significa &quot;base-organisation&quot; (&quot;organización base&quot;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name had nothing whatsoever to do with my desire to get an svn URL of &lt;a0&gt;http://svn.plone.org/svn/collective/borg&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre, sin embargo, no tiene nada que ver con mi deseo de obtener una URL svn de &lt;a0&gt;http://svn.plone.org/svn/collective/borg&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Promise.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Promesa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, it used to be called &lt;i1&gt;company&lt;/i1&gt;, which some people rightly pointed out is a bit too generic and opens up the possibility of conflicts with other people's code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De hecho antes se llamaba &lt;i1&gt;company (compañia)&lt;/i1&gt;, que como algunas personas señalaron era muy genérico y se abre a la posibilidad de conflictos con códigos de otras personas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It just proves that naming generic components is difficult.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto demuestra que el nombramiento de componentes genéricos es difícil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;b0&gt;Generic &lt;/b0&gt;is the key word here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;b0&gt;Generico &lt;/b0&gt;es la palabra clave aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Functionally, b-org provides infrastructure to help you manage &lt;b1&gt;Departments&lt;/b1&gt;, &lt;b2&gt;Employees&lt;/b2&gt; and &lt;b3&gt;Projects&lt;/b3&gt; in a natural way.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A nivel de función, b-org proporciona la infraestructura para ayudarle a manejar &lt;b1&gt;Departamentos&lt;/b1&gt; , &lt;b2&gt;Empleados&lt;/b2&gt; y &lt;b3&gt;Proyectos&lt;/b3&gt; de una manera natural.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Departments are containers for employees, employees are linked to projects by references.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los departamentos son contenedores de empleados, los empleados están vinculados a proyectos mediante referencias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using &lt;i4&gt;membrane&lt;/i4&gt;, these objects become sources for users and groups, so that a department is a group for all the employees in it, and employees become real users of the system, with usernames and passwords.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizando &lt;i4&gt;membrane&lt;/i4&gt;, estos objetos se convierten en fuentes para usuarios y grupos, así que un departamento es un grupo para todos los empleados que pertenecen a ese determinado grupo, y los empleados se conviertan en usuarios reales del sistema, con nombres de usuario y contraseñas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects manage local roles, so that employees that have been associated with the project are able to add and modify content in it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los proyectos gestionan roles locales, para que los empleados que han sido asociados con el proyecto sean capaces de agregar y modificar contenido en el mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other users may or may not be able to view content in a project, depending on its workflow state.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otros usuarios pueden o no ser capaces de ver el contenido en un proyecto, dependiendo del estado de flujo de trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, b-org makes no assumptions about which metadata you want to associate with departments, employees or projects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, b-org no hace suposiciones sobre que metadatos desea asociar con los departamentos, empleados o proyectos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For that, it expects you to plug in your own content schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ello, se espera que usted conecte su esquema propio de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also delegates almost all its functionality to smaller components, so that if you, for example, want to store authentication details via LDAP or change the way in which users are employees to projects, you can do so by implementing small, isolated components rather than sub-classing and re-implementing large chunks of the three basic content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También delega casi todas sus funcionalidades a componentes más pequeños, por que si por ejemplo quiere almacenar detalles de autenticación vía LDAP o cambiar la manera en que los usuarios son empleados de proyectos, puede hacerlo mediante la implementación de componentes pequeños y aislados en lugar de hacer sub-clases o re-implementando grandes porciones de los tres tipos básicos de contenidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's all well and good, but you're probably not going to want to read a lengthy tutorial just about how great b-org is.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo eso está muy bien, pero probablemente no va a querer leer un tutorial extenso sobre lo genial que es b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the title promises, this tutorial is about &lt;b0&gt;leveraging new technologies available in Plone 2.5&lt;/b0&gt; to write better content types and other software in Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como el título prometió, este tutorial es acerca de &lt;b0&gt;aprovechar nuevas tecnologías disponibles en Plone 2.5&lt;/b0&gt; para escribir mejores tipos de contenido y otros software en Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, you will find the techniques described here useful whether you are writing a member management module using membrane (mmmm), or other code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con suerte, usted encontrará las técnicas descritas aquí útiles ya sea si está escribiendo un módulo de gestión de miembros utilizando membrane (mmmm), u otro código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I for one, want to go and rewrite several of my products (like Poi) to make them more extensible and flexible after having adopted these techniques.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por mi parte, quiero ir y volver a escribir algunos de mis productos (como Poi) para que sean más extensibles y flexibles después de haber adoptado estas técnicas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, you will also learn something about the &lt;b1&gt;development process&lt;/b1&gt;, in particular &lt;b2&gt;test-driven development&lt;/b2&gt;, that I followed, and how the future of Plone is entangled in &lt;b3&gt;Zope 3&lt;/b3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Espero que usted también aprenda algo sobre el &lt;b1&gt;proceso de desarrollo&lt;/b1&gt; , en particular, &lt;b2&gt;test-driven development&lt;/b2&gt;, que yo he seguido, y cómo el futuro de Plone está enredado con &lt;b3&gt;Zope 3&lt;/b3&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>RichDocument: Creating content types the Plone 2.1 way</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>RichDocument: Creando tipos de contenido de la forma Plone 2.1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial should be viewed as complementary to, rather than superceding, my earlier tutorial entitled &lt;a0&gt;&lt;i1&gt;RichDocument - Creating Content Types the Plone 2.1 way&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este tutorial debe ser visto como complementario a, más que sustituyendo, mi tutorial anterior titulado &lt;a0&gt;&lt;i1&gt;RichDocument - Creación de tipos de contenido de la forma en Plone 2.1&lt;/i1&gt;&lt;/a0&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The techniques of RichDocument, in particular relating to extending ATContentTypes, are still valid in Plone 2.5.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las técnicas de RichDocument, en particular en relación con la ampliación de ATContentTypes, siguen siendo válidas en Plone 2.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What Plone 2.5 allows us to do, however, is to achieve better separation of concerns between content storage, business logic and view logic, due to the added spices of Zope 3.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo que Plone 2.5 nos permite hacer, sin embargo, es lograr una mejor separación de responsabilidades entre almacenamiento de contenido, lógica de negocios y lógica de vista, debido a la adición de sabores de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For RichDocument, the gain wouldn't be that great since it's relatively simple (and focuses on doing as little as possible by re-using as much as possible from ATContentTypes).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para RichDocument, la ganancia no sería tan grande ya que es relativamente sencilla (y se centra en hacer lo menos posible para reutilizar lo más posible de ATContentTypes).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, I didn't update the RichDocument tutorial, nor do I feel as compelled to update RichDocument itself (yet).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, no actualicé el tutorial RichDocument, ni me siento obligado a actualizar RichDocument como tal (todavía).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org is a more ambitious example which allows us to illustrate the new techniques more fully.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org es un ejemplo más ambicioso que nos permite ilustrar las nuevas técnicas con más detalle.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using zope.formlib With Plone</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>utilizando zope.formlib con Plone</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One thing to note is that this tutorial is still centered on &lt;b0&gt;Archetypes&lt;/b0&gt;, and assumes you know the basics of Archetypes development on the filesystem.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cosa que hay que destacar es que este tutorial aún está centrado en &lt;b0&gt;Arquetipos&lt;/b0&gt;, y asume que conoce los aspectos básicos del desarrollo de Arquetipos en el sistema de archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes is rooted in a pre-Zope 3 world, and there are times when we have to accommodate it in ways that make our clean patterns a bit messier - luckily, not too often.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos tiene sus roots en un mundo anterior a Zope 3, y pasa algunas veces que tenemos que acomodarlo en formas que haga a nuestros patrones ordenados un poco más desordenados, afortunadamente no es muy seguido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are ways of managing content in Zope 3 that can be applied to Plone, for example by way of &lt;a1&gt;zope.formlib&lt;/a1&gt;, but these are generally not quite ready to replace what we can do today with Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay formas de administrar contenidos en Zope 3 que pueden ser aplicadas a Plone, por ejemplo a través de &lt;a1&gt;zope.formlib&lt;/a1&gt;, pero estas generalmente no están realmente listas para reemplazar lo que podemos hacer hoy con Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the future, they may be, but more likely Archetypes will converge a bit more with its Zope 3 equivalents and blur the lines between the two approaches.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el futuro, puede que lo sean, pero es más probable que Arquetipos cubra un poco más con sus equivalentes de Zope 3 y esparza las líneas entre los dos enfoques.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The upshot is that what you know about Archetypes today continues to be relevant, and is augmented by the Zope 3-inspired techniques you will find here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La conclusión es que lo que sabe sobre Arquetipos hoy en día sigue siendo relevante, y se ve aumentada por las técnicas Zope 3-inspirado que encontrará aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A whirlwind tour of Zope 3</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un viaje relámpago por Zope 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 is still fairly new.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Zope 3 es todavía relativamente nuevo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After reading this tutorial, it should hopefully start to feel a bit more familiar.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Después de leer este tutorial, es de esperar que empiece a sentirse un poco más familiarizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this section, we will give a brief overview of what is different in Zope 3 and how it fits into Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En esta sección, daremos un breve repaso a lo que es diferente en Zope 3 y cómo encaja en Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name Zope 3 is a lie.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre Zope 3 es una mentira.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>True - it is brought to you by many of the same clever people who built Zope 2, one of the most advanced open source app servers of its day.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Verdad: que es traído a usted por gran parte de la misma gente ingeniosa que construyó Zope 2, uno de los servidores más avanzados de aplicaciones código abierto de su época.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>True, it is still Python, it still publishes things over the web, and there are still Zope Page Templates.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es cierto que todavía es Python, que sigue publicando cosas en la web, y todavía hay plantillas de página Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, Zope 3 is about small, re-usable components orchestrated into a flexible framework.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, Zope 3 se trata de componentes pequeños y reutilizables orquestados en un marco (framework) flexible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is this flexibility that allows us to use Zope 3 technologies in Zope 2 applications like Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es esta flexibilidad que nos permite utilizar tecnologías Zope 3 en aplicaciones Zope 2 como Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A piece of wizardry called &lt;e0&gt;Five&lt;/e0&gt; (Zope 2 + Zope 3 = Five, geddit?) makes a number of Zope 3 components directly available in Zope 2, and since Zope 2.8, almost all of Zope 3 has shipped with Zope 2 as a python library.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una parte de la magia llamada &lt;e0&gt;Five&lt;/e0&gt; (Zope 2 + Zope 3 = Five, geddit?) hace una serie de componentes Zope 3 disponibles directamente en Zope 2, y desde Zope 2.8, casi todo lo de Zope 3 ha sido enviado con Zope 2 como una biblioteca python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plone 2.5's primary purpose was to lay the foundations for taking advantage of Zope 3 technologies in Plone.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El propósito primario de Plone 2.5 era sentar las bases para el aprovechamiento de las tecnologías Zope 3 en Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 may seem a bit alien at first, because it uses strange concepts such as &lt;s0&gt;adapters&lt;/s0&gt; and &lt;s1&gt;utilities&lt;/s1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Zope 3 puede parecer un poco raro al principio, ya que usa conceptos extraños tales como &lt;s0&gt;adapters (adaptadores)&lt;/s0&gt; y &lt;s1&gt;utilities (utilidades)&lt;/s1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Luckily, these are not so difficult to understand, and once you do, you will find that they help you focus your development on smaller and more manageable components.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por suerte, estas no son tan difíciles de entender, y una vez que lo hace, usted encontrará que le ayudan a centrar su desarrollo en los componentes más pequeños y manejables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will also find that these basic concepts underpin most of the innovative parts of Zope 3.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted también encontrará que estos conceptos básicos sustentan la mayoría de las piezas innovadoras de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everything in Zope 3 starts with interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo en Zope 3 comienza con interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike Java or C#, say, Python does not have a native type for an interface, so an interface in Zope 3 is basically a class that contains only empty methods and attributes, and inherits from &lt;e0&gt;Interface&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A diferencia de Java o C#, Python no tiene un tipo nativo para una interfaz, por lo que una interfaz en Zope 3 es básicamente una clase que contiene solamente métodos y atributos vacíos, y hereda de &lt;e0&gt;Interface&lt;/e0&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a basic example:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un ejemplo básico:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A shoe</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un zapato</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>color = Attribute(&quot;Color of the shoe&quot;)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>color = Attribute(&quot;Color del zapato&quot;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>size = Attribute(&quot;Shoe size&quot;)

class IShoeWearing(Interface):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>size = Attribute(&quot;Talla del zapato&quot;)

class IShoeWearing(Interface):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;An object that may wear shoes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un objeto que pueda utilizar zapatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Wear the given pair of shoes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Vestir el par dado de zapatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces are primarily documentation - everything has docstrings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las Interfaces son documentación principal; todo tiene docstrings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also note that the &lt;e0&gt;wear()&lt;/e0&gt; method lacks a body (there is not even a &lt;e1&gt;pass&lt;/e1&gt; statement - the docstring is enough to keep the syntax valid), and does not take a &lt;e2&gt;self&lt;/e2&gt; parameter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También note que el método 0&gt;wear()&lt;/e0&gt; le falta un cuerpo (no hay ni siquiera una sentencia &lt;e1&gt;pass&lt;/e1&gt;; el docstring es suficiente para mantener la sintaxis válida), y toma un parámetro &lt;e2&gt;self&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is because you will never instantiate or use an interface directly, only use it to specify the behaviour of an object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se debe a que nunca instanciará o usará una interfaz directamente, sólo se utiliza para especificar el comportamiento de un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object can be associated with an interface in a few different ways.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un objeto puede estar asociado con una interfaz en diferentes maneras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common way is via its class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La forma más común es a través de su clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We say that the class &lt;e0&gt;implements&lt;/e0&gt; an interface, and objects of that class &lt;e1&gt;provide&lt;/e1&gt; that interface:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Dijimos que la clase &lt;e0&gt;implementa&lt;/e0&gt; una interfaz, y los objetos de esa clase &lt;e1&gt;proporcionan&lt;/e1&gt; esa interfaz:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A regular shoe</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un zapato regular</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;implements(IShoe)&lt;/e0&gt; line means that objects of this class will provide IShoe.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La línea &lt;e0&gt;implements(IShoe)&lt;/e0&gt; significan que los objetos de esta clase proporcionarán IShoe.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further, we fulfill the interface by setting the two attributes (we could have implemented them as properties or used a an __init__() method as well).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además, llenaremos la interfaz mediante el establecimiento de dos atributos (que podríamos haberlas implementado como propiedades o utilizado como un método __init__ () también).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e1&gt;IShoeWearing&lt;/e1&gt; interface will be implemented in the section on adapters below.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La interfaz &lt;e1&gt;IShoeWearing&lt;/e1&gt; será implementada en la sección sobre adaptadores más abajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We use interfaces to model components.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usamos las interfaces para modelar componentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces are normally the &lt;s0&gt;first stage of design&lt;/s0&gt;, in that you should define clear interfaces and write actual classes to fulfill those interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Generalmente las interfaces son normalmente la &lt;s0&gt;la primera etapa de diseño&lt;/s0&gt;,  en la que usted debería definir claras interfaces y escribir clases para llenar esas interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This formalism makes for great documentation - interfaces are conventionally found in an &lt;e1&gt;interfaces&lt;/e1&gt; module, and this is typically the first place you look after browsing a package's documentation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este formalismo es bueno para documentación;las interfaces convencionalmente se encuentran en un módulo de &lt;e1&gt;interfaces&lt;/e1&gt;, y este suele ser el primer sitio donde se busca después de revisar la documentación de un paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also underpins the adapter and utility system - otherwise known as the Component Architecture - as described below.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También sostiene el adaptador y el sistema de utilidades; conocida también como la Arquitectura de componentes, descrita a continuación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you can use common OOP techniques in designing interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que puede utilizar técnicas de programación orientada a objetos (OOP) comunes en el diseño de interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If one interface describes a component that has an &quot;is-a&quot; or &quot;has-a&quot; relationship to another component, you can let interfaces subclass or reference each other.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si una interfaz describe un componente que tiene un &quot;is-a&quot; o &quot;has-a&quot; relación a otro componente, puede dejar subclase de interfaces o relacionarlas entre sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object will provide the interfaces of its class, and all its base-classes, and all base-interfaces of those interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un objeto proporcionará las interfaces de su clase, todas sus base-clases, y todas las base-interfaces de esas interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't worry about untangling that - it works the way you would expect.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No se preocupe por desenmarañar eso; funciona de la manera que uno esperaría.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also apply interfaces directly to an object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También se pueden aplicar las interfaces directamente a un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if that interface has methods and attributes, they must be provided by the object, and unless you resort to crazy dynamic programming, the object will get those from its class, which means that you may as well have applied the interface to the class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, si esa interfaz tiene métodos y atributos, deben ser proporcionados por el objeto, y al menos que recurra a programación dinámica loca, el objeto conseguirá estos de su clase, lo que significa que es posible que también ha aplicado la interfaz a la clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, some interfaces don't have methods or attributes, but are used as markers to distinguish a particular feature of an object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, algunas interfaces no tienen métodos ni atributos, pero se utilizan como marcadores para distinguir una característica particular de un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such &lt;s0&gt;marker interfaces&lt;/s0&gt; may be used as follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tales &lt;s0&gt;interfaces de marcadores&lt;/s0&gt; pueden ser usadas así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A shoe that is damaged</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un zapato que está dañado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Marker interfaces are very useful for things that change at run-time in response to some event (e.g. some user action), and thus cannot be determined in advance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las interfaces marcador son muy útiles para cosas que cambian al momento de ejecución para algún evento (ejemplo, alguna acción de usuario), y por lo tanto no pueden ser determinadas por adelantado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a moment, you see that what you will learn about adapters and adapter factories below also applies to marker interfaces - it is possible to alter which adapter factory is invoked by applying a different marker interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En un momento, verá que lo que usted aprenderá acerca de los adaptadores y fábricas de adaptadores más abajo también se aplica a las interfaces marcador; es posible alterar que fábrica de adaptador es invocada mediante la aplicación de una interfaz marcador diferente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's also possible to apply interfaces directly to classes (that is the &lt;e0&gt;class itself&lt;/e0&gt; provides the interface, as opposed to the more usual case where the class implements the interface so that objects of that class provides it - this is useful because it allows you to group those classes together and describe the &lt;e1&gt;type&lt;/e1&gt; of class they are) and to modules (where you want to describe the public methods and variables of a module).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También es posible aplicar interfaces directamente a las clases (esto es la &lt;e0&gt;la clase misma&lt;/e0&gt; proporciona la interfaz, en comparación con el caso más habitual en que la clase implementa la interfaz para que los objetos de esa clase la proporcionen. Esto es útil porque le permite agrupar esas clases juntas y describir el &lt;e1&gt;tipo&lt;/e1&gt; de clase que son) y modularlas (donde quiere describir los métodos públicos y variables de un módulo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These constructs are less common, so don't worry about them for now.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas construcciones son tan comunes, así que por ahora no se preocupe por ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Look at the documentation and interfaces (!) in the &lt;e2&gt;zope.interface &lt;/e2&gt;package for more.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Revise la documentación e interfaces en el paquete &lt;e2&gt;zope.interface &lt;/e2&gt; para más información.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adapters</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Adaptadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most important thing that Zope 3 promises is &lt;s0&gt;separation of concerns&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las cosa más importantes que Zope 3 promete es la &lt;s0&gt;separación de preocupaciones&lt;/s0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Zope 2, almost everything has a base class that pulls in a number of mix-in classes, such as &lt;e1&gt;SimpleItem&lt;/e1&gt; (surely, the most ironically named class in Zope 2) and its plethora of base classes that include &lt;e2&gt;RoleManager&lt;/e2&gt;, &lt;e3&gt;Acquisition.Implicit &lt;/e3&gt;and many others.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Zope 2, casi todo tiene una clase base que hala una serie de clases combinadas entre sí, tal como &lt;e1&gt;SimpleItem (&quot;elementosimple&quot;)&lt;/e1&gt; (sin duda, la clase más irónicamente llamada en Zope 2) y su abundancia de clases base que incluyen &lt;e2&gt;RoleManager&lt;/e2&gt;, &lt;e3&gt;Acquisition.Implicit&lt;/e3&gt; y muchos otras.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that a class written for Zope 2 is nearly impossible to re-use outside of Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto significa que una clase escrita para Zope 2 es casi imposible volverla a utilizar fuera de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, in Zope 2 we are tightly wedded to the &lt;e0&gt;context&lt;/e0&gt; (aka &lt;e1&gt;here&lt;/e1&gt;) because it is so convenient to use in page templates, workflow scripts etc.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Además, en Zope 2 estamos firmemente comprometidos con el &lt;e0&gt;contexto&lt;/e0&gt; (También conocido como &lt;e1&gt;here&lt;/e1&gt; ) porque es muy cómodo de usar en las plantillas de página, scripts de flujo de trabajo, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, people often write an Archetypes class that contains a schema (storage logic), methods for providing various operations (business logic) and methods for preparing things to display in a page template (view logic).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, la gente suele escribir una clase de Arquetipos que contenga un esquema (lógica de almacenamiento), métodos para proveer varias operaciones (lógica de negocio) y métodos para preparar las cosas y mostrarlas en una plantilla de página (lógica de vista).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, people do this simply because they can't think of a better place to put things, but it does mean that re-using any part of the functionality becomes impossible without importing the whole class - and its base classes, which include Archetypes' BaseObject, CMF's DynamicType, and Zope's SimpleItem - to name a few!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A menudo, la gente hace esto simplemente porque no puede pensar en un mejor lugar para poner las cosas, pero sí quiere decir que re-utilizar cualquier parte de la funcionalidad se hace imposible sin la importación de toda la clase; y sus clases base, que incluyen arquetipos BaseObject, DynamicType CMF, y SimpleItem Zope, ¡por nombrar algunas!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Think about the example above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Piense en el ejemplo anterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;Shoe&lt;/e0&gt; class is well-contained and only concerned with one thing - storing the attributes of shoes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La clase &lt;e0&gt;Shoe&lt;/e0&gt; está bien contenida y sólo se preocupa por una cosa; el almacenamiento de los atributos de zapatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be used as an abstraction of shoe anywhere, and is very lightweight.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se puede utilizar como una abstracción de zapatos en cualquier lugar, y es muy ligero.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's consider that we may want to wear shoes as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora consideremos que también queremos utilizar los zapatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can create a pair of shoes easily enough:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Podemos crear entonces un par de zapatos lo suficientemente fácil:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we want someone to wear these shoes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora queremos a alguien que use estos zapatos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say we have a person:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Digamos que tenemos una persona:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A person</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Una persona</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apparel = Attribute(&quot;A list of things this person is wearing&quot;)

class Person(object):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>apparel = Attribute(&quot;Una lista de las cosas que esta persona está usando&quot;)

class Person(object):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a Zope 2 world, we may have required Person to mix in some &lt;e0&gt;ShoeWearingMixin&lt;/e0&gt; class that specified exactly how shoes should be worn.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En un mundo Zope 2, quizá podemos haber requerido a Person (persona) que se mezcle en alguna clase &lt;e0&gt;ShoeWearingMixin&lt;/e0&gt; que ha especificado exactamente como zapatos debería usarse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That makes for fat interfaces that are difficult to understand.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto crea interfaces gordas cargadas que son difíciles de entender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a Zope 3 world, we would more likely use an adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En un mundo Zope 3, tendríamos la tendencia a usar un adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An adapter is a glue component that can adapt an object providing one interface (or a particular combination of interfaces, in the case of a multi-adapter) to another interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un adaptador es un componente adhesivo que se puede adaptar un objeto proporcionando una interfaz (o una combinación particular de interfaces, en el caso de un multi-adaptador) a otra interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We already have a specification for something that wears shoes, in the form of &lt;e0&gt;IShoeWearing&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya tenemos una especificación para algo que usa zapatos, en la forma de &lt;e0&gt;IShoeWearing&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a snippet of code that may use this interface:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un fragmento de código que puede utilizar esta interfaz:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The question is what to do with the '...' - how do we obtain an object that provides IShoeWearing?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La pregunta es que hacemos con '...' ; ¿De que manera obtenemos un objeto que proporcione IShoeWearing?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Code like this is normally operating on some context, which in this case may be a &lt;e0&gt;Person&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Código como este está normalmente operando en algún contexto, que en este caso puede ser una &lt;e0&gt;Persona&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If that Person implemented IShoeWearing (or at least the &lt;e1&gt;wear() &lt;/e1&gt;method), it would work, but then we are making undue demands on Person.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esa &quot;Person&quot; implementó IShoeWearing (o al menos el método &lt;e1&gt;wear() &lt;/e1&gt;), funcionará, pero entonces estamos haciendo demandas excesivas en Person.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What we need is a way to &lt;e2&gt;adapt &lt;/e2&gt;this IPerson to something that is IShoeWearing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo que necesitamos es una forma de &lt;e2&gt;adaptar &lt;/e2&gt;esta IPerson a algo que sea IShoeWearing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do that, we need to write an adapter:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para ello, tenemos que escribir un adaptador:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Adapter allowing a person to wear shoes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Adaptador que permite que una persona use zapatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we implement the IShoeWearing interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí implementamos la interfaz IShoeWearing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note how the &lt;e0&gt;wear()&lt;/e0&gt; method now has a &lt;e1&gt;self&lt;/e1&gt; parameter, since this is a real object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note cómo el método &lt;e0&gt;wear()&lt;/e0&gt; tiene un parámetro &lt;e1&gt;self&lt;/e1&gt;, ya que este es un objeto real.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also note the &lt;e2&gt;__init__()&lt;/e2&gt; method, which takes a parameter conventionally called &lt;e3&gt;context&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También vea el método &lt;e2&gt;__init__()&lt;/e2&gt;, el cual toma un parámetro llamado &lt;e3&gt;context&lt;/e3&gt; por convención.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is &lt;e4&gt;the thing that is being adapted&lt;/e4&gt;, in this case an object providing IPerson.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es &lt;e4&gt;lo que está siendo adaptado&lt;/e4&gt;, que en este caso es un caso proporcionando IPerson.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We store this as an instance variable and then reference it later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nosotros almacenamos esto como una variable de instancia y luego le hacemos referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that adapters are almost always transient objects that are created on the fly (we will see how in a second).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que los adaptadores son casi siempre objetos transitorios creados sobre la marcha (vamos a ver cómo en un segundo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could now do something like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora podríamos hacer algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this still requires that we know exactly which adapter to invoke for the particular object (&lt;e0&gt;person &lt;/e0&gt;in this case), effectively creating a tight coupling between the adapter, the thing being adapted, and the code using the adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, esto requiere que sepamos exactamente que adaptador invocar para el objeto en particular (&lt;e0&gt; person &lt;/e0&gt; en este caso), creando una estrecha conexión entre el adaptador, la cosa que se es adaptada, y el código que utiliza el adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Luckily, the Zope 3 Component Architecture knows how to find the right adapter if you only tell it about the available adapters.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Afortunadamente, la arquitectura de componentes Zope 3 sabe cómo encontrar el adaptador correcto si solo le dice sobre los adaptadores disponibles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We do that using &lt;s0&gt;ZCML&lt;/s0&gt;, the Zope Configuration Markup Language.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hacemos esto utilizando &lt;s0&gt;ZCML&lt;/s0&gt;, el Lenguaje de Marcado de Configuración Zope
</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is an XML dialect that is used to configure many aspects of Zope 3 code, such as permissions and component registration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este es un dialecto XML que se utiliza para configurar muchos aspectos del código de Zope 3, tales como permisos y registro de componentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do what ZCML does in Python code as well, but typically it's more convenient to use ZCML because it allows you to separate your logic from your configuration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede hacer lo que hace ZCML en el código Python también, pero por lo general es más conveniente utilizar el ZCML, ya que permite separar su lógica de su configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ZCML directives are stored in file called &lt;e0&gt;configure.zcml&lt;/e0&gt;, which itself may include other files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las directivas ZCML se almacenan en el archivo llamado &lt;e0&gt;configure.zcml&lt;/e0&gt; ,que por sí mismo puede incluir otros archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e1&gt;configure.zcml&lt;/e1&gt; file in your product directory (Products/myproduct/configure.zcml) will be picked up automatically by Five.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un archivo &lt;e1&gt;configure.zcml&lt;/e1&gt; en su directorio de producto (Products/myproduct/configure.zcml) será automáticamente elegido por Five.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a snippet that will register the above adapter:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un fragmento que registrará el adaptador de arriba:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will sometimes see a fuller form of this directive, like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Algunas veces verá una forma más completa de esta directiva, como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we are specifying full dotted names to interfaces in the &lt;e0&gt;for&lt;/e0&gt; or &lt;e1&gt;provides&lt;/e1&gt; attributes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí estamos especificando nombres con puntos completos para las interfaces en los atributos &lt;e0&gt;for&lt;/e0&gt; o &lt;e1&gt;provides&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are equivalent to the &lt;e2&gt;adapts()&lt;/e2&gt; and &lt;e3&gt;implements()&lt;/e3&gt; calls we used when defining the adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos son equivalente a las llamadas &lt;e2&gt;adapts()&lt;/e2&gt; y &lt;e3&gt;implements()&lt;/e3&gt; que utilizamos al definir el adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;e4&gt;adapts()&lt;/e4&gt; did not work prior to Zope 2.9 (so the ZCML &lt;e5&gt;for&lt;/e5&gt; attribute is mandatory), and that if your adapter class for some reason implements more than one interface (e.g. because it's inheriting another adapter that has its own &lt;e6&gt;implements()&lt;/e6&gt; call), you may need to specify &lt;e7&gt;provides&lt;/e7&gt; to let Zope 3 know which interface you're really adapting to.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que &lt;e4&gt;adapts()&lt;/e4&gt; no funcionó antes de Zope 2.9 (por lo que el atributo ZCML &lt;e5&gt;for&lt;/e5&gt; es obligatorio), y que si su adaptador de clase por alguna razón implementa más de una interfaz (por ejemplo, porque esta heredando de otro adaptador que tiene su propia llamada &lt;e6&gt;implements()&lt;/e6&gt;), puede que tenga que especificar &lt;e7&gt;provides&lt;/e7&gt; para dejar que Zope 3 conozca a que interfaz realmente se está adaptando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice here that the dotted names begin with dot.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nótese aquí que los nombres con puntos comienzan con un punto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means &quot;relative to the current package&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto significa &quot;relativo al paquete actual&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write &lt;e0&gt;&quot;..foo.bar&quot;&lt;/e0&gt; to reference the parent package as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede escribir &lt;e0&gt;&quot;..foo.bar&quot;&lt;/e0&gt; para hacer referencia al paquete padre también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could specify an absolute path instead, e.g. &lt;e1&gt;Products.Archetypes.interfaces.IBaseObject &lt;/e1&gt;or &lt;e2&gt;zope.app.annotation.interfaces.IAttributeAnnotatable&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede especificar un ruta absoluta en lugar de por ejemplo &lt;e1&gt;Products.Archetypes.interfaces.IBaseObject &lt;/e1&gt;o &lt;e2&gt;zope.app.annotation.interfaces.IAttributeAnnotatable&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, you use the full dotted name for things in other packages and the relative name for things in your own package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Normalmente, utiliza el nombre completo con puntos para cosas en otros paquetes y el nombre completo relativo para cosas en su propio paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;factory&lt;/e0&gt; attribute normally references a class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El atributo &lt;e0&gt;factory&lt;/e0&gt; normalmente hace referencia a una clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Python, a class is just a callable (taking the parameters specified in its &lt;e1&gt;__init__() &lt;/e1&gt;method) that returns an instance of itself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Python, una clase es sólo un &quot;llamable&quot; (tomando los parámetros especificados en su método &lt;e1&gt;__init__() &lt;/e1&gt;) que devuelve una instancia de sí mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can reference another callable as well if you need to, such as a function that takes the same parameters (only &lt;e2&gt;context&lt;/e2&gt; in this case - obviously there is no &lt;e3&gt;self&lt;/e3&gt; for functions), finds or constructs and object (which must provide &lt;e4&gt;IShoeWearing&lt;/e4&gt;) and then returns it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede hacer referencia a otro llamable si es necesario, como una función que toma los mismos parámetros (sólo &lt;e2&gt;context&lt;/e2&gt; en este caso , obviamente, no hay &lt;e3&gt;self&lt;/e3&gt; para funciones), encuentra o construye un objeto (que debe proporcionar &lt;e4&gt;IShoeWearing&lt;/e4&gt; ) y luego lo devuelve.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is rarely used, but can be very powerful (for example, it could find an object providing the given interface in the adapted object's annotations - but don't worry if you don't understand that for now).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se utiliza muy poco, pero puede ser muy poderoso (por ejemplo, podría encontrar un objeto que proporciona la interfaz dada en las anotaciones del objeto adaptado, pero no se preocupe si no entiende eso por el momento).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this wiring in place, we can now find an adapter for an IPerson to IShoeWearing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con estas conexiones en su lugar, ahora se puede encontrar un adaptador para un IPerson a IShoeWearing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Component Architecture will ensure that we find the correct adapter:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La arquitectura de componentes se asegurará que encontremos el adaptador correcto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are &quot;calling&quot; the interface, which is a convenience syntax for an adapter lookup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estamos &quot;llamando&quot; la interfaz, que es una sintaxis conveniente para una lookup (busqueda) de adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an adapter cold not be found, you will get a&lt;e0&gt; ComponentLookupError&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si un adaptador no pudo ser encontrado, obtendrá un &lt;e0&gt; ComponentLookupError&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are plenty of functions in &lt;e1&gt;zope.component&lt;/e1&gt; to discover adapters and other components - see &lt;e2&gt;zope.component.interfaces&lt;/e2&gt; for the full story.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay bastantes funciones en &lt;e1&gt;zope.component&lt;/e1&gt; para descubrir adaptadores y otro componentes; vea &lt;e2&gt;zope.component.interfaces&lt;/e2&gt; para la historia completa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to realise that the adapter lookup is essentially a search.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es importante darse cuenta que un lookup de adaptador es esencialmente una búsqueda.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Component Architecture will look at the interfaces provided by &lt;e0&gt;person &lt;/e0&gt;and look for a suitable adapter to IShoeWearing.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La arquitectura de componentes buscará en las interfaces proporcionadas por &lt;e0&gt;person&lt;/e0&gt; y buscará por un adaptador adecuado para IShoeWearing.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned before, it's possible for an object to provide many interfaces, e.g. inherited from its base classes, implemented explicitly by the object (by declaring &lt;e1&gt;implements(IFoo, IBar)&lt;/e1&gt;), via ZCML or because an object directly provides an interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como se mencionó anteriormente, es posible para un objeto proporcionar muchas interfaces, por ejemplo, heredado de sus clases base, implementado de forma explícita por el objeto (al declarar &lt;e1&gt;implements(IFoo, IBar)&lt;/e1&gt;), a través de ZCML o porque directamente un objeto proporciona una interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is therefore possible that there are multiple adapters that could be applicable.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por tanto, es posible que haya varios adaptadores que podrían ser aplicables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, Zope 3 will use the &lt;e2&gt;interface resolution order&lt;/e2&gt; (IRO) to find the&lt;s3&gt; most specific&lt;/s3&gt; adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, Zope 3 utilizará el &lt;e2&gt;orden de resolución de interfaces&lt;/e2&gt; (IRO - interface resolution order) para encontrar el adaptador &lt;s3&gt; más específico &lt;/s3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The IRO is much like you would expect of polymorphism in traditional OOP:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El IRO es muy parecido a lo se esperaría de polimorfismo en programaciones orientadas a objetos tradicionales:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an interface directly provided by the object is more specific than one provided by its class</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>una interfaz directamente proporcionada por el objeto es más específica que la proporcionada por su clase</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an object provided by an object's class is more specific than that provided by a base class</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>un objeto proporcionado por la clase de un objeto es más específica que la proporcionada por una clase base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if an object has multiple base classes, interfaces are inherited in the same order as methods are inherited</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si un objeto tiene múltiples clases base, las interfaces se heredan en el mismo orden que los métodos son heredados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if a class implements multiple interfaces, the first one specified is more specific than the second one, and so on</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>si una clase implementa las interfaces múltiples, la primera especificada es más específica que la segunda, y así sucesivamente</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember marker interfaces?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¿Recuerda que las interfaces marcador (o de marcador)?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One use of marker interfaces is to imply a particular adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Uno de los usos de las interfaces de marcador es dar a entender un adaptador en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Think about the case where you may have  specific adapter to IShoeWearing for some marker interface IAmputee.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Piense en el caso de que usted pueda tener un adaptador específico para IShoeWearing para alguna interfaz marcador IAmputee.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you mark a person as an IAmputee due to some unforunate accident, the IShoeWearing adapter may raise a warning rather than modify the apparel list.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted marca a una persona como IAmputee (amputado o manco) debido a algún accidente , el adaptador IShoeWearing podrá mostrar una advertencia en lugar de modificar la lista de prendas de vestir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of this may seem a little roundabout and unfamiliar, but you'll get to grips with it soon enough.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo esto puede parecer un poco tortuoso y desconocido, pero va a poder familiarizarse muy pronto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's re-cap how we arrived at this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a recapitular cómo llegamos aquí:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We modelled our application domain with some interfaces - IPerson, IShoe</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos modelado nuestro dominio de aplicación con algunas interfaces; IPerson, iShoe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We modelled an aspect of a person (or other object) for wearing shoes - IShoeWearing</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos modelado un aspecto de una persona (u otro objeto) para usar zapatos; IShoeWearing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We wrote some simple classes that implemented the domain interfaces IPerson and IShoe</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos escrito algunas clases simples que implementaron las interfaces de dominio interfaces IPerson y iShoe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We wrote and registered a simple adapter that could adapt an IPerson to IShoeWearing</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos escritos y registrado un simple adaptador que puede adaptar un IPerson a un IShoeWearing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then we showed how this could be used by some hypothetical client code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego mostramos cómo esto podría ser utilizado por un código de cliente hipotético.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The upshot is that the client code only needed to know about IPerson and IShoeWearing, not how the aspect of a person that involves wearing shoes is implemented.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El resultado es que el código de cliente que sólo necesitaba saber sobre IPerson y IShoeWearing, y no cómo el aspecto de una persona que involucra usar zapatos es implementado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Component Architecture will ensure that the appropriate adapter is found, regardless of whether the person is a vanilla IPerson, a sub-class with a more specific sub-interface, or an instance with a marker interface applied.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La Arquitectura de componentes se asegurará de que el adaptador adecuado se encuentre, sin importar si la persona es un IPerson vanilla, una sub-clase con una sub-interfaz más específica, o una instancia con una interfaz marcador aplicada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-adapters, named adapters and views</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Multi-adaptadores, adaptadores llamados y vistas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, we used an adapter with a single context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el ejemplo anterior, se utilizó un adaptador con un solo contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is the most common form of adapter, but sometimes there is more than one object that forms the context of an adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esa es la forma más común de adaptador, pero a veces hay más de un objeto que forma el contexto de un adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a rule of thumb, if you find yourself passing a particular parameter into every method of an adapter, it should probably be a multi-adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como regla general, si usted se encuentra pasando un parámetro en particular en todos los métodos de un adaptador, probablemente debería ser un multi-adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common example of a multi-adapter that you will come across is that of a &lt;e0&gt;view&lt;/e0&gt;, which incidentally is also how Zope 3 solves the &quot;where do I put my view logic&quot; code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El ejemplo más común de un multi-adaptador que se encontrará es aquel de una &lt;e0&gt;vista&lt;/e0&gt;, que por cierto también es la forma en que Zope 3 resuelve el código de &quot;¿dónde pongo mi lógica de vista&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will cover views in detail later, but for now think of them as a python class that is automatically instantiated and bound to a page template when it's rendered.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estudiaremos las vistas en detalle más adelante, pero por ahora piense en ellas como una clase de python que se instancia automáticamente y se une a una plantilla de página cuando se renderiza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the template, the variable &lt;e1&gt;view&lt;/e1&gt; refers to the view instance and can be used in TAL expressions to gain things to render or loop on.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la plantilla, la variable &lt;e1&gt;view (vista)&lt;/e1&gt; se refiere a la instancia de vista y puede usarse en expresiones TAL para ganar cosas para renderizar o hacer bucles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When dealing with a view, there are two things that make up its context - the context content object (conventionally called &lt;e0&gt;context&lt;/e0&gt;) and the current request (conventionally called &lt;e1&gt;request&lt;/e1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando se lidia con una vista, hay dos cosas que conforman su contexto; el objeto de contexto de contenido (llamadas convencionalmente &lt;e0&gt;context&lt;/e0&gt; ) y la solicitud actual (llamadas convencionalmente &lt;e1&gt;request&lt;/e1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, a view class is a multi-adapter from the tuple &lt;e2&gt;(context, request)&lt;/e2&gt; to IBrowserView.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto una clase de vista es un multi-adaptador desde la tupla &lt;e2&gt;(context, request)&lt;/e2&gt; a IBrowserView.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it happens, there are ZCML directives called &lt;e3&gt;browser:page &lt;/e3&gt;and &lt;e4&gt;browser:view&lt;/e4&gt; that make it easier to register a view and bind a page template to it, handle security etc.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como es el caso, existen directivas ZCML llamadas &lt;e3&gt;browser:page &lt;/e3&gt;and &lt;e4&gt;browser:view&lt;/e4&gt; que hacen más fácil el registro de una vista y amarrar una plantilla de página a ella, control de seguridad, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, abstractly a view looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, de manera abstracta una vista luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice how this adapts both IPerson and IHttpRequest, and thus takes two parameters in its &lt;e0&gt;__init__() &lt;/e0&gt;method.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Puede apreciar como esto adapta a ambos IPerson y IHttpRequest y, por lo que toma dos parámetros en su método &lt;e0&gt;__init__() &lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you will learn later, views typically inherit the &lt;e1&gt;BrowserView&lt;/e1&gt; base class for convenience, but the principle is the same.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como aprenderá después, las vistas generalmente heredan la clase base &lt;e1&gt;BrowserView&lt;/e1&gt; por conveniencia, pero el principio es el mismo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To obtain a multi-adapter, you can't use the &quot;calling an interface&quot; syntax that you use for a regular adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para obtener un multi-adaptador, no puede utilizar la sintaxis de &quot;llamada a una interfaz&quot; que se utiliza para un adaptador regular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, you must use the &lt;e0&gt;getMultiAdapter() &lt;/e0&gt;method:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su lugar debe utilizar el método &lt;e0&gt;getMultiAdapter() &lt;/e0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could use &lt;e0&gt;queryMultiAdapter() &lt;/e0&gt;instead if you wanted it to return None instead of raise a ComponentLookupError when it fails to find the adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En vez de esto podría usar &lt;e0&gt;queryMultiAdapter() &lt;/e0&gt;, si quería devolver un None en vez de levantar un ComponentLookupError cuando falle al encontrar el adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The above code has a problem, however (apart from being an incomplete example) - what if you have more than one view on the same object, say for two different tabs?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo el código anterior tiene un problema (aparte de ser un ejemplo incompleto). ¿Que pasa si tiene más de una vista sobre el mismo objeto, por ejemplo para dos diferentes pestañas?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To resolve this ambiguity, views are actually &lt;e0&gt;named multi-adapters&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para resolver esta ambigüedad, las vistas son realmente &lt;e0&gt;múlti-adaptadores nombrados&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The names correspond to the names used as part a URL, and are registered using the &lt;e1&gt;name&lt;/e1&gt; attribute in ZCML.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los nombres corresponden a los nombres que se utilizan como parte de una URL, y están registrados mediante el atributo &lt;e1&gt;name&lt;/e1&gt; en ZCML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is used in &lt;e2&gt;browser:page&lt;/e2&gt; and &lt;e3&gt;browser:view&lt;/e3&gt; directives, but can also be used in the standard &lt;e4&gt;adapter&lt;/e4&gt; directive:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se utiliza en las directivas &lt;e2&gt;browser:page&lt;/e2&gt; y &lt;e3&gt;browser:view&lt;/e3&gt;, pero también se puede utilizar en la directiva estándar &lt;e4&gt;adapter&lt;/e4&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get this particular view, we can write:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para conseguir esta vista en particular, podemos escribir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>conventionally, we leave off the required interface when we used named adapters, although you can supply it if necessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Convencionalmente, dejamos fuera la interfaz necesaria cuando se utilizan los adaptadores nombrados, aunque se puede proporcionar si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-adapters are useful for other things as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los multi-adaptadores son útiles para otras cosas también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have an adapter and find that every method takes at a common parameter, it's a good candidate for a multi-adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted tiene un adaptador y encuentra que cada método tiene un parámetro en común, entonces es un buen candidato para un multi-adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also observe that in the case above, we could register a different adapter for a different type of request as well as for a different type of object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También observe que en el caso anterior, se podría registrar un adaptador diferente para un tipo diferente de solicitud, así como para un tipo diferente de objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, the Component Arhictecture will find the most specific one looking at both interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más, la Arquitectura de componentes encontrará el más específico revisando las dos interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Named adapters do not have to be multi-adapters, of course.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Adaptadores nombrados no tienen que ser multi-adaptadores, por supuesto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are typically used in cases where something (e.g. the user) is making a selection from a set of possible choices (such as choosing the particular view among many possible views).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se suelen utilizar en casos donde algo (por ejemplo, el usuario) está haciendo una selección de un conjunto de opciones posibles (por ejemplo, elegir una vista en particular entre un número posible de vistas).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Utilities</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilidades</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the CMF, we have &lt;e0&gt;tools&lt;/e0&gt;, which are essentially singletons.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el CMF, tenemos &lt;e0&gt;herramientas&lt;/e0&gt;, que son esencialmente únicas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They contain various methods and attributes and may be found using the ubiquitous &lt;e1&gt;getToolByName()&lt;/e1&gt; function.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas contienen varios métodos y atributos y se pueden encontrar con la función omnipresente &lt;e1&gt;getToolByName()&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main problem with tools is that they live in content space, as objects in the ZODB, and require a lot of Zope 2 specific things.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El problema principal con herramientas es que viven en el espacio de contenidos, como objetos en la ZODB, y requieren una gran cantidad de cosas Zope 2 específicas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say we had a shoe locating service (very useful when you can't find your shoes):</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Digamos que tenemos un servicio de localización de zapatos (muy útil cuando no puede encontrar sus zapatos):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A service for finding your shoes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un servicio para encontrar sus zapatos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Find all shoes for the given owner.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Buscar todos los zapatos para el propietario dado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Component Architecture contains a very flexible &lt;e0&gt;utility registry&lt;/e0&gt;, which lets you look up things by interface and possibly by name.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La Arquitectura de componentes contiene un bastante flexible &lt;e0&gt;registro de utilidad&lt;/e0&gt;, que le permite buscar cosas por la interfaz y posiblemente por nombre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike adapters, utilities do not have context, and they are instantiated only once, when Zope starts up.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A diferencia de los adaptadores, las utilidades no tienen contexto, y se instancian sólo una vez cuando Zope arranca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Global utilities are not persistent (but local utilities are - see below).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las utilidades globales no son persistentes (pero las utilidades locales sí; vea más abajo).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with adapters, we register utilities with ZCML:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al igual que con los adaptadores, registramos las utilidades con ZCML:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you could skip the &lt;e0&gt;implements()&lt;/e0&gt; call on the factory and set it in ZCML.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Alternativamente usted puede omitir la llamada &lt;e0&gt;implements()&lt;/e0&gt; en factory y configurarla en ZCML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may also be necessary in order to disambiguate if you have more than one interface being provided by the utility component:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto también puede ser necesario con el fin de eliminar la ambigüedad si tiene más de una interfaz que está siendo proporcionada por el componente de utilidad:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you can find the utility using &lt;e0&gt;getUtility()&lt;/e0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora puede encontrar la utilidad utilizando &lt;e0&gt;getUtility()&lt;/e0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The utility registry turns out to be a very useful generic registry, because like the adapter registry, it can manage &lt;e0&gt;named utilities&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El registro de utilidad resulta ser un registro genérico muy útil, porque al igual que el registro del adaptador, puede administrar &lt;e0&gt;utilidades nombradas&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say that you had a few different shoes you wanted to keep around:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a decir que usted tenía algunos zapatos diferentes que quería mantener cerca:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can now find these utilities again using the &lt;e0&gt;name&lt;/e0&gt; argument to &lt;e1&gt;getUtility()&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Podemos encontrar estas utilidades nuevamente utilizando el argumento &lt;e0&gt;name&lt;/e0&gt; a &lt;e1&gt;getUtility()&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, we are still using the transient global utility registry, so these will diseappear when Zope is restarted.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, seguimos utilizando el registro transitorio de utilidad global, por lo que estos desaparecerán cuando Zope se reinicie.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could use local components instead (see below), or we could register them using ZCML.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Podríamos utilizar componentes locales en su lugar (ver más abajo), o pudiéramos registrarlos utilizando ZCML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If we had defined the shoes &lt;e0&gt;left&lt;/e0&gt; and &lt;e1&gt;right&lt;/e1&gt; in a module &lt;e2&gt;shoes.py&lt;/e2&gt;, we could write:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si hemos definido los zapatos &lt;e0&gt;left (izquierdo)&lt;/e0&gt; y &lt;e1&gt;right (derecho)&lt;/e1&gt; en un modulo &lt;e2&gt;shoes.py&lt;/e2&gt;, podríamos escribir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An alternative would have been to define two classes &lt;e0&gt;LeftShoe&lt;/e0&gt; and &lt;e1&gt;RightShoe&lt;/e1&gt; and use the &lt;e2&gt;factory&lt;/e2&gt; attribute of the directive instead of &lt;e3&gt;component&lt;/e3&gt; (which refers to an instance, rather than a class/factory).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una alternativa habría sido definir dos clases &lt;e0&gt;LeftShoe&lt;/e0&gt; y &lt;e1&gt;RightShoe&lt;/e1&gt; y utilizar el atributo &lt;e2&gt;factory&lt;/e2&gt; de la directiva en vez de &lt;e3&gt;component&lt;/e3&gt; (que se refiere a una instancia, en vez de una clase/factory).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local components</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Componentes locales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The examples above all use global, transient registries that are reloaded each time Zope is restarted.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todos los ejemplos de arriba usan registros globales, transitorios, que se recargan cada vez que se reinicia Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is certainly what you want for code and functionality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Eso es ciertamente lo que usted desea para el código y funcionalidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, you would like for utilities to be a bit more like their CMF cousins and also manage persistent state.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A veces le gustaría que las utilidades fueran un poco más como sus primos CMF y que también administrasen estado persistente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To achieve that you need to use local components, which are stored in the ZODB.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para lograr eso usted necesita utilizar componentes locales, que se almacenan en la ZODB.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to Zope 3.3, which is included in Zope 2.10, local components were a bit of a black art.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de Zope 3.3, que está incluido en Zope 2.10, los componentes locales eran un poco arte negro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then came the &lt;e0&gt;jim-adapter&lt;/e0&gt; branch and everything was greatly simplified.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego vino la rama &lt;e0&gt;jim-adapter&lt;/e0&gt; y todo fue bastante simplificado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The theory is still the same, the API is just much more sane.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La teoría sigue siendo la misma, la API es mucho más sana.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each time Zope executes a request (or if you implicitly invoke &lt;e1&gt;zope.component.setSite()&lt;/e1&gt;, for example in a test), it discovers which is the nearest &lt;e2&gt;site&lt;/e2&gt; to the context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada vez que Zope ejecuta una solicitud (o si usted invoca implícitamente &lt;e1&gt;zope.component.setSite()&lt;/e1&gt;, por ejemplo en una prueba), esta descubre cual es el &lt;e2&gt;site (sitio)&lt;/e2&gt; más cercano al contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone, the site is normally the root of the Plone instance, but in theory any folder could be turned into a site.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Plone, el sitio es normalmente la root de la instancia de Plone, pero en teoría cualquier carpeta podría convertirse en un sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;site&lt;/e0&gt; has a local component registry, where local utilities and adapters may be defined.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un &lt;e0&gt;sitio&lt;/e0&gt; tiene un registro de componente local, donde las utilidades locales y los adaptadores se pueden definir.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that a particular utility or adapter can be specific to a particular Plone site, not affecting other Plone instances in the same Zope instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto significa que una utilidad en particular o adaptador puede ser especificado a un determinado sitio Plone, sin afectar otras instancias de Plone en la misma instancia de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You cannot use ZCML to register local components, since ZCML is inherently global (at least for now) - it does not know anything about your particular sites.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No puede utilizar ZCML para registrar componentes locales, ya que ZCML es intrínsecamente global (al menos por ahora), este no sabe nada acerca de sus sitios particulares.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can register them with Python code, e.g. in an Install.py or a GenericSetup profile, using calls like &lt;e1&gt;provideUtility()&lt;/e1&gt; (and its equivalent, &lt;e2&gt;provideAdapter()&lt;/e2&gt;) called on a local site manager instance:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, usted puede registrarlos con el código de Python, por ejemplo, en un Install.py o en un perfil GenericSetup, utilizando llamadas como &lt;e1&gt;provideUtility()&lt;/e1&gt; (y su equivalente, &lt;e2&gt;provideAdapter()&lt;/e2&gt; ) Llamado en una instancia local de administrador de sitio:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, Plone 2.5 does not run on Zope 2.10.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por desgracia, Plone 2.5 no se ejecuta en Zope 2.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We won't cover local components here, because, well, I never learnt how to do it the Zope 2.9 way, and what I saw of it scared me.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>No vamos a cubrir componentes locales aquí, porque, bueno, nunca he aprendido a hacerlo de la forma Zope 2.9, y lo que vi de ella me asustó.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm told it's not that bad, and there is documentation in &lt;e0&gt;Five&lt;/e0&gt; and in Zope 3 itself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Me han dicho que no es tan malo, y que hay documentación en &lt;e0&gt;Five&lt;/e0&gt; y en el mismo Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local components will become more important in Plone 3.0, where Zope 2.10 or later will be required and more things that use local components will be part of the core.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Componentes locales se volverán más importantes en Plone 3.0, donde Zope 2.10 o posterior se requerirá y más cosas que usan de componentes locales formarán parte del core.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org does not use local components yet, and we will see how the extension mechanism would benefit from local components so that you could have one b-org extension installed in one Plone instance and another extension installed in another Plone instance, without the two interfering.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org no utiliza componentes locales todavía, y vamos a ver cómo el mecanismo de extensión se beneficiaría de los componentes locales de manera que usted podría tener una extensión b-org instalada en una instancia Plone y otra extensión instalada en otra instancia Plone, sin que las dos interfieran.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Luckily, to code that &lt;e0&gt;uses&lt;/e0&gt; adapters and utilities, it is completely transparent whether they are global or local.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por suerte el código que &lt;e0&gt;usa&lt;/e0&gt; adaptadores y utilidades, es completamente transparente ya sean globales o locales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you can master the concepts of interfaces, adapters and utilities you will go far in a Zope 3 world.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted puede dominar los conceptos de interfaces, adaptadores y utilidades llegará entonces muy lejos en el mundo de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They will become much more natural as you use them a few times, and you'll probably wonder how you ever managed without them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos conceptos serán más naturales a medida que los vaya utilizando, y probablemente se pregunte cómo ha podido vivir sin ellos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, that point will come before the end of this tutorial, which is largely focused on showing how the principle of separation of concerns can be imposed upon your Archetypes and Plone code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esperemos que ese momento llegue antes del final de este tutorial, que se centra fundamentalmente en mostrar cómo el principio de separación de responsabilidades se puede imponer sobre sus Arquetipos y código Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overview of b-org</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Resumen de b-org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The big picture</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El panorama general</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To the user, b-org presents itself as three content types:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para el usuario, b-org presenta tres tipos de contenido:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Department</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Department (Departmento)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A container for employees, and a source of groups.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un contenedor para los empleados, y una fuente de grupos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, each department becomes a group, and the employees within that department become group members.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es decir, cada departamento se convierte en un grupo, y los empleados dentro de ese departamento se convierten en miembros del grupo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Employee</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Employee (Empleado)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information about employees, and a source of users.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Información sobre los empleados, y una fuente de usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, each active employee object becomes a user who can log in and interact with the portal.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es decir, cada objeto de empleado activo se convierte en un usuario que pueda iniciar sesión e interactuar con el portal.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Project (Proyecto)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project workspace - a folder where employees can collaborate on content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un espacio de trabajo para proyectos; una carpeta donde los empleados pueden colaborar en el contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content inside the project folder has a custom workflow, and employees who are related to the project (by reference) have elevated permissions over this content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contenido dentro de la carpeta de proyecto tiene un flujo de trabajo personalizado, y los empleados que están relacionados con el proyecto (por referencia) tienen permisos elevados sobre este contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Out of the box, these are not terribly interesting, because they have only the minimum of metadata required to function.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De paquete estos no son muy interesantes, porque sólo tienen un mínimo de metadatos necesarios para su funcionamiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task of providing actual schema fields, view templates, content type names (if Department, Employee and Project are not appropriate) and other application-specific facets is left up to simpler third-party products that plug into b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La tarea de proporcionar campos de esquemas, plantillas de vista, nombres de tipos de contenido (en caso de que departamento, empleados y proyecto no sean apropiados) y otros facetas aplicación-específico se dejan a productos de terceros más simples que se conecten a b-Org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One example of such a product is included, which models a hypothetical charity use case and is called &lt;i0&gt;charity&lt;/i0&gt;.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un ejemplo de este tipo de producto es incluido, el cual modela un caso de caridad de uso hipotético y se llama &lt;i0&gt;charity&lt;/i0&gt;.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This seemingly innocuous orchestration of functionality is achieved by a variety of means:&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta orquestación aparentemente inocua de funcionalidad se logra mediante una variedad de medios: &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used to build the actual content types and their schemata.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza para generar los tipos de contenido y sus schemata.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Zope 3 Component Architecture</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La Arquitectura de componentes de Zope 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is used to make all this exensibility possible - you will see lots of examples of interfaces, adapters and utilities.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza para hacer todo esta &quot;extensibilidad&quot; posible; podrá ver un montón de ejemplos de interfaces, adaptadores y utilidades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The content types are registered with &lt;i0&gt;membrane&lt;/i0&gt; to be able to act as groups and users</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los tipos de contenidos están registrados con &lt;i0&gt;membrane&lt;/i0&gt; para poder actuar como grupos y usuarios</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PAS and PlonePAS</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>PAS y PlonePAS</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Pluggable Authentication Service is used by membrane to actually provide user sources.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El servicio de autenticación conectable (Pluggable Authentication Service) es utilizado por membrane para proporcionar realmente las fuentes de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A custom PAS plug-in is also used to manage local roles for members and managers within projects and departments.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un plug-in PAS personalizado también es usado para administrar roles locales para miembros y administradores dentro de proyectos y departamentos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next-generation set-up and installation framework is used to install and configure b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La próxima generación de configuración (set-up) y framework de instalación es utilizado para instalar y configurar b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;charity&lt;/i0&gt; demonstrates how GenericSetup XML profiles can be used directly, without depending on the actual GenericSetup import mechanism.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;i0&gt;charity&lt;/i0&gt; demuestra cómo perfiles XML de GenericSetup se pueden utilizar directamente, sin depender del mecanismo de GenericSetup real de importación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 events</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Eventos Zope 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3's event dispatch mechanism is used to ensure employee users actually own their own Employee objects, among other things.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mecanismo de envío para eventos de Zope 3 se utiliza para asegurar que los usuarios empleados sean realmente dueños de sus propios objetos de empleados, entre otras cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 views</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vistas Zope 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i0&gt;charity&lt;/i0&gt; demo uses views for its display templates.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El demo &lt;i0&gt;charity&lt;/i0&gt; usa vistas para mostrar sus plantillas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Anotaciones</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Employees' passwords are hashed and stored in an annotation</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contraseñas de empleados son ordenadas y almacenadas en una anotación</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Placeful workflow</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Flujo de trabajo placeful (Nota del traductor: &lt;i0&gt;Placeful&lt;/i0&gt; no tiene traducción consagrada al español, pero significa que sus funciones y comportamiento dependen del sitio donde se encuentre el elemento, en este caso el flujo de trabajo)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To let content inside projects have a different workflow to that of the rest of the site, each project uses a &lt;i0&gt;CMFPlacefulWorkflow&lt;/i0&gt; policy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para permitir que contenidos dentro de proyectos tengan distintos flujos de trabajo a aquellos del resto del sitio, cada proyecto utiliza un política &lt;i0&gt;CMFPlacefulWorkflow&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the following pages, you will learn about each of these components and how it fits together.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En las páginas siguientes, usted aprenderá acerca de cada uno de estos componentes y cómo encajan juntos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meanwhile, you can follow along the code by looking in the &lt;a0&gt;subversion repository&lt;/a0&gt;, or getting b-org from its &lt;a1&gt;product page&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mientras tanto, puede seguir a lo largo del código buscando en el &lt;a0&gt;repositorio Subversion&lt;/a0&gt;, o conseguir b-org de su &lt;a1&gt;página de producto&lt;/a1&gt; respectiva.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To Archetype or not to Archetype</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipo o no Arquetipo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes is still the most complete framework for building content types quickly.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Arquetipos sigue siendo el marco más completo para la construcción rápida de tipos de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the advent of Zope 3, there is an alternative in Zope 3 schemas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con la llegada de Zope 3, hay una alternativa en esquemas de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's why b-org doesn't use them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>He aquí por qué b-org no las utiliza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a growing consensus that Archetypes has grown a little too organically.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Existe un consenso creciente de que Arquetipos ha crecido un poco de manera orgánica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the one hand, Archetypes has given us a lot of flexibility, and made many of us more productive than we would ever have thought possible (for those who remember the heady days of plain Zope 2, and then plain CMF development).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por un lado, Arquetipos nos ha dado una gran flexibilidad, e hizo a muchos de nosotros más productivos de lo que hubiésemos creído posible (para aquellos que recuerdan los días encantadores de simple Zope 2, y luego simple desarrollo CMF).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand, Archetypes has become fairly monolithic.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por otro lado, Arquetipos se ha convertido bastante monolítico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reference engine, for example, is woven tightly into the field type machinery, and the way that views are composed from widgets makes these almost impossible to re-use outside of Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El motor de referencia, por ejemplo, se tejen firmemente en las maquinarias de tipo de campo, y la forma en que las vistas se componen de widgets las hace casi imposible de reutilizar fuera de arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In practical terms, the biggest headache that arises from Archetypes' evolution is the very same problem we identified when introducing Zope 3 concepts - it's hard to re-use Archetypes-based components without sub-classing and repeating a large portion of a type's configuration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En términos prácticos, el mayor dolor de cabeza que surge de la evolución de Arquetipos, es el mismo problema que hemos identificado en la introducción de los conceptos de Zope 3. Es difícil reutilizar componentes base-Arquetipos sin hacerlos sub-clases y repetir grandes cantidades de configuración de tipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take &lt;a0&gt;the Poi issue tracker&lt;/a0&gt;, for example - I frequently get requests from people who want to add a few use-case specific fields to each issue, or add some new functionality such as having private issues or issues submitted on behalf of someone else.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo tome el &lt;a0&gt;Poi issue tracker (sistema de seguimiento de incidentes)&lt;/a0&gt;: frecuentemente obtengo solicitudes de personas que quieren agregar algunos campos caso-uso específicos para cada issue (incidente), o agregar nuevas funcionalidades tales como tener asuntos privados o asuntos enviados en nombre de alguien más.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The problem is that I don't want to put all this functionality in Poi itself, because this would increase the complexity of the product and thus the maintenance burden and probably impact the intuitiveness of the UI, when in reality not everyone would benefit from such new features.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El problema es que no quiero poner toda esta funcionalidad en Poi como tal, porque esto aumentaría la complejidad del producto y por lo tanto la carga de mantenimiento y, probablemente, el impacto de la intuitividad de la interfaz de usuario, cuando en realidad no todo el mundo se beneficiaría de estas nuevas características.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ideally, someone would be able to plug in their own schema fields and add some logic in well-defined places without having to re-invent all of Poi.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo ideal sería que alguien fuera capaz de conectar sus campos propios esquemas y añadir un poco de lógica en lugares bien definidos sin tener que volver a inventar todo lo de Poi.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this is difficult, because, for example, the &quot;add issue&quot; button assumes you are adding a &lt;i0&gt;PoiIssue&lt;/i0&gt; object, which has a schema defined wholly in &lt;i1&gt;Products/Poi/content/PoiIssue.py&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, esto es difícil, porque por ejemplo, el botón &quot;add issue&quot; supone que usted está agregando un objeto &lt;i0&gt;PoiIssue&lt;/i0&gt;, que tiene un esquema definido en su totalidad en &lt;i1&gt;Products/Poi/content/PoiIssue.py&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are custom form controller scripts to handle saving of issues, and a lot of methods are found in the various content classes to do things like send mail notifications or perform issue searches for various lists.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay scripts controladores de formularios personalizados para manejar los guardados de incidentes, y gran cantidad de métodos se encuentran en varias clases de contenido para hacer cosas como enviar notificaciones por correo electrónico o realizar búsquedas de incidentes para varias listas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, changing the logic of who gets an email notification or how a particular list of open issues is calculated may involve subclassing one or all of Poi's content types, re-registering view templates and other content type information, and possibly customise a number of templates and scripts to reference the new subclassed types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más, el cambio de lógica del que recibe una notificación por correo electrónico o como una lista en particular de incidentes pendientes es calculada, puede incluir subclases o todos los tipos de contenido Poi, volver a registrar plantillas de vista y otra información de tipo de contenido, y, posiblemente, personalizar una serie de plantillas y scripts para hacer referencia a los nuevos tipos de subclases.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, when Poi itself changes, keeping these customisations up-to-date becomes difficult.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, cuando Poi como tal cambia, mantener estas personalizaciones actualizadas se hace difícil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zope 3 has, in keeping with its philosophy, approached these problems by promising separation of concerns.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Zope 3 se ha enfocado, de acuerdo con su filosofía, a estos problemas prometiendo separación de responsabilidades.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Zope 3, you would typically define an interface that specifies the &lt;i0&gt;schema&lt;/i0&gt; of a content type, and then create a class that is only concerned with holding and persisting the data for this schema:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Zope 3, lo más habitual es definir una interfaz que especifica el &lt;i0&gt;esquema&lt;/i0&gt; de un tipo de contenido, y luego crear una clase que sólo se preocupe por mantener y preservar los datos para este esquema:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actual functionality for sending notifications etc would be in various adapters (e.g to &lt;i0&gt;INotifying&lt;/i0&gt;), the view logic in views.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La funcionalidad real para el envío de notificaciones, etc., estaría en varios adaptadores (por ejemplo, &lt;i0&gt;INotifying&lt;/i0&gt;), la lógica de vista en vistas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Forms can be created from schema interfaces like &lt;i1&gt;IIssue &lt;/i1&gt;above, using &lt;i2&gt;zope.formlib&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los formularios pueden ser creados desde interfaces de esquemas como &lt;i1&gt;IIssue &lt;/i1&gt;above, using &lt;i2&gt;zope.formlib&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can handle proper add forms (so the object is not created until the form has been filled in, which is another headache with CMF content types and therefore also Archetypes), validation, edit forms etc.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede manejar formularios de adición adecuados (por lo que el objeto no se crea hasta que el formulario ha sido llenado, que es otro dolor de cabeza con los tipos de contenido CMF y por lo tanto también Arquetipos), validación, formularios de edición, etc.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each form, adapter and menu entry (for the &quot;add&quot; menu, say) is registered separately, meaning that they can also be overridden and customised separately.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada formulario, adaptador y entrada de menú (digamos el menú de agregar) es registrado por separado, lo que significa que pueden ser anulados o personalizados por separado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rocky Burt has written an excellent tutorial on &lt;a3&gt;how to use formlib in a Plone context &lt;/a3&gt;that may be enlightening.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Rocky Burt escribió in excelente tutorial sobre &lt;a3&gt;cómo usar formlib en un contexto Plone&lt;/a3&gt; que puede enriquecedor.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are voices that say we should dump Archetypes entirely in favour of Zope 3-style content objects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay voces que dicen que deberíamos botar Arquetipos totalmente a favor de los objetos de contenido estilo Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other voices (including my own) say that this may be a bit premature.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otras voces (incluyendo la mía) dicen que esto podría ser un poco prematuro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Certainly, Zope 3 schemas and content objects are not yet fully integrated into CMF and Plone, so you end up depending on some CMF base classes at the very least.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ciertamente, los esquemas Zope 3  y objetos de contenido aún no están plenamente integrados en CMF y Plone, por lo que termina dependiendo de algunas clases base CMF por lo menos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Moreover, the number and richness of widgets available for Zope 3 forms does not yet match that of Archetypes.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por otra parte, el número y riqueza de widgets disponibles para formularios Zope 3 aún no coincide con el de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fundamentally, Archetypes has been around for a long time and has grown to meet a wide variety of use cases, whereas in the context of Plone at least, Zope 3 schemas are a new kid on the block.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Fundamentalmente, Arquetipos ha existido por mucho tiempo y ha crecido para satisfacer una amplia variedad de casos de uso, mientras que en el contexto de Plone, al menos, los esquemas Zope 3 son el nuevo chico de la cuadra.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The point is - Archetypes is not going to go away, not for a long time anyway, and are still the right choice for many types of applications.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El punto es: Arquetipos no va a desaparecer, no por mucho tiempo, y siguen siendo la mejor opción para muchos tipos de aplicaciones </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Almost all of Plone's add-on products use Archetypes, and it is well-understood by our developer community.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Casi todos los productos complementarios de Plone utilizan Arquetipos, y es bien conocido por nuestra comunidad de desarrolladores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The more likely scenario is that Archetypes will evolve in the same way that Zope 2 is evolving, by seeing its internals refactored piecemeal and pragmatically to take advantage of Zope 3 equivalents and concepts, until theoretically an Archetypes schema and content object is just a different spelling for what Zope 3 is doing, and Zope 3's content type story offers the same richness as Archetypes does (and more).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El escenario más probable es que Arquetipos evolucione de la misma manera que Zope 2 está evolucionando al ver su funcionamiento interno refactorizado poco a poco, y de manera pragmática para tomar ventaja de equivalentes Zope 3 y conceptos, hasta que en teoría un esquema de Arquetipos y objeto de contenido es sólo un deletreo distinto de lo que Zope 3 está haciendo, y tipos de contenido de Zope 3 ofrecen la misma riqueza que Arquetipos ofrece (y más).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the meantime, Archetypes is the right choice for b-org (and for other membrane-based systems).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mientras tanto, Arquetipos es la mejor opción para b-org (y para otros sistemas base-membrana).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What we will try to do, however, is to alleviate the aforementioned problems by making use of Zope 3 design techniques, in order to make b-org extensible and flexible.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lo que vamos a tratar de hacer, sin embargo, es aliviar los problemas antes mencionados, haciendo uso de técnicas de diseño de Zope 3, con el fin de hacer b-org extensible y flexible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The extension story</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La historia de extensión</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the main drivers behind the componentisation of b-org is that it should be easy to extend and customise for third party developers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Uno de los principales impulsores detrás del proceso de componentes de b-org es que debe ser fácil extender y personalizar para los desarrolladores de terceros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll take a look at how such customisations may look, before considering how we made it possible.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a echar un vistazo a cómo las personalizaciones pueden verse, antes de considerar como lo hicimos posible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org ships with an example called &lt;i0&gt;charity&lt;/i0&gt;, found in the &lt;i1&gt;examples/charity&lt;/i1&gt; directory, which demonstrates one use-case specific implementation of b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org viene con un ejemplo llamado &lt;i0&gt;charity&lt;/i0&gt;, encontrado en el directorio &lt;i1&gt;examples/charity&lt;/i1&gt;, el cual demuestra una implementación específica de caso-uso de b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is quite simple, consisting of the following top-level files and directories:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es muy simple, consiste de los siguiente archivos de alto-nivel y directorios:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Registers the schema extension adapters (see below) and references the browser package</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Registra los adaptadores de esquema de extensión (vea abajo) y hace referencia al paquete browser.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains an &lt;i0&gt;Install.py&lt;/i0&gt; script that configures the Factory Type Information for the Department, Employee and Project content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene un script &lt;i0&gt;Install.py&lt;/i0&gt; que configura la información tipo Factory para los tipos de contenido de Departamento, Empleado y Proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does so by using GenericSetup XML files, but invokes the import handlers explicitly rather than through a GenericSetup profile.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto lo hace usando archivos XML de GenericSetup XML, pero invoca los controladores de importación de forma explicita, en vez de a través del perfil GenericSetup.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains Zope 3 views for the charity department, employee and project content types, and a &lt;i0&gt;configure.zcml&lt;/i0&gt; to register these.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene vistas Zope 3 para el departamento charity, empleado y tipos de contenido de proyecto, y un &lt;i0&gt;configure.zcml&lt;/i0&gt; para registrarlos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More on views in a later section.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Más sobre vistas en sección posterior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains adapters that extend the schemas for Departments, Employees and Projects with use-case specific fields.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene los adaptadores que extienden los esquemas para Departamento, Empleado y Proyecto. con campos caso-uso específicos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use &lt;i0&gt;charity&lt;/i0&gt; you should copy or symlink it from &lt;i1&gt;Products/borg/examples/charity &lt;/i1&gt;to &lt;i2&gt;Products/charity&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para usar &lt;i0&gt;charity&lt;/i0&gt; debería copiar o hacer enlace simbólico desde &lt;i1&gt;Products/borg/examples/charity &lt;/i1&gt;a &lt;i2&gt;Products/charity&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be installed as normal, but you must install b-org first.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se puede instalar como normal, pero debe instalar primero b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;i3&gt;borg/README.txt&lt;/i3&gt; for the full install instructions!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea &lt;i3&gt;borg/README.txt&lt;/i3&gt; para ¡instrucciones completas de instalación!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A key aim is to make it possible to meaningfully extend b-org without needing to subclass all its types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un objetivo clave es hacer que sea posible extender significativamente b-org sin necesidad de hacer subclase todos sus tipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, you &lt;i0&gt;can&lt;/i0&gt; do that, but in most cases it's not necessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, usted &lt;i0&gt;puede&lt;/i0&gt; hacer eso, pero en la mayoría de los casos no es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, the mechanisms and techniques described here will be &quot;global&quot; in nature.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desgraciadamente, los mecanismos y técnicas que se describen aquí serán de naturaleza &quot;global&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, you will not be able to have two different modes of customisation for two different Plone instances in the same Zope instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es decir, que no será capaz de tener dos modos de personalización para dos instancias diferentes de Plone en la misma instancia de Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because prior to Zope 2.10 (which Plone 2.5 does not support - it wasn't out until several months after Plone 2.5 was released), the &quot;local&quot; components story in Zope 3 was not fully developed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es así porque antes de Zope 2.10 (versión que Plone 2.5 no soporta; no salió hasta varios meses después de que Plone 2.5 fue lanzado), la historia de componentes &quot;locales&quot; en Zope 3 no estaba totalmente desarrollada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a specific problem with the way the schema extension mechanism works which makes it inherently global.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También hay un problema específico con la manera en que el mecanismo de extensión de esquema trabaja que lo hace intrínsecamente global.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Plone 3.0 rolls around, it will support local components much better, and Archetypes 1.5, in conjunction with a third-party product called ContentFlavors (or possibly another similar tool), will enable the kind of extension story described here to work on almost any type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando Plone 3.0 trabaja un poco soportará componentes locales mucho mejor, y Arquetipos 1.5, junto con un producto de terceros llamado ContentFlavors (o posiblemente otra herramienta similar), habilitará el tipo de historia de extensión descrito aquí para trabajar en casi cualquier tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At that point, the forerunner you see in b-org now will be obsolete.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En ese momento, el precursor que usted ve en b-org ahora será obsoletos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if you don't need two different b-org customisations for two different Plone sites in the same Zope instance (which I suspect most people can work around - having two separate Zope instances of course isolates you from all of this), you should be fine.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, si usted no necesita dos personalizaciones b-org diferentes para dos sitios Plone diferentes en la misma instancia de Zope (que sospecho que la mayoría de gente puede trabajar; claro tener dos instancias Zope por separado lo aísla de todo esto), debería estar bien.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The schemas extenders</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los extensores de esquemas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These schema extenders are adapters that hook into a specific part of b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos extensores de esquema son adaptadores que se enganchan en una parte específica de b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will describe this in more detail later, but here is how they look from the point of view of the extending product:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a describir esto con más detalle más adelante, pero aquí es cómo se ve desde el punto de vista del producto que se extiende:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Full name of this employee&quot;,&lt;br16&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Nombre completo de este empleado&quot;,&lt;br16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Enter the employee's email address&quot;,&lt;br28&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Introduzca dirección de correo electrónico del empleado &quot;,&lt;br28&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Enter the employee's phone number&quot;,&lt;br38&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Introduzca el número de teléfono del empleado&quot;,&lt;br38&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Enter the employee's mobile phone number&quot;,&lt;br48&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Introduzca el número celular del empleado&quot;,&lt;br48&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Your location - either city and country - or in a company setting, where your office is located.&quot;,&lt;br57&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Su ubicación, ya sea ciudad y país o en un entorno de empresa donde se encuentra su oficina.&quot;,&lt;br57&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Your preferred language.&quot;,&lt;br66&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Su lenguaje por preferencia.&quot;,&lt;br66&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description=u&quot;Enter a short biography of the employee&quot;,&lt;br79&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>description=u&quot;Introduzca una breve biografía del empleado&quot;,&lt;br79&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Extend the schema of an employee to include additional fields.&lt;br86&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Extender el esquema de un empleado para incluir campos adicionales. &lt;br86&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example is &lt;i0&gt;employee.py&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este ejemplo es &lt;i0&gt;employee.py&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other extensions are simpler, and work on the exact same principle.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las otras extensiones son más simples, y trabajan en el mismo principio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When calculating the schema of a content type, the b-org types (by virtue of &lt;i1&gt;Products.borg.content.schema.ExtensibleSchemaSupport&lt;/i1&gt;, a mix-in class that all the b-org types uses, and which the aforementioned changes to Archetypes should make obsolete) will look up an adapter from the content object (which is marked with &lt;i2&gt;IEmployeeContent&lt;/i2&gt;, in this case), to &lt;i3&gt;ISchemaExtender&lt;/i3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al calcular el esquema de un tipo de contenido, los tipos de b-org (en virtud de &lt;i1&gt;Products.borg.content.schema.ExtensibleSchemaSupport&lt;/i1&gt;, una mezcla de clase que todos los tipos b-org utilizan, y que los cambios antes mencionados a Arquetipos lo harían obsoletos) buscarán un adaptador desde del objeto de contenido (que está marcado en este caso con &lt;i2&gt;IEmployeeContent&lt;/i2&gt;), a &lt;i3&gt;ISchemaExtender&lt;/i3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will be given the chance to extend (and modify) the schema of the type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto le dará la oportunidad de extender (y modificar) el esquema del tipo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The returned value is cached (to avoid an expensive re-calculation each time the schema is used).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El valor devuelto se almacena en caché (para evitar un costoso re-calcular cada vez que se utiliza el esquema).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This cache can be invalidated upon an event, which you will see in &lt;i0&gt;charity/Extensions/Install.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta caché puede ser invalidada en un evento, que se verá en &lt;i0&gt;charity/Extensions/Install.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The event is an instance of a class that implements &lt;i0&gt;ISchemaInvalidatedEvent&lt;/i0&gt;, and takes a class as an argument to know which class the schema is being invalidated for.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El evento es una instancia de una clase que implementa &lt;i0&gt;ISchemaInvalidatedEvent&lt;/i0&gt;, y toma una clase como un argumento para saber por cual clase el esquema está siendo invalidado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining new views and type information</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Definir nuevas vistas e información de tipo. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have now managed to add new schema fields to Department, Employee and Project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos conseguido añadir nuevos campos de esquema para Departamento, Empleado y Proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The auto-generated edit form will pick these up for editing, but we probably also want some custom views.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El formulario de edición auto-generado recogerá esto para edición, pero probablemente también quiera algunas vistas personalizadas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We may also want to change other aspects of the Factory Type Information (FTI) which controls how the type is presented within Plone's UI (an FTI is an object in &lt;i0&gt;portal_types&lt;/i0&gt;).&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También puede cambiar otros aspectos de la información de tipo Factory (FTI - Factory Type Information), que controla cómo el tipo se presenta dentro de la interfaz de usuario de Plone (un FTI es un objeto en &lt;i0&gt;portal_types&lt;/i0&gt;). &lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we define some views in the &lt;i3&gt;browser&lt;/i3&gt; package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero definimos algunas vistas en el paquete &lt;i3&gt;browser&lt;/i3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are described in a later section, but lookin at &lt;i4&gt;charity/configure.zcml&lt;/i4&gt;, you will see:&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas están descritas en una sección posterior, pero al observar en &lt;i4&gt;charity/configure.zcml&lt;/i4&gt;, verá:&lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will bring in &lt;i0&gt;charity/browser/configure.zcml&lt;/i0&gt;, which contains several directives like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto traerá &lt;i0&gt;charity/browser/configure.zcml&lt;/i0&gt;, que contiene varias directivas como:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This, along with the class &lt;i0&gt;Products.charity.browser.employee.EmployeeView &lt;/i0&gt;and the template&lt;i1&gt; charity/browser/employee.pt&lt;/i1&gt; will make a view &lt;i2&gt;@@charity_employee_view&lt;/i2&gt; (the @@ is optional, but serves to disambiguate views from content objects, for example) available on any employee (or rather, any object providing &lt;i3&gt;IEmployeeContent&lt;/i3&gt;).&lt;br4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto junto con la clase &lt;i0&gt;Products.charity.browser.employee.EmployeeView &lt;/i0&gt;y la plantilla&lt;i1&gt; charity/browser/employee.pt&lt;/i1&gt; hará una vista &lt;i2&gt;@@charity_employee_view&lt;/i2&gt; (las @@ es opcional,pero sirve para eliminar la ambigüedad de vistas de objetos de contenido, por ejemplo) disponible en cualquier empleado (o quizá, cualquier objeto proporcionando &lt;i3&gt;IEmployeeContent&lt;/i3&gt;).&lt;br4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We then need to tell Plone that this view should be invoked when you view an Employee object or click its 'View' tab.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces necesitamos decirle a Plone que esta vista debería ser invocada al ver un objeto Employee (empleado) o haga clic en su pestaña &quot;Vista&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done by setting the &lt;i6&gt;(Default)&lt;/i6&gt; and &lt;i7&gt;view&lt;/i7&gt; method aliases for the Employee type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace configurando &lt;i6&gt;(Default)&lt;/i6&gt; y alías de método &lt;i7&gt;view&lt;/i7&gt; para el tipo Employee.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a8&gt;this page of the RichDocument tutorial&lt;/a8&gt; for some background.&lt;br9&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea &lt;a8&gt;esta página del tutorial de RichDocumentl&lt;/a8&gt; para alguna formación.&lt;br9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To achieve this, we could modify &lt;i11&gt;portal_types/Employee&lt;/i11&gt; in Python during the &lt;i12&gt;Install.py&lt;/i12&gt; script.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para lograr esto, podríamos modificar &lt;i11&gt;portal_types/Employee&lt;/i11&gt; en Python durante el script &lt;i12&gt;Install.py&lt;/i12&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, to make it easier to define the FTI, we use a GenericSetup XML file instead.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, para que sea más fácil definir la FTI, se utiliza un archivo XML de GenericSetup en su lugar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take a look at &lt;i13&gt;charity/Extensions/setup/types/Employee.py&lt;/i13&gt;, for example:&lt;br14&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Observe &lt;i13&gt;charity/Extensions/setup/types/Employee.py&lt;/i13&gt;, por ejemplo:&lt;br14&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This defines the various aspects of the FTI, and is basically a modified copy of the equivalent file from the b-org extension profile.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto define los distintos aspectos de la FTI, y es básicamente una copia modificada del archivo equivalente del perfil b-org de extensión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll learn more about these in the section on GenericSetup, but for now observe that we invoke this explicitly in Install.py, via some boilerplate utility code:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted aprenderá más acerca de estos en la sección de GenericSetup, pero por ahora observe que se invoca explícitamente en Install.py, a través de un código para repetición de utilidad:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will update the FTIs by examing &lt;i0&gt;Products/charity/Extensions/setup/types&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto actualizará la FTI al examinar &lt;i0&gt;Products/charity/Extensions/setup/types&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each file there is named corresponding to the name of the FTI it modifies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada archivo es el nombre que corresponde al nombre de la FTI que modifica.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding new functionality</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Añadiendo nuevas funcionalidades</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extending the schema and modifying the FTI to support different views is probably enough for a large number of use cases.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ampliar el esquema y modificar la FTI para apoyar diferentes vistas es probablemente suficiente para un gran número de casos de uso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you find yourself thinking &quot;I wish I could add a method to the Employee class to support ...&quot;, take your left hand, hold it out, raise you right hand and slap your left wrist sternly, then read the section on adapters again.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si se encuentra pensando: &quot;me gustaría poder agregar un método a la clase Employee para soportar...&quot;, pues le recomiendo que levante su mano izquierda, y luego levante su mano derecha y dele una palmada a su muñeca izquierda con severidad, y luego lea la sección sobre adaptadores nuevamente.&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, let's say you wanted to send an email to administrators when a particular button in the view was clicked.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, digamos que usted quiere enviar un correo electrónico a los administradores cuando un botón en particular la vista se le hizo clic.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could do that in an adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted podría hacer eso en un adaptador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For examples, in your &lt;i2&gt;interfaces &lt;/i2&gt;module, you could could have:&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo en su modulo de &lt;i2&gt;interfaces &lt;/i2&gt;, podría tener:&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Someone who will nag the admin&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Alguien que regañará (nag) al administrador&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, an adapter from IEmployee in module &lt;i0&gt;nag.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego un adaptador desde IEmployee en módulo &lt;i0&gt;nag.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And finally, in your &lt;i0&gt;configure.zcml&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Y finalmente en su &lt;i0&gt;configure.zcml&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, in the form handler that is about to nag the employee, you would do:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luego, en el controlador de formulario que está a punto de regañar al empleado, podría hacer:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obviously, this is a somewhat contrived example, but hopefully you get the gist.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Obviamente, esto es un ejemplo un tanto artificial, pero esperemos que pueda obtener la esencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifying workflow and other configuration</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Modificar la configuración de flujo de trabajo y otros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The b-org workflows are not special.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los flujos de trabajo b-org no son especiales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your Install.py, you could modify them or change the workflow assignments as you would any other content type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su Install.py, usted podría modificar o cambiar las asignaciones de flujo de trabajo como lo haría con cualquier otro tipo de contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use &lt;i0&gt;CMFPlacefulWorkflow&lt;/i0&gt; to assign different workflows depending on context, if need be.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También puede usar &lt;i0&gt;CMFPlacefulWorkflow&lt;/i0&gt; para asignar distintos flujos de trabajo dependiendo del contexto, si lo necesita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, if you need to modify the behaviour of the Department, Employee and Project types in other ways, for example by modifying settings in &lt;i0&gt;portal_properties&lt;/i0&gt;, you are of course free to do so.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Del mismo modo, si usted necesita modificar el comportamiento de los tipos de Departamento (Department),  Empleado (Employee) y Proyecto (Proyect) de otras maneras, por ejemplo, modificando la configuración de &lt;i0&gt;portal_properties&lt;/i0&gt;, por supuesto es libre de hacerlo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The intended pattern is that your b-org customisation product encapsulates the various settings and extensions that describe your use case.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El patrón intencionado es aquel que el producto de personalización b-org encapsula los diferentes ajustes y extensiones que describen su caso de uso.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing fundamental b-org behaviour</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cambiando comportamiento b-org fundamental</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lastly, as you learn about b-org you will see how it uses adapters to hook into membrane.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último, a medida que aprende acerca de b-org, verá cómo utiliza adaptadores para conectarse a membrane.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to override its behaviour, you can add an &lt;i0&gt;overrides.zcml&lt;/i0&gt; to your product, which is otherwise identical to a &lt;i1&gt;configure.zcml&lt;/i1&gt; in format, but is able to override earlier registrations (such s those in b-org).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted necesita anular su comportamiento, usted puede agregar una &lt;i0&gt;overrides.zcml&lt;/i0&gt; a su producto, lo cual es por el contrario idéntico a un &lt;i1&gt;configure.zcml&lt;/i1&gt; en formato,ero es capaz de anular registros anteriores (como los de b-org).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you could override the adapter from &lt;i2&gt;IEmployeeContent&lt;/i2&gt; to &lt;i3&gt;IUseRelated&lt;/i3&gt; to change the way in which user ids is assigned, or the adapter to &lt;i4&gt;IUserAuthentication&lt;/i4&gt; to change the way in which authentication is performed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, podría anular el adaptador desde &lt;i2&gt;IEmployeeContent&lt;/i2&gt; a &lt;i3&gt;IUseRelated&lt;/i3&gt; para cambiar la manera en que las id de usuarios son asignadas, o el adaptador a &lt;i4&gt;IUserAuthentication&lt;/i4&gt; para cambiar la manera en que la autenticación es realizada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filesystem organisation</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Organización de Sistema de archivos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org attempts to adhere to modern ideal about how code should be laid out on the filesystem.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org se intenta adherir a la idea moderna de cómo el código debería ser expuesto en el sistema de archivos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the Zope 3 world, the &lt;e0&gt;Products&lt;/e0&gt; pseudo-namespace is frowned upon.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el mundo de Zope 3, el pseudo-namespace &lt;e0&gt;Products&lt;/e0&gt; es desaprobado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Zope 2, every extension module lives in the Products/ folder.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Zope 2, cada modulo de extensión está en la carpeta Products/.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This raises some obvious namespace clash concerns, but also separates Zope modules further from plain-Python modules.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto plantea algunas preocupaciones obvias de choque de namespace, pero también separa más los módulos de Zope de los módulos simples de Python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Zope 3, you can install a module anywhere in your &lt;e1&gt;PYTHONPATH&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Zope 3, usted puede instalar un módulo en cualquier parte en su &lt;e1&gt;PYTHONPATH&lt;/e1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in Plone 3.0, there will be a module called &lt;e2&gt;plone.portlets&lt;/e2&gt;, normally installed in &lt;e3&gt;lib/python/plone/portlets&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo en Plone 3.0 habrá un modulo llamado &lt;e2&gt;plone.portlets&lt;/e2&gt;, normalmente instalado en &lt;e3&gt;lib/python/plone/portlets&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For modules that need to act like Zope products (i.e. they need an &lt;e0&gt;initialize()&lt;/e0&gt; method, they install content types, they register a GenericSetup profile or CMF skins or use an &lt;e1&gt;Extensions/Install.py&lt;/e1&gt; method, say), this works in Zope 2.10 and later.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para módulos que deben actuar como productos Zope (es decir, necesitan un método &lt;e0&gt;initialize()&lt;/e0&gt;, necesitan instalar tipos de contenido, registrar un perfil GenericSetup o skins CMF o usar un método &lt;e1&gt;Extensions/Install.py&lt;/e1&gt;, por ejemplo), esto funciona en Zope 2.10 y posteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can also be made to work in earlier version of Zope using a product (ironically) called &lt;e2&gt;pythonproducts&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También se puede hacer para trabajar en una versión anterior de Zope utilizando un producto (irónicamente) llamado &lt;e2&gt; pythonproducts &lt;/e2&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the purposes of borg, we stick with the traditional &lt;e0&gt;Products/&lt;/e0&gt; installation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A los efectos de b-org, nos quedamos con la tradicional instalación de &lt;e0&gt;Products/&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's nice to have imports like &lt;e1&gt;from borg import ...&lt;/e1&gt;, but fundamentally, b-org is very closely tied to Zope (2) and Plone, so the re-use argument goes away, and that nice import syntax is not really worth the extra dependency and configuration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es bueno tener importaciones como &lt;e1&gt;de importación b-org...&lt;/e1&gt;, pero fundamentalmente, b-org está íntimamente ligado a Zope (2) y Plone, por lo que el argumento de reutilización se va, y esa sintaxis agradable de importaciones no vale realmente la extra dependencia y configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One thing you may notice, though, is that the &lt;e0&gt;borg&lt;/e0&gt; product is named in lowercase, in keeping with Zope 3 and Python naming conventions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cosa que usted puede notar, sin embargo, es que el producto &lt;e0&gt;b-org&lt;/e0&gt; es nombrado en minúsculas, de acuerdo con las convenciones Zope 3 y Python para el nombramiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Looking inside it, you will see the following key files and directories:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si revisa su interior, verá los siguientes archivos claves y directorios:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initialises the Zope 2 product machinery, registers content types, the skin layer and the GenericSetup extension profile that is used to install b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Inicia la maquinaria Zope 2 de productos, registra tipos de contenido, la capa de skin y el perfil de extensión GenericSetup que se utiliza para instalar b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Holds various constants</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tiene varias constantes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starts the Zope 3 snowball going.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Inicia la &quot;bola de nieve&quot; de Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This references other packages with their own &lt;e0&gt;configure.zcml &lt;/e0&gt;files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este hace referencia a otros paquetes con sus propios archivos &lt;e0&gt;configure.zcml.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the Archetypes content types for Department, Employee and Project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene los tipos de contenido de Arquetipos para Departamento, Empleado y Proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also contains some utilities, like &lt;e0&gt;EmployeeLocator&lt;/e0&gt;, an adapter to find employees, two utilities used to provide vocabularies &lt;e1&gt;AddableTypesProvider&lt;/e1&gt; and &lt;e2&gt;ValidRolesProvider&lt;/e2&gt;, and the the schema extension mechanism in &lt;e3&gt;schema.py&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También contiene algunas utilidades como &lt;e0&gt;EmployeeLocator&lt;/e0&gt;, un adaptador para encontrar empleados, dos utilidades para proporcionar vocabularios &lt;e1&gt;AddableTypesProvider&lt;/e1&gt; y &lt;e2&gt;ValidRolesProvider&lt;/e2&gt;, y el mecanismo de extensión de esquema &lt;e3&gt;schema.py&lt;/e3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains event subscribers which modify ownership of an Employee object so that the employee user owns it (and can thus edit their own profiles, for example), as well as to set up the local workflow when a Project is created.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene suscriptores de eventos que modifican la propiedad de un objeto empleado para que el usuario empleado lo posea (y por lo tanto pueda editar sus propios perfiles, por ejemplo), así como para establecer el flujo de local de trabajo, cuando se crea un proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains all the interfaces that b-org defines, in various sub-modules like &lt;e0&gt;interfaces/employee.py&lt;/e0&gt; for the Employee-related interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene todas las interfaces que b-org define, en varios sub-módulos como &lt;e0&gt;interfaces/employee.py&lt;/e0&gt; para las interfaces relacionadas a empleados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of these are imported into &lt;e1&gt;interfaces/__init__.py&lt;/e1&gt;, so that you can write &lt;e2&gt;from Products.borg.interfaces import ...&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo esto es importado dentro de &lt;e1&gt;interfaces/__init__.py&lt;/e1&gt;, para que pueda escribir &lt;e2&gt;from Products.borg.interfaces import ...&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains various adapters for plugging into membrane which enable b-orgs user-and-group functionality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene varios adaptadores para conectar a membrane lo que permite funcionalidades de usuarios y grupos b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains a custom PAS plug-in which is used to manage the local roles for Project members</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene un plug-in PAS que se utiliza para administrar las funciones de roles locales para miembros de Proyecto</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains custom add-content permissions, so that the ability to add Department, Employee and Project content objects can be controlled by different permissions.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene permisos personalizados de adición de contenidos, así que la posibilidad de añadir objetos de contenido en Departamento, Empleado y Proyecto pueden ser controlados por diferentes permisos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the GenericSetup extension profile that sets up b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene el perfil de extensión GenericSetup que configura b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is registered in the &lt;e0&gt;borg/&lt;/e0&gt;__init__.py&lt;e1&gt;.&lt;/e1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se registra en &lt;e0&gt;borg/&lt;/e0&gt;__init__.py&lt;e1&gt;.&lt;/e1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines a custom GenericSetup &quot;import step&quot; which configures aspects of b-org that cannot be expressed in the existing GenericSetup XML formats.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define &quot;paso de importación&quot; personalizado de GenericSetup que configura los aspectos de b-org que no se pueden expresar en el actual formato XML de GenericSetup. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the borg skin layer, which is registered in &lt;e0&gt;borg/__init__.py&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene capas skins de borg, registrado en &lt;e0&gt;borg/__init__.py&lt;/e0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This contains only the b-org icons.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este contiene sólo los iconos b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These could potentially have been defined in a &lt;e1&gt;browser&lt;/e1&gt; package using Zope 3 resources, but are included in a traditional skin layer to make them easier to customise using conventional methods.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas podrían haber sido definidas en un paquete &lt;e1&gt;browser&lt;/e1&gt; con recursos Zope 3, pero se incluyen en una capa de skin tradicional para hacerlas más fáciles de personalizar utilizando los métodos convencionales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the section on Zope 3 views for more details.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vea la sección sobre vistas Zope 3 para obtener más detalles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains unit and integration tests.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene pruebas unitarias y de integración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines a ZMI page for adding the PAS plug-in, for completeness' sake.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define una página ZMI para añadir el plug-in PAS, por el bien de completar todo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will notice that there are many directories, and many of these directories contain the same set of files - &lt;e0&gt;employee.py&lt;/e0&gt;, &lt;e1&gt;department.py&lt;/e1&gt; and &lt;e2&gt;project.py&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted se dará cuenta que hay muchos directorios, y muchos de estos directorios contienen el mismo conjunto de archivos &lt;e0&gt; employee.py &lt;/e0&gt;, &lt;e1&gt;department.py&lt;/e1&gt; y &lt;e2&gt;project.py&lt;/e2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a side-effect of the finer-grained components and increased separation of concerns that stem from Zope 3 design concepts.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este es un efecto secundario de los componentes más finos y una mayor separación de responsabilidades que se derivan de conceptos de diseño Zope 3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For products that act less as framework, the degree of separation may be lower, and thus the product may appear smaller.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para productos que actúan menos como framework, el grado de separación puede ser menor, y por lo tanto el producto puede parecer más pequeño.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, as you browse b-org's source code, it should become obvious why things are placed where they are, and how code is grouped together by logical functionality rather than a tight coupling to Archetypes content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, con respecto al código fuente del navegador b-org, debería ser obvio por qué las cosas se colocan donde están, y cómo el código se agrupa por funcionalidades lógicas en lugar de una estrecha conexión entre los tipos de contenido de Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Zope 3, everything is connected to an interface in some way.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Zope 3, todo está conectado a una interfaz de alguna manera.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sure enough, b-org has a slew of them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Efectivamente, b-org tiene un montón de ellas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting the interface design right is often more than half the battle, so pay attention to this part.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Conseguir el diseño correcto de la interfaz es a menudo más de la mitad de la batalla, así que preste atención a esta parte.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you were trying to understand b-org without a comprehensive tutorial to hand, you would do well to look at the &lt;i0&gt;interfaces&lt;/i0&gt; package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si estuviera tratando de entender b-org sin un tutorial completo a la mano, haría bien en observar el paquete &lt;i0&gt;interfaces&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will notice that this is subdivided into various files</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Notará que esto se subdivide en varios archivos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains a description of a department (&lt;i0&gt;IDepartment&lt;/i0&gt;) and a marker interface for the content object that stores the department (&lt;i1&gt;IDepartmentContent&lt;/i1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene una descripción de un departamento (&lt;i0&gt;IDepartment&lt;/i0&gt;) y una interfaz de marcador para el objeto de contenido que almacena el departamento (&lt;i1&gt;IDepartmentContent&lt;/i1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the equivalent interfaces, &lt;i0&gt;IEmployee&lt;/i0&gt; and &lt;i1&gt;IEmployeeContent&lt;/i1&gt;, as well as the definition of a specific event interface, &lt;i2&gt;IEmployeeModified.&lt;/i2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene las interfaces equivalentes, &lt;i0&gt;IEmployee&lt;/i0&gt; y &lt;i1&gt;IEmployeeContent&lt;/i1&gt;, así como la definición de una interfaz de evento específico, &lt;i2&gt;IEmployeeModified.&lt;/i2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again contains &lt;i0&gt;IProject&lt;/i0&gt; and &lt;i1&gt;IProjectContent&lt;/i1&gt;, as well &lt;i2&gt;ILocalWorkflowSelection&lt;/i2&gt;, which is used to denote a utility that defines the placeful workflow policy that projects will use.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nuevamente contiene &lt;i0&gt;IProject&lt;/i0&gt; y &lt;i1&gt;IProjectContent&lt;/i1&gt;, así como &lt;i2&gt;ILocalWorkflowSelection&lt;/i2&gt;, que se utiliza para denotar una utilidad que define la política de flujo de trabajo placeful (Nota del traductor: &lt;i0&gt;Placeful&lt;/i0&gt; no tiene traducción consagrada al español, pero significa que sus funciones y comportamiento dependen del sitio donde se encuentre el elemento, en este caso el flujo de trabajo) que los proyectos utilizarán.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Holds the interface &lt;i0&gt;IWorkspace&lt;/i0&gt;, which is used by the local-role PAS plug-in to extract which users should have which local roles in a project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Mantiene las interfaz &lt;i0&gt;IWorkspace&lt;/i0&gt;, que se usa por el plug-in PAS de rol local para extraer que usuarios deberían tener que roles locales en un objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains interfaces relevant to the custom schema extension mechanism - &lt;i0&gt;ISchemaExtender&lt;/i0&gt;, &lt;i1&gt;IExtensibleSchemaProvider&lt;/i1&gt; and &lt;i2&gt;ISchemaInvalidatedEvent&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Contiene interfaces relevantes sobre el mecanismo de extensión de esquema personalizado; &lt;i0&gt;ISchemaExtender&lt;/i0&gt;, &lt;i1&gt;IExtensibleSchemaProvider&lt;/i1&gt; y &lt;i2&gt;ISchemaInvalidatedEvent&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines interfaces that are used as input to various vocabularies - &lt;i0&gt;IEmployeeLocator&lt;/i0&gt;, &lt;i1&gt;IAddableTypesProvider&lt;/i1&gt; and &lt;i2&gt;IValidRolesProvider&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Define interfaces que se utilizan como entrada a varios vocabularios: &lt;i0&gt;IEmployeeLocator&lt;/i0&gt;, &lt;i1&gt;IAddableTypesProvider&lt;/i1&gt; y &lt;i2&gt;IValidRolesProvider&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to understand what each of these interfaces describes in more detail, look at the files above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con el fin de entender que describe cada una de estas interfaces en más detalle. revise los archivos anteriores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall that interfaces are mainly documentation - these interfaces are accompanied by docstrings and generally self-documenting code.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Recuerde que interfaces son principalmente documentación: estas interfaces están acompañadas por docstrings y en general auto-documentación de código.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The various interfaces intended for public consumption are imported to &lt;i0&gt;interfaces/__init__&lt;/i0&gt;.py, so that client code can write, e.g.:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las diferentes interfaces destinadas al consumo público son importadas a &lt;i0&gt;interfaces/__init__&lt;/i0&gt;.py, y así el código cliente puede escribir, por ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a common idiom.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se un modismo común.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you find yourself with too many interfaces to manage in &lt;i0&gt;interfaces/__init__.py&lt;/i0&gt;, you don't necessarily need to do this, but it's probably a sign that you should be breaking your code into smaller packages!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted se encuentra con muchas interfaces para manejar en &lt;i0&gt;interfaces/__init__.py&lt;/i0&gt;, no necesariamente tiene que hacer esto, pero es probable que sea ¡una señal de que debe romper el código en paquetes más pequeños!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that unless you have a particular need to depend on Zope 2, then you don't need to pollute the &lt;i3&gt;Products&lt;/i3&gt; namespace with such components!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Recuerde que a menos que tenga una necesidad en particular para depender de Zope 2, ¡no es necesario entonces contaminar el namespace &lt;i3&gt;Products&lt;/i3&gt; con tales componentes!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(and even if you do, with &lt;i4&gt;PythonProducts&lt;/i4&gt; or Zope 2.10, you can do without the Products/ namespace too).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>(y si incluso lo hace, con &lt;i4&gt;PythonProducts&lt;/i4&gt; o Zope 2.10, puede hacer sin tener el namespace Products/).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we could have placed the employee functionality in a package &lt;i5&gt;borg.employee&lt;/i5&gt;, found in &lt;i6&gt;lib/python/borg/employee&lt;/i6&gt; as a plain-python library, possibly depending on Zope 3 components (i.e. packages in the &lt;i7&gt;zope.&lt;/i7&gt;* namespace).&lt;br8&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo pudimos haber ubicado la funcionalidad en un paquete &lt;i5&gt;borg.employee&lt;/i5&gt;, encontrado en &lt;i6&gt;lib/python/borg/employee&lt;/i6&gt; como una simple librería Python, posiblemente con dependencia de componentes Zope 3 (esto es. paquetes en el namespace &lt;i7&gt;zope.&lt;/i7&gt;).&lt;br8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conversely, if you have relatively few interfaces, you can simply have an &lt;i10&gt;interfaces.py&lt;/i10&gt; module without a directory.&lt;br11&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por el contrario, si tiene relativamente pocas interfaces, usted puede simplemente tener un módulo &lt;i10&gt;interfaces.py&lt;/i10&gt; sin necesidad de un directorio.&lt;br11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Separating Archetypes from real components</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Separando Arquetipos de componentes reales</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One thing you may notice is that we have split the interface describing the concept of e.g. an employee (&lt;i0&gt;IEmployee&lt;/i0&gt;) from the interface that describes the employee content object in the ZODB (&lt;i1&gt;IEmployeeContent&lt;/i1&gt;).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una cosa que usted puede notar es que hemos dividido la interfaz que describe el concepto de por ejemplo, un empleado (&lt;i0&gt;IEmployee&lt;/i0&gt;) de la interfaz que describe el objeto de contenido empleado en la ZODB (&lt;i1&gt;IEmployeeContent&lt;/i1&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whether this is always the right thing to do is debatable, but the reasoning goes something like this:&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si esto hay que hacerlo siempre o no es discutible, pero el razonamiento es algo así: &lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes objects contain a very large API.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los objetos de Arquetipos contienen una gran API.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archetypes &lt;i4&gt;schemas&lt;/i4&gt; and the infamous &lt;i5&gt;ClassGen&lt;/i5&gt; generate methods on the content objects corresponding to schema fields, so that a field &lt;i6&gt;name&lt;/i6&gt; gets an accessor called &lt;i7&gt;getName()&lt;/i7&gt; and a mutator called &lt;i8&gt;setName()&lt;/i8&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;i4&gt;Schemas&lt;/i4&gt; de Arquetipos y el infame &lt;i5&gt;ClassGen&lt;/i5&gt; genera métodos en los objetos de contenido correspondientes a los campos de esquemas, y así un &lt;i6&gt;nombre&lt;/i6&gt; de campo obtiene un accessor llamado &lt;i7&gt;getName()&lt;/i7&gt; y un mutator llamado &lt;i8&gt;setName()&lt;/i8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is all rather Archetypes-specific, and in Zope 3 schemas, we typically prefer simple properties (a &lt;i9&gt;name&lt;/i9&gt; attribute) to pairs of methods.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo esto es más bien Arquetipos-específico, y en esquemas Zope 3, por lo general se prefieren propiedades simples (un atributo &lt;i9&gt;name&lt;/i9&gt;) para parear métodos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To avoid being constrained by the Archetypes when defining interfaces (Archetypes is just one implementation choice), we created &lt;i10&gt;IEmployee&lt;/i10&gt; as follows:&lt;br11&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para evitar ser restringido por Arquetipos en la definición de interfaces (Arquetipos es sólo una opción de implementación), hemos creado &lt;i10&gt;IEmployee&lt;/i10&gt; de la siguiente manera: &lt;br11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;An employee, which is also a user.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un empleado, que es también un usuario.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To support this, we could put the relevant properties into the Archetypes content object, but this is cumbersome, since the &lt;i0&gt;property()&lt;/i0&gt; declaration normally used to convert methods to properties will only work when those methods actually exist, not when they are created by &lt;i1&gt;ClassGen&lt;/i1&gt;.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para apoyar esto, podríamos poner las propiedades relevantes dentro del objeto de contenido de Arquetipos, pero esto es engorroso, ya que la declaración &lt;i0&gt;property()&lt;/i0&gt; normalmente utilizado para convertir métodos a propiedades sólo funcionará cuando esos métodos realmente existen, no cuando se crean por &lt;i1&gt;ClassGen&lt;/i1&gt;.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, we mark the content object with a marker interface, &lt;i4&gt;IEmployeeContent&lt;/i4&gt; and then register an adapter to &lt;i5&gt;IEmployee&lt;/i5&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su lugar, marcamos el objeto de contenido con una interfaz de marcador, &lt;i4&gt;IEmployeeContent&lt;/i4&gt; y luego registrar un adaptador para &lt;i5&gt;IEmployee&lt;/i5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strictly speaking, this is cheating, since the adapter makes assumptions about its context (such as which methods are available, and the fact that it uses Archetypes) that are not formally defined in the interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En un sentido estricto, esto es hacer trampa, ya que el adaptador hace suposiciones sobre su contexto (tales como los métodos disponibles, y el hecho de que utiliza Arquetipos) que no estén formalmente definidos en la interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To save excessive typing and retain some sanity in the interface definitions, it's not a terrible compromise though.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aunque para guardar un tecleado excesivo y conservar un poco de cordura en las definiciones de interfaz, no es un compromiso terrible.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the adapter, from &lt;i6&gt;membership/employee.py&lt;/i6&gt;:&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí hay un adaptador de &lt;i6&gt;membership/employee.py&lt;/i6&gt;:&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide department information.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporciona información de departamento.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, you can write:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, usted puede escribir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another side-effect of this pattern is that we can separate things that are Archetypes-dependent from things that operate on the more general notion of an employee.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Otro efecto secundario de este patrón es que podemos separar las cosas que son Arquetipos-dependiente de las cosas que funcionan en la noción más general de un empleado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, membrane generally makes assumptions about operating on Archetypes content objects, so the various membrane adapters adapt IEmployeeContent, whereas the view for charity employees is only concerned with &quot;real&quot; employees and so adapts the context to IEmployee.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, membrane en general, hace suposiciones sobre el funcionamiento en Arquetipos de objetos contenido, para que los distintos adaptadores de membrane adapten IEmployeeContent, mientras la vista para empleados de caridad sólo se responsabilice con empleados &quot;reales&quot; y así adaptar el contexto a IEmployee.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This pattern is repeated for Departments and Projects as well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este patrón se repite para Departamentos y Proyectos también.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interfaces intended for utilities and adapters</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Interfaces destinadas a utilidades y adaptadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although interface design should generally not be too concerned with how those interfaces are implemented, you will often think &quot;this is going to be used a a utility&quot; or &quot;this will most likely be an adapter&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aunque el diseño de la interfaz en general no debe preocuparse demasiado por cómo se implementan esas interfaces, a menudo se piensa &quot;esto va a ser utilizado por una utilidad&quot; o &quot;lo más probable es que esto sea un adaptador&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you may want to make some reference in the doc-string at least.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, es posible que desee hacer alguna referencia en el doc-string al menos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;i0&gt;ILocalWorkflowSelection&lt;/i0&gt; interface states:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, los estados de interfaces &lt;i0&gt;ILocalWorkflowSelection&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A selection of a local workflow for projects.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Una selección de un flujo de trabajo local para proyectos.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conversely, many interfaces are context-dependent, which means that most likely they will either be directly provided by a particular object or adaptable to it.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por el contrario, muchas interfaces son contexto-dependientes, lo que significa que lo más probable es que sean directamente suministradas por un determinado objeto o adaptable a él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take the &lt;i0&gt;IAddableTypesProvider&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tome el &lt;i0&gt;IAddableTypesProvider&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A component capable of finding addable types in a given context.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un componente capaz de encontrar tipos agregables en un contexto dado.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implication here is that client code will do something like:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La implicación aquí es que el código de cliente va a hacer algo como esto:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whether IAddableTypesProvider was provided directly by the context or (more likely) provided via an adapter is not important.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ya sea que IAddableTypesProvider fue proporcionado directamente por el contexto o (más probable) proporcionado a través de un adaptador no es importante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only time this distinction is really useful is in the case of marker interfaces, such as &lt;i0&gt;IEmployeeContent&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La única vez que esta distinción es realmente útil en el caso de las interfaces de marcador, como por ejemplo &lt;i0&gt;IEmployeeContent&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Marker interface for employee content objects&quot;&quot;&quot;&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Interfaz marcador para objetos de contenido de empleado&quot;&quot;&quot;&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are often checked with &lt;i0&gt;providedBy()&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A menudo se prueban con &lt;i0&gt;providedBy()&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># we've got an employee, good&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># bien, tenemos un empleado&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, the guiding principle here is &lt;i0&gt;separation of concerns&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más el principio líder aquí es la &lt;i0&gt;separación de responsabilidades&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The aspect of a component that can provide a list of addable types (&lt;i1&gt;IAddableTypesProvider&lt;/i1&gt;) is logically distinct from (and could be varied independently of) the aspect of a component that specifies it represents a project (&lt;i2&gt;IProject&lt;/i2&gt;), even though it so happens that at present projects are the only time we concern ourselves with restricting addable types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El aspecto de un componente que puede proporcionar una lista de tipos agregables (&lt;i1&gt;IAddableTypesProvider&lt;/i1&gt;) es lógicamente distinto (y podría ser variado de manera independiente) al aspecto de un componente que lo especifica para representar un proyecto (&lt;i2&gt;IProject&lt;/i2&gt;), aunque de casualidad pase que en proyectos actuales nos preocupamos nosotros mismos con la restricción de tipos agregables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the olden days, we would probably have put methods like &lt;i5&gt;getAvailableProjectAddableTypes() &lt;/i5&gt;into the &lt;i6&gt;Project&lt;/i6&gt; content type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el pasado, hubiéramos colocado métodos como &lt;i5&gt;getAvailableProjectAddableTypes() &lt;/i5&gt;dentro del tipo de contenido de &lt;i6&gt;Project&lt;/i6&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, you'll see why this is less optimal than having it in a separate component (hint: what if you in your customisation of b-org wanted to be much more particular about which types were addable?).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con suerte, usted verá por qué esto es menos óptimo a tenerlo en un componente separado (pista: ¿que pasa si en la personalización de b-org quisiera ser mucho más específico sobre los tipos agregables?).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will hopefully start to pick up &quot;fat&quot; interfaces during interface design - if you had a neat &lt;i7&gt;IProject&lt;/i7&gt; interface that described attributes of a project that were to be saved alongside the project object, and then found a couple of methods about defining addable types that were related to one another but not so much to the data of a project in general, you would hopefully reach for a new interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted con suerte comenzará a escoger interfaces &quot;gordas&quot; (complejas, grandes) durante el diseño de interfaces; si tenía una interfaz &lt;i7&gt;IProject&lt;/i7&gt; ordenada que describía los atributos de un proyecto que iban a ser salvados junto con el objeto de proyecto, y luego encontró un par de métodos de definición de tipos de añadibles que se relacionaban entre sí, pero no tanto con los datos de un proyecto en general, se espera que busque por una nueva interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If so - well done, you're getting there.&lt;br8&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si es así, muy bien, ya está llegando.&lt;br8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test-driven development</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desarrollo basado en pruebas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing should come first, not last, when doing development.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las pruebas deben ser lo primero, no lo último, cuando se hace el desarrollo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the greatest things that Zope 3 has established is a culture of test-driven development.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una de las mejores cosas que Zope 3 ha establecido es una cultura de desarrollo basado en pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Zope 3 components tend to be small and not dependent on a large framework or (typically) a running application server, tests are easier to write and execute faster.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Debido a que los componentes de Zope 3 tienden a ser pequeños y no dependientes de un framework de gran tamaño o (normalmente) un servidor de aplicaciones en ejecución, las pruebas son más fáciles de escribir y ejecutar con mayor rapidez.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Zope 3 testing happens in the form of testable documentation - DocTests - which tell the story of how a component should be used along with testable examples.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La mayoría de pruebas en Zope 3 ocurren en la forma de documentación comprobable, DocTests, los cuales cuentan la historia de cómo un componente se debe utilizar junto a ejemplos comprobables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;testing tutorial&lt;/a0&gt; explains the philosophy behind test-driven development and the tools and techniques available in Zope.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La &lt;a0&gt;tutorial de pruebas&lt;/a0&gt; explica la filosofía detrás del desarrollo basado en pruebas y las herramientas y técnicas disponibles en Zope.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is &lt;b1&gt;required reading&lt;/b1&gt; if you are not familiar with testing in Zope, and probably quite useful even if you are.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es una &lt;b1&gt;lectura requerida&lt;/b1&gt; si usted no está familiarizado con las pruebas en Zope, y probablemente muy útil, incluso si usted lo está. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing strategy</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estrategia de pruebas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests were (largely) written against interfaces and stub implementations, before the actual functionality was written.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las pruebas eran (en su mayoría) escritas en contra de las interfaces e implementaciones stub, antes de que la funcionalidad realmente fuera escrita.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the first test cases to be created was &lt;i0&gt;test_adapters.py&lt;/i0&gt;, which simply verifies that the various adapter registrations are in effect.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una de las primeros casos de prueba creados fue &lt;i0&gt;test_adapters.py&lt;/i0&gt;, que simplemente verifica que el adaptador de diversos registros están en efecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is obviously an integration test (using PloneTestCase), since it is verifying what happens on a &quot;normal&quot; Zope start-up.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es obviamente una prueba unitaria (utilizando PloneTestCase), ya que se puede verificar que ocurre en un arranque &quot;normal&quot; de Zope.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will also notice tests named after the three content types, &lt;i3&gt;test_department.py&lt;/i3&gt;, &lt;i4&gt;test_employee.py&lt;/i4&gt; and &lt;i5&gt;test_project.py&lt;/i5&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También puede notar pruebas nombradas en razón de tres tipos de contenido, &lt;i3&gt;test_department.py&lt;/i3&gt;, &lt;i4&gt;test_employee.py&lt;/i4&gt; y &lt;i5&gt;test_project.py&lt;/i5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these contains tests that verify the given type is available and can be instantiated and edited.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada una de estas contiene pruebas que verifican si el tipo dado está disponible y puede ser instanciado y editado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This catches errors in Archetypes registrations or schemas.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto atrapa errores en registros o esquemas en Arquetipos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are then further tests for the &lt;i6&gt;membrane &lt;/i6&gt;integration and for the adapters to the canonical interfaces &lt;i7&gt;IDepartment&lt;/i7&gt;, &lt;i8&gt;IEmployee&lt;/i8&gt; and &lt;i9&gt;IProject&lt;/i9&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces hay más pruebas para la integración de &lt;i6&gt;membrane &lt;/i6&gt;y para los adaptadores a las interfaces canónicas &lt;i7&gt;IDepartment&lt;/i7&gt;, &lt;i8&gt;IEmployee&lt;/i8&gt; y &lt;i9&gt;IProject&lt;/i9&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lastly, non-trivial methods in content types and relevant adapters are given their own test fixtures.&lt;br10&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último, métodos no-triviales en tipos de contenido y adaptadores relevantes reciben sus propias pruebas fijas.&lt;br10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By being systematic and diligent with tests, many, many bugs were caught and dealt with before they ever hit a live system.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al ser sistemático y diligente con las pruebas, muchos errores fueron capturados y tratados antes de que golpearan un sistema en línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, this does not replace in-browser acceptance testing, which was also performed regularly.&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, esto no reemplaza pruebas de aceptación en-navegador, que también se llevaba a cabo regularmente. &lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the time of writing, there are no &lt;i14&gt;zope.testbrowser&lt;/i14&gt; based functional tests for the user interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el momento de escritura de este manual, no hay pruebas funcionales basadas en &lt;i14&gt;zope.testbrowser&lt;/i14&gt; para la interfaz de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is regrettable - and this is an open source project after all, so feel free to contribute some!&lt;br15&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es lamentable; y eso que este es un proyecto de código abierto después de todo, así que siéntase libre de ¡contribuir con algunas! &lt;br15&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test set-up</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instalación de pruebas</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will find b-org's tests in the &lt;i0&gt;tests&lt;/i0&gt; module.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted encontrará pruebas b-org en el módulo &lt;i0&gt;tests&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of these use are DocTest integration tests, using PloneTestCase.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La mayoría de estas son pruebas de integración DocTest, utilizando PloneTestCase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make sure you use a recent version of PloneTestCase (or svn trunk) since there have been some recent changes in how Zope 3 components (or rather, ZCML registrations) are loaded for test runs.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Asegúrese de que utiliza una versión reciente de PloneTestCase (o trunk svn), ya que se han producido algunos cambios recientes en cómo componentes de Zope 3 (o más bien, registros ZCML) se cargan para las ejecuciones de pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The upshot is that with PloneTestCase, things should &quot;just work&quot; for integration testing - components you have defined in ZCML in your products will be loaded as they would when Zope is started.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El resultado es que con PloneTestCase, las cosas deberían &quot;simplemente trabajar&quot; para las pruebas de integración. Los componentes que ha definido en ZCML en sus productos se cargarán como lo harían cuando Zope arranca.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file &lt;i0&gt;base.py &lt;/i0&gt;contains an insulating base class for b-org tests, called &lt;i1&gt;BorgTestCase&lt;/i1&gt; and its sister-class &lt;i2&gt;BorgFunctionalTesetCase&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El archivo &lt;i0&gt;base.py &lt;/i0&gt;contiene una clase base aislante para pruebas b-org, denominadas &lt;i1&gt;BorgTestCase&lt;/i1&gt; y sus clases hermanas &lt;i2&gt;BorgFunctionalTesetCase&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When imported, this file will trigger the setup of a Plone site with the &lt;i3&gt;membrane &lt;/i3&gt;and &lt;i4&gt;borg &lt;/i4&gt;extension profiles installed, as such:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando es importado, este archivo disparará el setup de un sitio Plone con los perfiles de extensión &lt;i3&gt;membrane &lt;/i3&gt;y &lt;i4&gt;borg &lt;/i4&gt;instalados. Ejemplo:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Let Zope know about the two products we require above-and-beyond a basic&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Deje que Zope sepa sobre los dos productos que requerimos por encima y más allá de instalación&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Plone install (PloneTestCase takes care of these).&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># básica de Plone (PloneTestCase se encarga de estos).&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Import PloneTestCase - this registers more products with Zope as a side effect&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Importar PloneTestCase - esto registra más productos con Zope como un efecto secundario&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Set up a Plone site, and apply the membrane and borg extension profiles&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Instalar un sitio Plone, y los perfiles de extensión membrane y borg&lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># to make sure they are installed.&lt;br13&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># para asegurarse de que están instalados.&lt;br13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integration and unit tests</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Pruebas unitarias y de integración</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the tests are integration test that are set up like so:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La mayoría de las pruebas son pruebas de integración que se configuran así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a plain-python (no loading of Zope necessary, which is much faster) unit test for the password digest in &lt;i0&gt;test_passwords.py&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También hay una prueba python (la carga de Zope no es necesaria, lo que hace el proceso más rápido) unitaria para el digest de password (contraseña) en &lt;i0&gt;test_passwords.py&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is appropriate because the functionality under test does not depend on the Zope application server or database being loaded.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es apropiado porque la funcionalidad bajo prueba no depende del servidor de aplicaciones Zope o la base de datos que se está cargando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use plain-python (or perhaps rather, plain Zope 3) tests whenever you can to reduce interdependencies and test load times:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Use pruebas python simples (o quizá simple Zope 3) cada vez que pueda para reducir las interdependencias y los tiempos de carga de pruebas:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Check that passwords are hashed&lt;br6&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Revise que las contraseñas están ordenadas (por función hash)&lt;br6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We expect that the password will be saved as a SHA-1 digest.&lt;br8&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se espera que la contraseña se guardará como un digest SHA-1.&lt;br8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value is stored in an annotation, and there is no direct way to&lt;br19&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El valor se almacena en una anotación, y no hay forma directa de&lt;br19&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>access it (deliberately).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>acceder a él (deliberadamente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, check the annotation directly.&lt;br20&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, revise la anotación directamente.&lt;br20&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The functions &lt;i0&gt;configurationSetUp()&lt;/i0&gt; and &lt;i1&gt;configurationTearDown()&lt;/i1&gt; are defined in &lt;i2&gt;utils.py&lt;/i2&gt; and are used to load specific ZCML files that enable the test environment to function.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las funciones &lt;i0&gt;configurationSetUp()&lt;/i0&gt; y &lt;i1&gt;configurationTearDown()&lt;/i1&gt; están definidas en &lt;i2&gt;utils.py&lt;/i2&gt; y se utilizan para cargar archivos específicos ZCML que permiten que el entorno de prueba funcionen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is necessary because without PloneTestCase's integration test layer in effect, there will be no compnent registrations when the tests are run!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es necesario porque sin capa de prueba de integración PloneTestCase en efecto, ¡no habrá ningún registro de compnentes cuando se ejecutan las pruebas!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may be more cumbersome (though in reality, the same set of components tend to be used), but also allows better control over the environment in which test are run, in addition to (much) faster test execution times.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto puede ser más difícil (aunque en realidad, el mismo conjunto de componentes se suelen utilizar), pero también permite un mejor control sobre el entorno en el que la prueba se ejecuta, además de tiempos (mucho más) rápidos de ejecución de las pruebas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From &lt;i0&gt;utils.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De &lt;i0&gt;utils.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Standard options for DocTests&lt;br4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Opciones estándar para DocTests&lt;br4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Ensure that the ZCML registrations in membrane and borg are in effect&lt;br16&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Asegúrese de que los registros ZCML en membrane y borg están en efecto&lt;br16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Also ensure the Five directives and permissions are available&lt;br17&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Asegúrese también que la directivas Five y permisos están disponibles&lt;br17&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Tear down Zope 3 test environment&lt;br30&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Desmonta el ambiente de prueba Zope 3&lt;br30&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will also find a regular unit test in &lt;i0&gt;test_setup.py&lt;/i0&gt;, simply because this was quicker to write:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También encontrará una prueba regular unitaria en &lt;i0&gt;test_setup.py&lt;/i0&gt;, simplemente porque esto era más rápido para escribir:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, there is an docstring DocTest for the &lt;i0&gt;ExtensibleSchemaSupport &lt;/i0&gt;class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente hay un docstring DocTest para la clase &lt;i0&gt;ExtensibleSchemaSupport&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because this class if largely standalone (it probably shouldn't be b-org at all, but in a more general module, except Archetypes will gain similar functionality of its own for Plone 3.0) and the test provided important documentation in the class' docstring.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se debe a que esta clase es en gran parte independiente (probablemente no debería ser b-org en absoluto, pero en un módulo más general, a excepción de Arquetipos obtendrá una propia funcionalidad similar para Plone 3.0) y la prueba proporcionó documentación importante en la docstring de clase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The class looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La clase luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Mixin class to support instance-based schemas.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Clase Mixin para soportar esquemas de base-instancias.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note: you must mix this in before BaseFolder or BaseContent, e.g.:&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note: usted debe &quot;mix in&quot; (de la clase mixin) esto antes de BaseFolder o BaseContent, ejemplo:&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is based on Archetype's VariableSchemaSupport.&lt;br8&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es basado en VariableSchemaSupport de Arquetipos.&lt;br8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define a content type with a marker interface:&lt;br10&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Defina un tipo de contenido con una interfaz marcador:&lt;br10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a schema extender:&lt;br23&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cree un extensor de esquema:&lt;br23&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And the test runner, in &lt;i0&gt;test_schema.py&lt;/i0&gt;, contains:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Y el runner de prueba en &lt;i0&gt;test_schema.py&lt;/i0&gt;, contiene:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setup using GenericSetup</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configuración con GenericSetup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org uses GenericSetup to impose itself on your Plone instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org utiliza GenericSetup para imponerse a sí mismo en su instancia Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how it works.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así es como trabaja.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hands up if you have ever written a workflow definition in Python and tried to figure out how to install it in your &lt;i0&gt;Extensions.py&lt;/i0&gt; and thought, this is the least useful API I have ever had to deal with.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Levante las manos si alguna vez ha escrito una definición de flujo de trabajo en Python y trató de encontrar la manera de instalarlo en su &lt;i0&gt;Extensions.py&lt;/i0&gt; y el pensó, esta es la API menos útil con la que he tenido que tratar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Actually, the API is not that bad, it's just not very good for performing set-up.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En realidad, la API no es tan mala, simplemente no es muy buena para la realización de instalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, it may start to make your separation-of-concerns-brainwashed mind a little uneasy that we tend to define aspects of the type's configuration as class attributes in an Archetypes class (though of course it's better than using a CMF FTI dict or mangling &lt;i1&gt;portal_types&lt;/i1&gt; directly).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Del mismo modo, puede comenzar a hacer el asunto de separación de responsabilidades un poco incómodo de que tendemos a definir aspectos de la configuración del tipo como atributos de clase en una clase de Arquetipos (aunque por supuesto es mejor que usar un diccionario CMF FTI o mutilar &lt;i1&gt;portal_types&lt;/i1&gt; directamente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The fine folks who gave us the CMF came up with another way, called &lt;i0&gt;GenericSetup&lt;/i0&gt; (after a few name changes - you may see the names &lt;i1&gt;CMFSetup&lt;/i1&gt; and &lt;i2&gt;ContentSetup&lt;/i2&gt; as well, which refer to predecessors of what is not GenericSetup).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La buena gente que nos dio el CMF se le ocurrió otra forma, llamada &lt;i0&gt;GenericSetup&lt;/i0&gt; (después de algunos cambios de nombre, es posible que vea también los nombres &lt;i1&gt;CMFSetup&lt;/i1&gt; y &lt;i2&gt; ContentSetup&lt;/i2&gt;, que se refieren a los predecesores de lo que no es GenericSetup).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is based on a declarative XML syntax that can represent site configuration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se basa en una sintaxis declarativa XML que puede representar la configuración del sitio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration of an entire site is called a &lt;i3&gt;profile&lt;/i3&gt; and can be imported and exported to replicate state across multiple Plone (or CMF) sites.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La configuración de todo un sitio se llama un &lt;i3&gt;perfil&lt;/i3&gt; y se pueden importar y exportar para replicar el estado a través de múltiples sitios Plone (o CMF).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a smaller version of a profile called an &lt;i4&gt;extension profile&lt;/i4&gt; which can be used to extend a base profile.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay una versión más pequeña de un perfil llamada &lt;i4&gt;perfil de extensión&lt;/i4&gt; que puede ser utilizada para extender un perfil base.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both membrane and b-org use extension profiles to install themselves.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tanto en membrane como b-org usan perfiles de extensión para instalarse.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenericSetup is described a &lt;a0&gt;tutorial&lt;/a0&gt; by Rob Miller, cheif GenericSetup protagonist, so we won't repeat too much of the detail here.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>GenericSetup se describe en este &lt;a0&gt;tutorial&lt;/a0&gt; por Rob Miller, principal protagonista de GenericSetup, así que no repetiremos muchos de los detalles aquí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you should be aware that in Plone 2.5, GenericSetup has a slightly awkward user experience and does not have any well-defined way of performing uninstall, which stems from the fact that it was originally designed for the use case of taking a snapshot of the configuration of an entire site, not for installing and uninstalling products and extensions!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, debería estar consciente de que en Plone 2.5, GenericSetup tiene una experiencia de usuario algo torpe y no tiene ninguna forma bien definida de realizar la desinstalación, que se deriva del hecho de que fue originalmente diseñada para el caso de uso de tomar una foto rápida de la configuración de un sitio completo, ¡no para la instalación y desinstalación de productos y extensiones!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other main shortcoming at the moment is that there is no way to specify interdependencies between profiles.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La otra deficiencia principal en este momento es que no hay forma de especificar las interdependencias entre los perfiles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important that membrane is installed before b-org, but if you're not careful it will happen the other way around.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es importante que la membrane sea instalada antes de b-org, pero si no tiene cuidado va a suceder a la inversa.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you create a Plone site, you will be able to choose a number of extension profiles to apply (including meaningless ones like &lt;i0&gt;Archetypes&lt;/i0&gt; - meaningless because Plone already invokes those when you set up a site).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando crea un sitio Plone, usted podrá elegir un número de perfiles de extensión para aplicación (incluyendo aquellos sin sentido como &lt;i0&gt;Arquetipos&lt;/i0&gt;, carecen de sentido porque Plone ya los invoca cuando se configura un sitio).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this list, &quot;Base organisation&quot; comes before &quot;membrane&quot; by virtue of alphabetical sorting.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En esta lista, &quot;base organisation&quot; (&quot;Base de la organización&quot;) viene antes de &quot;membrane&quot; en virtud de clasificación por orden alfabético.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, you can't just choose both and click &quot;Add&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, no se puede simplemente elegir y hacer clic en &quot;Añadir&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, you should select &quot;membrane&quot; first, and then add &quot;Base organisation&quot; via portal_setup, as described in the b-org &lt;i1&gt;README.txt:&lt;/i1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su lugar, hay que seleccionar primero &quot;membrane&quot;, y luego añadir &quot;Base organisation&quot; a través de portal_setup, tal como se describe en el &lt;i1&gt;README.txt&lt;/i1&gt; de b-org:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Go to &lt;i0&gt;portal_setup&lt;/i0&gt; in the ZMI</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vaya a &lt;i0&gt;portal_setup&lt;/i0&gt; en la ZMI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Click the &lt;i0&gt;Properties&lt;/i0&gt; tab</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Haga clic en la pestaña de &lt;i0&gt;propiedades&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Select &quot;Base organisation&quot; as the active profile (since this is an extension profile, it won't override the base profile that set up your Plone site) and click &lt;i0&gt;Update&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Seleccione &quot;Base organisation&quot; como el perfil activo (ya que este es un perfil de extensión, no anulará el perfil base que estableció con su sitio Plone) y haga clic en &lt;i0&gt;Actualizar (Update)&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Go to the &lt;i0&gt;Import&lt;/i0&gt; tab and click &lt;i1&gt;Import all steps&lt;/i1&gt; at the bottom.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vaya a la pestaña &lt;i0&gt;Import&lt;/i0&gt; y haga clic en &lt;i1&gt;Import all steps (importar todos los steps)&lt;/i1&gt; en la parte inferior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that although it seems like this will re-install a whole bunch of stuff, it will only execute those steps that are actually listed in the &lt;i2&gt;import_steps.xml&lt;/i2&gt; for the &lt;i3&gt;active profile&lt;/i3&gt;, which in this case is b-org's.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que aunque parece que esto va a volver a instalar un montón de cosas, sólo ejecutará los steps que en realidad están listados en &lt;i2&gt; import_steps.xml &lt;/i2&gt; para el &lt;i3&gt;perfil activo&lt;/i3&gt;, que en este caso es de b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you didn't already set up membrane and you created a Plone site without the membrane extension profile, follow the same steps to install membrane &lt;i0&gt;before&lt;/i0&gt; you install b-org.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si todavía no ha configurado membrane y ha creado un sitio Plone sin el perfil de extensión de membrane, siga los mismos pasos para instalar membrane &lt;i0&gt;antes de&lt;/i0&gt; instalar b-org.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So why did we do all this?</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces ¿por qué hicimos todo esto?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Firt of all, both membrane and b-org are really infrastructure that fundamentally influence how you build your site, so the lack of uninstall isn't as bad as it would have been for more user-facing products.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero que nada, tanto membrane como b org son en realidad infraestructura que influyen esencialmente en la forma de cómo se construye su sitio, por lo que la falta de desinstalación no es tan malo como lo habría sido para otros productos que se muestran a los usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secondly, with Plone 3.0, this will become easier, as the QuckInstaller (and hence the &lt;i3&gt;Add/Remove Products&lt;/i3&gt; control panel page) becomes Extension Profile aware and gives some uninstall support.&lt;br4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En segundo lugar, con Plone 3.0, esto será más fácil, ya que el QuckInstaller (y por lo tanto la página del panel de control&lt;i3&gt; Añadir/Eliminar productos&lt;/i3&gt;) se vuelve consciente de perfil de Extensión y ofrece soporte para la desinstalación. &lt;br4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the end of this section, you will see how you can use a traditional QuickInstaller &lt;i6&gt;Install.py&lt;/i6&gt; method and still get the nice XML syntax, with a bit of extra work.&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al final de esta sección, podrá ver cómo se puede utilizar un método QuickInstaller tradicional &lt;i6&gt; Install.py &lt;/i6&gt;y aún así obtener la agradable sintaxis XML, con un poco de trabajo extra.&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Import steps</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Importar steps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To GenericSetup, the installation of a third party product via an extension profile is considered to be the &lt;i0&gt;importing&lt;/i0&gt; of that profile.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para GenericSetup, la instalación de un producto de terceros a través de un perfil de extensión es considerada el &lt;i0&gt;importing (importar)&lt;/i0&gt; de ese perfil.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A file &lt;i1&gt;import_steps.xml&lt;/i1&gt; is used to determine which actual import steps will be executed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un archivo &lt;i1&gt;import_steps.xml&lt;/i1&gt; se utiliza para determinar que steps de importación serán realmente ejecutados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we need to tell GenericSetup where the import steps are defined, though, by registering the extension profile.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar, tenemos que decirle a GenericSetup donde los steps de importación están definidos, sin embargo, al registrar el perfil de extensión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done in the product's &lt;i2&gt;__init__.py&lt;/i2&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace en el &lt;i2&gt;__init__.py&lt;/i2&gt; de productos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This references the directory &lt;i0&gt;profiles/default&lt;/i0&gt;, which contains various files:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto hace referencia al directorios &lt;i0&gt;profiles/default&lt;/i0&gt;, el cual contiene varios archivos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lists the steps to be performed during import (set-up)</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lista los steps para llevar a cabo durante la importación (set-up)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lists the steps to be performed during export - that is, if the configuration is changed in the ZODB and the site admin wishes to export the configuration to a file, these steps will be performed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Lista los steps para llevar a cabo durante la exportación, es decir, si la configuración se cambia en la ZODB y el administrador del sitio desea exportar la configuración a un archivo, estos steps se llevarán a cabo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration for membrane tools</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configuración para las herramientas de membrane</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sets up skins in portal_types</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Instala skins en portal_types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configures FTIs (Factory Type Information settings) for the content types that b-org ships with.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configura FTI (Ajustes Factory Type Information) para los tipos de contenido que vienen con b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of the types listed here has a corresponding file in &lt;i0&gt;profiles/default/types&lt;/i0&gt; (the name of the type and the name of the file should match).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cada uno de los tipos listados aquí tienen un archivo correspondiente en &lt;i0&gt;profiles/default/types&lt;/i0&gt; (el nombre del tipo y el nombre del archivo deben coincidir).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This file contains all the various FTI settings, such as friendly name, meta type, actions and aliases.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este archivo contiene todos los distintos ajustes de FTI, tales como nombre amable, tipo de meta, acciones y alias.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configures workflows.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Configura los flujos de trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works in the same way as &lt;i0&gt;types.xml&lt;/i0&gt; - the main file configures the names of the workflows and the bindings of workflows to content types.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto funciona en el mismo sentido que &lt;i0&gt;types.xml&lt;/i0&gt;. El archivo principal configura el nombre de los flujos de trabajo y los enlaces de los flujos de trabajo a los tipos de contenido. </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actual workflow definitions, including states and transitions, are found in &lt;i1&gt;profiles/default/workflows&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las definiciones de flujo de trabajo, incluyendo estados y transiciones, se encuentran en &lt;i1&gt;profiles/default/workflows&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i0&gt;import_steps.xml&lt;/i0&gt; which orchistrates all this looks like follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El &lt;i0&gt;import_steps.xml&lt;/i0&gt; que orquesta todo esto luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that we don't actually specify most of the files - they are referenced by the &lt;i0&gt;base profile&lt;/i0&gt; that was used to set up Plone or the extension profile for membrane.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que en realidad no especificamos la mayoría de los archivos. Ellos son referenciados por &lt;i0&gt;perfil base&lt;/i0&gt; que fue utilizado para configurar Plone o el perfil de extensión para membrane.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenericSetup knows all the registered profiles' steps, and looks for the corresponding files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>GenericSetup conoce todos los steps de los perfiles registrados, y busca los archivos correspondientes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various setup handlers</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Distintos controladores de setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The one setup handler you do see is the &quot;various&quot; handler.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El controlador de configuración que usted ve es el controlador &quot;various&quot;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is dependent on the set-up of type info, skins and workflow.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto depende del set-up de información de tipo, skins y flujo de trabajo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ordinarily, setup handlers will utilise GenericSetup base classes, adapters and utility functions to parse XML files.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo general, los controladores de configuración utilizarán clases GenericSetup base, adaptadores y utilidades para analizar (parse) archivos XML.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, it's not always convenient to invent a generic XML syntax for all types of configuration.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin embargo, no siempre es conveniente inventar una sintaxis XML genérica para todo tipo de configuración.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i0&gt;importVarious&lt;/i0&gt; pattern is used by many products that need to perform some custom set-up in Python.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El patrón &lt;i0&gt;importVarious&lt;/i0&gt; es utilizado por muchos productos que necesitan llevar a cabo alguna configuración personalizada en Python.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is invoked as if it were a handler for an XML file, but it just happens to have different side-effects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se invoca como si fuera un controlador para un archivo XML, pero sólo pasa que tiene diferentes efectos secundarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main caveat with this type of set-up, of course, is that it cannot symmetrically export (and then re-import) the configuration, and it is more difficult to re-use.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La advertencia principal con este tipo de set-up, por supuesto, es que no puede simétricamente exportar (y luego volver a importar) la configuración, y es más difícil de re-utilizar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;importVarious&lt;/i0&gt; looks as follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;i0&gt;importVarious&lt;/i0&gt; se ve así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Install and prioritize the project local-role PAS plug-in.&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Instale y de prioridad al plug-in PAS de rol local del proyecto&lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Add borg types to portal_factory&lt;br11&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Agregue tipos borg a portal_factory&lt;br11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Add the placeful workflow policy used by project spaces.&lt;br17&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Agregue la política placeful de flujo de trabajo utilizada por los espacios del proyectos.&lt;br17&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Import various settings.&lt;br24&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Importe varios ajustes.&lt;br24&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provisional handler that does initialization that is not yet taken&lt;br26&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Controlador provisional que realiza inicialización que todavía no ha sido&lt;br26&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>care of by other handlers.&lt;br27&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>manejada por otros controladores.&lt;br27&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We set up the PAS plugins, register our types with &lt;i0&gt;portal_factory &lt;/i0&gt;and add a placeful workflow policy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hemos creado los plugins PAS, registrado nuestros tipos con &lt;i0&gt;portal_factory&lt;/i0&gt; y agregado una política de flujo de trabajo placeful.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The exact code to perform each of these steps is not listed here to save space, but they use the same techniques you would use in an &lt;i1&gt;Install.py&lt;/i1&gt; file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código exacto para llevar a cabo cada uno de estos pasos no está listado aquí para ahorrar espacio, pero utilizan las mismas técnicas que se utilizan en un archivo &lt;i1&gt;Install.py&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the &lt;i2&gt;portal_factory&lt;/i2&gt; setup is available in a more friendly XML format in Plone 2.5.1 and later, which was released after b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que setup de &lt;i2&gt; portal_factory &lt;/i2&gt; está disponible en un formato XML más amigable en Plone 2.5.1 y posteriores, el cual fue liberado después de b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenericSetup without portal_setup</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>GenericSetup sin portal_setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Plone 3.0 arrives, it will make the &lt;i0&gt;Add/Remove Products&lt;/i0&gt; control panel aware of extension profiles, and thus provide a more user friendly way of performing install using GenericSetup.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando llegue Plone 3.0, hará que el panel de control de &lt;i0&gt;Añadir/Eliminar productos &lt;/i0&gt; sea consciente de los perfiles de extensión, y proporcionar así una manera mucho más sencilla de llevar a cabo la instalación con GenericSetup.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will also support uninstall.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También soportara la desinstalación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Until that time, however, it is possible to re-use the GenericSetup XML handlers to parse files like &lt;i1&gt;types.xml&lt;/i1&gt;Â  and &lt;i2&gt;workflow.xml&lt;/i2&gt; from a regular &lt;i3&gt;Install.py&lt;/i3&gt; installation.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hasta ese momento, sin embargo, es posible reutilizar los controladores XML de GenericSetup para analizar (parse) los archivos como &lt;i1&gt;types.xml&lt;/i1&gt; y &lt;i2&gt; workflow.xml &lt;/i2&gt; desde una instalación &lt;i3&gt; Install.py &lt;/i3&gt; regular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We do this in the &lt;i4&gt;charity&lt;/i4&gt; example.&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto lo hacemos en el ejemplo de &lt;i4&gt;caridad (charity)&lt;/i4&gt;.&lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When importing, GenericSetup requires a setup environment, and usually an object to work on.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando se está importando, GenericSetup requiere un entorno de configuración, y por lo general un objeto con el cual trabajar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple &lt;i7&gt;SetupEnviron&lt;/i7&gt; is found in &lt;i8&gt;charity/Extensions/utils.py&lt;/i8&gt;, along with a method called &lt;i9&gt;updateFTI()&lt;/i9&gt; which can take an FTI object and update its settings based on a &lt;i10&gt;types.xml&lt;/i10&gt;-like file.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un simple entorno &lt;i7&gt;SetupEnviron&lt;/i7&gt; se encuentra en &lt;i8&gt;charity/Extensions/utils.py&lt;/i8&gt;, junto con métodos llamados &lt;i9&gt;updateFTI()&lt;/i9&gt; que puede tomar un objeto FTI y actualizar sus valores en función de un archivo parecido a &lt;i10&gt;types.xml&lt;/i10&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method takes a module and the id of an FTI to update, and finds the corresponding file.&lt;br11&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este método toma un módulo y la id de un FTI para actualizar, y encuentra también el archivo correspondiente. &lt;br11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is used in &lt;i13&gt;charity/Extensions/Install.py&lt;/i13&gt; as follows:&lt;br14&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se utiliza en &lt;i13&gt;charity/Extensions/Install.py&lt;/i13&gt; de esta manera:&lt;br14&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The relevant files may be found in &lt;i0&gt;charity/Extensions/setup/types/&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los archivos relevantes se pueden encontrar en &lt;i0&gt;charity/Extensions/setup/types/&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using membrane to provide membership behaviour</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizando membrane para proporcionar comportamiento de membresía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How b-org uses membrane to let employees be users and departments be groups</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La manera en que b-org utiliza membrane para permitir que empleados sean usuarios y  departamentos sean grupos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since version 2.5, the user management infrastructure in Plone has been replaced by PAS, the Zope Pluggable Authentication Service, and PlonePAS, a Plone integration layer for this.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Desde la versión 2.5, la infraestructura de gestión de usuarios en Plone ha sido sustituida por PAS, Zope Pluggable Authentication Service (servicio de autenticación conectable Zope), y PlonePAS, una capa de integración de Plone para esto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PAS offers several advantages over plain user folders, mainly in terms of flexibility.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>PAS ofrece varias ventajas sobre las carpetas de usuario normal, sobre todo en términos de flexibilidad.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unfortunately, it is also more difficult to work with through-the-web and has a very decentralised API, based on the notion of plugin components, that can be difficult to understand at first.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por desgracia, también es más difícil trabajar a través de la web y tiene un API muy descentralizado, basado en la noción de componentes plug-in, que pueden ser difíciles de entender al principio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Membrane (or rather, &lt;i0&gt;membrane&lt;/i0&gt; with a lowercase m) is a component first developed by Plone Solutions and later improved by Rob Miller and others.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Membrane (o más bien, &lt;i0&gt;membrane /i0&gt; todo en minúscula) es un componente primero desarrollado por soluciones Plone y luego mejorada por Rob Miller, entre otros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is similar to &lt;i1&gt;CMFMember&lt;/i1&gt; in that it can turn content objects into users, although it is less concerned with replicating existing Plone functionality and more concerned with making a thin integration layer to plug into.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es similar a &lt;i1&gt;CMFMember&lt;/i1&gt; en el sentido que puede convertir objetos de contenido en usuarios, sin embargo no está tan preocupado con la funcionalidad de replicación existente de Plone y pero si por hacer una fina capa de integración para conectarse a ella.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It therefore fits b-org very well.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, ajusta b-org muy bien.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Membrane works on Archetypes objects (though theoretically it could be used with other objects as well).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Membrane en objetos de Arquetipos (aunque podía ser utilizado con otros objetos también).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It adds a tool called &lt;i0&gt;membrane_tool&lt;/i0&gt; which contains a registry of content types that are member- or group-sources, as well as a special catalog.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Agrega una herramienta llamada &lt;i0&gt;membrane_tool&lt;/i0&gt; que contiene un registro de tipos de contenido que son miembros o grupo-fuentes, así como un catálogo especial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Archetypes catalog multiplex, it is able to catalog objects (which may also be cataloged in &lt;i1&gt;portal_catalog&lt;/i1&gt;) and find them again based on various interfaces (that is, it catalogs the interfaces provided by an object).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizando el múltiplex catálogo de Arquetipos, que es capaz catalogar objetos (que también pueden estar catalogados en &lt;i1&gt;portal_catalog&lt;/i1&gt;) y encontrarlos de nuevo basado en diferentes interfaces (es decir, cataloga las interfaces proporcionadas por un objeto).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>membrane provides a number of PAS plug-ins that will search this catalog when looking for users and delegate to the content objects (or rather, adapters on the content object) for obtaining user information, performing authentication and so on.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>membrana ofrece una serie de plug-in PAS que buscarán este catálogo cuando se esté buscando por usuarios y así delegar a los objetos de contenido (o más bien, los adaptadores en el objeto de contenido) para obtener información de usuarios, realizar autenticación y así sucesivamente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Registering with membrane</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Registrando con membrane</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i0&gt;membrane_tool&lt;/i0&gt; contains an API for registering content types as membership providers, but the easiest option is to use a GenericSetup profile (see the section on GenericSetup for the full story).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;i0&gt;membrane_tool&lt;/i0&gt; contiene una API para registrar tipos de contenido como proveedores de membresía, pero la opción más sencilla es utilizar un perfil GenericSetup (vea la sección de GenericSetup para la historia completa).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;i1&gt;profiles/default/membrane_tool.xml&lt;/i1&gt;, you will find:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;i1&gt;profiles/default/membrane_tool.xml&lt;/i1&gt;, encontrará:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This registers the three content types (by their portal type), and specifies the workflow states in which they are &quot;active&quot; as member and group sources.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto registra los tres tipos de contenido (por tipo de portal), y especifica los estados de flujo de trabajo en el que son &quot;activos&quot; como miembro y fuentes de grupos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying marker interfaces</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aplicando interfaces de marcador</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When looking for content objects that provide group and member information, membrane will use a number of marker interfaces that indicate support for various types of behaviour.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al buscar objetos de contenido que proporcionan información de miembros y grupos, membrane usará un número de interfaces marcador que indica el apoyo de varios tipos de comportamiento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are implemented by the three content type classes.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos son implementados por las tres clases de tipo de contenido. &lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;i2&gt;content/department.py&lt;/i2&gt;, you will find:&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;i2&gt;content/department.py&lt;/i2&gt;, encontrará:&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A borg department.&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un departamento borg.&lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Departments can contain other employees.&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Departamentos pueden contener otros empleados.&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All this means is that the Department's schema is capable of providing properties to PAS.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo esto significa que el esquema de Departamento es capaz de proporcionar propiedades a PAS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Properties (normally related to users, but groups can have properties as well) are just metadata about the user or group.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Propiedades (normalmente relacionadas a usuarios, pero los grupos pueden tener propiedades también) son simplemente metadatos sobre el usuario o grupo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Membrane supports as PAS properties plugin that will look for Archetypes schema fields with &lt;i0&gt;member_property=True&lt;/i0&gt; set and report these back as user properties.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Membrane soporta plugin de propiedades PAS que buscará campos de esquema de Arquetipos con &lt;i0&gt;member_property=True&lt;/i0&gt; para luego establecerlas e informarlas de vuela a las propiedades de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although &lt;i1&gt;Department&lt;/i1&gt; does not use any such properties at the moment, we add this marker so that extension modules that use the schema extension mechanism can benefit from this.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aunque &lt;i1&gt;Departament&lt;/i1&gt; no utiliza tales propiedades en el momento, se añade este marcador para que los módulos de extensión que utilizan el mecanismo de extensión se puedan beneficiar de esto. &lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The equivalent setup for Employees, in &lt;i4&gt;content/employee.py&lt;/i4&gt;, is a little more interesting.&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El setup equivalente para Empleados, en &lt;i4&gt;content/employee.py&lt;/i4&gt;, es un poco más interesante.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;A borg employee.&lt;br8&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Un empleado borg.&lt;br8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Employees are also users.&lt;br10&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Empleados son también usuarios.&lt;br10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we are saying that:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí estamos diciendo que:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Employee can be used as a source of authentication (i.e. as a user), since it is marked with &lt;i0&gt;IUserAuthProvider&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un empleado puede ser utilizado como fuente de autenticación (es decir, como un usuario), ya que está marcado con &lt;i0&gt;IUserAuthProvider&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the actual authentication is performed by a different adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que en realidad la autenticación se realiza mediante un adaptador diferente.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Employee can provide user properties to PAS via membrane, following &lt;i0&gt;IPropertiesProvider&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un empleado puede proporcionar propiedades del usuario a PAS mediante membrane, siguiendo &lt;i0&gt;IPropertiesProvider&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Employee can be part of a group, because of &lt;i0&gt;IGroupsProvider&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un empleado puede ser parte de un grupo, por causa de &lt;i0&gt;IGroupsProvider&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An employee can be given roles.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A un empleado se le puede otorgar roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an &lt;i0&gt;IRolesProvider&lt;/i0&gt; interface that we cold use for basic role awareness.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay un interfaz &lt;i0&gt;IRolesProvider&lt;/i0&gt; que podríamos usar para conocimiento básico de roles.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i1&gt;IGroupAwareRolesProvider&lt;/i1&gt; is a sub-interface that will cause membrane to also look at the user's groups.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La &lt;i1&gt; IGroupAwareRolesProvider &lt;/i1&gt; es una sub-interfaz que causará que membrane también busque en los grupos de usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i0&gt;IAttributeAnnotatable &lt;/i0&gt;interface is part of Zope 3's annotations framework, discussed in a later section.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La interfaz &lt;i0&gt;IAttributeAnnotatable &lt;/i0&gt;es parte del framework de anotaciones de Zope 3, discutido en una sección posterior.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects does not require any particular marker interfaces.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proyecto no requiere ninguna interfaz marcador en particular. &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing membership behaviour</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporcionando comportamiento de membresía</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When membrane looks for objects to provide membership-related behaviour, it will not only look for objects directly providing a particular interface, but also for objects that can be &lt;i0&gt;adapted to&lt;/i0&gt; that interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando membrane busca por objetos para proporcionar comportamiento membresía-relacionado, no sólo va a buscar objetos directamente proporcionando una interfaz en particular, sino también para objetos que se pueden &lt;i0&gt;adaptar a&lt;/i0&gt; esa interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the presence of the interface &lt;i1&gt;IGroup&lt;/i1&gt; informs membrane that an object can act as a group, and contains methods that describe the members of that group.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, la presencia de la interfaz &lt;i1&gt;IGroup&lt;/i1&gt; informa a membrane que un objeto puede actuar como un grupo, y contiene métodos que describen los miembros de ese grupo.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, we could have declared that &lt;i4&gt;Department&lt;/i4&gt; implemented &lt;i5&gt;IGroup&lt;/i5&gt; and written these methods directly in the Department content object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, podríamos haber declarado que &lt;i4&gt;Departamento&lt;/i4&gt; implementó &lt;i5&gt;IGroup&lt;/i5&gt; y ha escrito estos métodos directamente en el objeto de contenido Departamento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully you'll agree now that this would not be optimal, since it mixes the content-object aspect and the group-behaviour aspect of Department into a single monolithic object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esperamos que usted ahora esté de acuerdo que esto no sería una solución óptima, ya que mezcla el aspecto del objeto-contenido y el aspecto de grupo-comportamiento de Departamento en un sólo objeto monolítico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, we will use an adapter, which also means that if you require different behaviour in an extension to b-org, you have only to override the adapter, leaving the core content object alone.&lt;br6&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su lugar, utilizaremos un adaptador, que también significa que si usted requiere un comportamiento diferente en una extensión de b-org, sólo tiene que sustituir o anular el adaptador, dejando el objeto de contenido core solo. &lt;br6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;i8&gt;membership/department.py&lt;/i8&gt;, you will see:&lt;br9&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En &lt;i8&gt;membership/department.py&lt;/i8&gt;, verá:&lt;br9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Allow departments to act as groups for contained employees&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Permita que departamentos actúen como grupos para empleados contenidos&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Get roles for this department-group.&lt;br13&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Obtenga roles para este grupo-departamento.&lt;br13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Return an empty list of roles if the department is in a workflow state&lt;br15&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Devuelva un lista vacía de roles si el departamento está en un estado de flujo de trabajo&lt;br15&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>that is not active in membrane_tool.&lt;br16&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>que no está activo membrane_tool.&lt;br16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mostly, this is about examining the Department content object to find roles (which are listed in an Archetypes field, editable by the Manager role).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En su mayoría, esto se trata de examinar el objeto de contenido Departamento para encontrar roles (los cuales están listados en un campo de Arquetipos, editables por el rol de Administrador).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When calculating roles, we make sure that we don't give roles if the Department group-source is actually disabled (by virtue of its workflow state and the settings in membrane_tool).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando se calculan roles, nos aseguramos de que no demos roles si el grupo-fuente Departamento es en realidad deshabilitado (en virtud de su estado de flujo de trabajo y los ajustes en membrane_tool).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The group title and id are taken from the object as well.&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El título del grupo y la identificación se toman del objeto también.&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most interesting method is &lt;i2&gt;getGroupMembers()&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El método más interesante es &lt;i2&gt;getGroupMembers()&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we perform a search in the &lt;i3&gt;membrane_tool&lt;/i3&gt; catalog for objects adaptable to&lt;i4&gt; IMembraneUserAuth&lt;/i4&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí, realizamos una búsqueda en el catalogo &lt;i3&gt;membrane_tool&lt;/i3&gt; por objetos adaptables a&lt;i4&gt; IMembraneUserAuth&lt;/i4&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface is the basic interface in membrane describing things that can act as users - there is an adapter from &lt;i5&gt;IUserAuthProvider&lt;/i5&gt; to &lt;i6&gt;IMembraneUserAuth&lt;/i6&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta interfaz es la interfaz básica en membrane describiendo cosas que pueden actuar como usuarios. Hay un adaptador de &lt;i5&gt; IUserAuthProvider &lt;/i5&gt; para &lt;i6&gt; IMembraneUserAuth &lt;/i6&gt; .</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We restrict this to objects inside the Department object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Nosotros restringimos esto a objetos dentro del objeto del Departamento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The net effect is that all Employee objects inside the Department are returned.&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El efecto neto es que todos los objetos empleados dentro del departamento son devueltos.&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, let's say you had a need for a Department which in addition to acting as a group for all members inside it, also allowed some members from other departments to be in that group.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Ahora, digamos que tenía una necesidad de que un departamento , además de actuar como un grupo para todos los miembros dentro de él, también permitiera que algunos miembros de otros departamentos estuvieran en él.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, you could use a schema extender to add a &lt;i9&gt;ReferenceField&lt;/i9&gt; to the schema of Department that allowed the Department owner to reference other Employees.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En este caso, usted podría utilizar un esquema de extensión para añadir un &lt;i9&gt;ReferenceField&lt;/i9&gt; al esquema de Departamento que permitiera al propietario del departamento hacer referencia a otros empleados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You would then provide an override adapter, perhaps subclassing &lt;i10&gt;Products.borg.membership.department.Group&lt;/i10&gt; but overriding &lt;i11&gt;getGroupMembers()&lt;/i11&gt; to append the ids of the referenced users as well as the contained ones ... or instead of, depending on your needs.&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Entonces usaría un adaptador de anulación, quizá haciendo subclase &lt;i10&gt;Products.borg.membership.department.Group&lt;/i10&gt; pero anulando &lt;i11&gt;getGroupMembers()&lt;/i11&gt; para añadir las id de los usuarios referenciados así como los contenidos,o en lugar de, dependiendo de sus necesidades. &lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it happens, Projects also act as groups, with members being assigned by reference, using two reference fields - one for project members, and one for project manangers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como es el caso, proyectos también actúan como grupos, con los miembros asignados por referencia, utilizando dos campos de referencia, uno para miembros del proyecto, y otro para administradores del proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the equivalent adapter from &lt;i14&gt;membership/project.py&lt;/i14&gt;:&lt;br15&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí está el adaptador equivalente de &lt;i14&gt;membership/project.py&lt;/i14&gt;:&lt;br15&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Allow projects to be groups for related members and managers&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Permita que proyectos sean grupos para miembros y administradores relacionados.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># The project does not imply any special roles *globally*, although&lt;br13&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># El proyecto no implica ningún tipo especial de  roles *globalmente*, no obstante&lt;br13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># the IWorkspace adapter above enables some local roles&lt;br14&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># el adaptador IWorkspace de arriba permite algunos roles locales&lt;br14&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As may be expected, the membrane adapters for &lt;i0&gt;Employee&lt;/i0&gt; are a bit more involved.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como podemos esperar, los adaptadores de membrane para &lt;i0&gt;Empleado&lt;/i0&gt; están un poco más involucrados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They consist of the following:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estos consisten en los siguientes:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides a user id for employees.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Proporciona una id de usuario para empleados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that user ids and user names are possibly different when PAS is used: the user id must be globally unique; the user name is the named used for logging in.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que la id de usuario y nombres de usuario son posiblemente diferentes cuando PAS es utilizado: la identificación del usuario debe ser globalmente única, el nombre de usuario es el nombre utilizado para el inicio de sesión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used to perform actual authentication by validating a supplied username and password.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para realizar la autenticación real mediante la validación de un nombre de usuario y contraseña.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used to determine which roles the particular user is given.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado para determinar cuales roles en particular se les da un usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used by membrane and Plone's UI to deal with changes to the user, such as the adding of a new user (not implemented here, since we</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Utilizado por membrane y la interfaz de usuario de Plone para hacer frente a cambios en el usuario, tales como la adición de un nuevo usuario (no se han aplicado aquí, ya que</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All these adapters are found in &lt;i0&gt;membership/employee.py&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todos estos adaptadores se encuentra en &lt;i0&gt;membership/employee.py&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i3&gt;IUserRelated&lt;/i3&gt; adapter is the simplest, as it simply invokes the user name.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El adaptador &lt;i3&gt;IUserRelated&lt;/i3&gt; es el más simple, ya que simplemente invoca el nombre de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that by default, membrane will use the Archetypes &lt;i4&gt;UID() &lt;/i4&gt;function as the user id.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que por defecto, membrane usará la función &lt;i4&gt;UID() &lt;/i4&gt; de Arquetipos como la id del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is sensible, but unfortunately Plone's UI (and that of third party products) is not always aware of the distinction between user id and user name.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es sensato, pero desgraciadamente la interfaz de usuario de Plone (y aquella de productos de terceros) no siempre es consciente de la distinción entre la identificación de usuario y el nombre de usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ideally, only the user name would ever be displayed, the user id being an internal concept, but in practice you may end up with things like member folder names that are long, unfriendly UID strings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Idealmente, sólo el nombre de usuario será mostrado, la identificación del usuario sería un concepto interno, pero en la práctica puede terminar con cosas como los nombres de carpeta de miembros que son cadenas UID largas, y poco amigables.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes this may even be unavoidable in the general case, because it's possible that two different sources of users could use the same user name for two different user ids!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A veces esto incluso podría ser inevitable en el caso general, porque es posible que dos fuentes distintas de usuarios podrían utilizar ¡el mismo nombre de usuario para dos identificaciones de usuario distintas!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the purposes of b-org, however, we assume user names are unique and well-defined.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para efectos de b-org, sin embargo, asumimos que los nombres de usuario son únicos y bien definidos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The adapter is therefore quite trivial:&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El adaptador es por lo tanto bastante trivial: &lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide a user id for employees.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporcione una id de usuario para empleados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The user id will simply be the id of the member object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La id de usuario simplemente será el identificador del objeto miembro.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This overrides the&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto sustituye el&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>use of UIDs&lt;br4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>uso de UID&lt;br4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The id of the content object that represents the employee is used as the user id.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La Id del objeto de contenido que representa el empleado se utiliza como la id del usuario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is also used as the user name, as defined in the &lt;i0&gt;IUserAuthentication &lt;/i0&gt;adapter:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto también es utilizado como el nombre de usuario, definido en el adaptador &lt;i0&gt;IUserAuthentication&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide authentication against employees.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporciona una autenticación contra empleados.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the &lt;i0&gt;verifyCredentials()&lt;/i0&gt; method, the adapter is passed the login and password as entered by the user in a dict (&lt;i1&gt;credentials&lt;/i1&gt;) and then compares those to the values stored on its context (the Employee content object).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En el método &lt;i0&gt;verifyCredentials()&lt;/i0&gt;, el adaptador revisa el usuario y la contraseña introducido por el usuario en un diccionario (&lt;i1&gt;credentials&lt;/i1&gt;) y luego los compara con los valores almacenados en su contexto respectivo (el objeto de contenido Employee).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The password is stored as a SHA1 digest in an annotation to make sure it cannot be read back by examining the content object - more on this in the section on annotations.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La contraseña se guarda como un digest SHA1 en una anotación para asegurarse de que no se puede leer de nuevo al examinar el objeto de contenido; más sobre esto en la sección de anotaciones.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Be aware also that the &lt;i2&gt;IUserAuthentication&lt;/i2&gt; adapter is called on every request after a user is logged in and can deny access for whatever reason by returning non-True.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta también que el adaptador &lt;i2&gt;IUserAuthentication&lt;/i2&gt; es llamado en cada solicitud después de que un usuario está conectado y puede denegar el acceso por cualquier motivo al devolver un non-true.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that it is important that the method is as efficient as possible - expensive database lookups, for example, are probably not a good idea here!&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto significa que es importante que el método es tan eficaz como sea posible. Búsquedas costosas de base de datos, por ejemplo, probablemente ¡no son una buena idea aquí! &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i5&gt;IUserRoles&lt;/i5&gt; adapter is trivial.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El adaptador &lt;i5&gt;IUserRoles&lt;/i5&gt; es trivial.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles are stored on the content object in a field that is editable only by managers.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los roles se almacenan en el objeto contenido en un campo que es editable sólo por administradores.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, we could have picked roles from some other rule if necessary:&lt;br6&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, podríamos haber escogido roles de alguna otra regla si era necesario: &lt;br6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide roles for employee users.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporcione roles para usuarios de empleados.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Roles may be set (by sufficiently privilged users) on the user object.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los roles pueden ser establecidos (por usuarios lo suficientemente privilegiados) en el objeto de usuario. &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i0&gt;getRoles()&lt;/i0&gt; method returns an iterable of strings representing applicable roles.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El método &lt;i0&gt;getRoles()&lt;/i0&gt; devuelve un iterable de cadenas que representan los roles que se pueden aplicar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that depending on group membership (and the &lt;i1&gt;IGroupAwareRolesProvider&lt;/i1&gt; marker as described above) and local roles the user may in fact have more roles than what this method returns!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que dependiendo de membresía del grupo (y el marcador &lt;i1&gt;IGroupAwareRolesProvider&lt;/i1&gt; como se describió anteriormente) y roles locales, ¡el usuario de hecho puede tener más roles de los que este método devuelva!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;i2&gt;IUserRoles&lt;/i2&gt; interface is concerned only with global roles intrinsic to the user.&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La interfaz &lt;i2&gt;IUserRoles&lt;/i2&gt; se preocupa sólo con roles globales intrínsecos al usuario.&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, we have the &lt;i5&gt;IMembraneUserManagement&lt;/i5&gt; adapter.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Finalmente tenemos el adaptador &lt;i5&gt;IMembraneUserManagement&lt;/i5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lets membrane know what to do when it is asked by Plone's UI to add, edit or remove users.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto permite que membrane sepa qué hacer cuando se les pregunta por la interfaz de usuario de Plone para agregar, editar o eliminar usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, the &lt;i6&gt;doChangeUser()&lt;/i6&gt; method enables the &lt;i7&gt;PasswordResetTool&lt;/i7&gt; to do its magic.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En particular, el método &lt;i6&gt;doChangeUser()&lt;/i6&gt; habilita a &lt;i7&gt;PasswordResetTool&lt;/i7&gt; para que haga su magia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that we have not implemented &lt;i8&gt;doAddUser()&lt;/i8&gt;, because there is no well-defined global policy for where the actual &lt;i9&gt;Employee&lt;/i9&gt; content object should be added!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que no hemos implementado &lt;i8&gt;doAddUser()&lt;/i8&gt;, porque no hay una política global bien definida para que el actual objeto de contenido &lt;i9&gt;Employee (empleado)&lt;/i9&gt; debería ser agregado!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recently membrane has gained some functionality whereby a site-local utility providing &lt;i10&gt;IUserAdder&lt;/i10&gt;&lt;i11&gt; &lt;/i11&gt;from membrane can be queried for this policy.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Recientemente membrane ha ganado algo de funcionalidad mediante la cual una utilidad de sitio local que está proporcionando &lt;i10&gt;IUserAdder&lt;/i10&gt;&lt;i11&gt;&lt;/i11&gt; de membrane puede ser consultada por esta política.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That may be useful for b-org extension products, but b-org is still not in a position to make a general policy for this, so it is not implemented out of the box.&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Que puede ser útil para productos de extensión b-org, pero b-org aún no está en una posición para hacer una política general de esto, por lo que no se lleva a cabo de paquete. &lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provides methods for adding deleting and changing users&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporciona métodos para agregar, eliminar y cambiar usuarios&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is an implementation of IUserManagement from PlonePAS&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este es una implementación de IUserManagement desde PlonePAS&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;This can't be done unless we have a canonical place to store users&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Esto no se puede hacer a menos que tengamos un lugar canónico para almacenar usuarios&lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>some implementations may wish to define one and implement this.&lt;br13&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>que alguna implementación pueda querer definir y así implementar esto.&lt;br13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Through these adapters, the three b-org content types are able to act as sources of groups and users.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A través de estos adaptadores, los tres tipos de contenido b-org son capaces de actuar como fuentes de grupos y usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, you will appreciate the flexibility of the separation of concerns into adapters for things like editing user properties, determining user id, calculating roles and performing authentication.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Con suerte, usted podrá apreciar la flexibilidad de la separación de responsabilidades dentro de adaptadores para cosas como la edición de propiedades del usuario, la determinación de identificación del usuario, el cálculo de roles y la realización de autenticación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you extend b-org, you can provide a more specific adapter to any of the above interfaces to customise the membership behaviour.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si extiende b-org, puede proporcionar un adaptador más específico para cualquiera de las interfaces anteriores para personalizar el comportamiento de membresía.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing a custom PAS plug-in</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Escribiendo un plug-in PAS personalizado</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects require that members are given particular local roles within a project space.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los proyectos requieren que a los miembros se les sea dado roles locales dentro de un espacio de proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is achieved using a custom PAS plug-in.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se logra utilizando una plug-in PAS personalizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PAS was introduced in the previous section on &lt;i0&gt;membrane&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>PAS fue introducido en la sección previa sobre &lt;i0&gt;membrane&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Truth be told, it can be a bit of a jungle of plug-ins and delegation because it is so very generic.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A decir verdad, puede ser algo parecido a una jungla de plug-ins y delegación porque es bastante genérico.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Luckily, Plone (and membrane) takes care of most of the complexity for us.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Afortunadamente, Plone (y membrane) se encarga de la mayoría de complejidad por nosotros.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes, however, it is desirable to influence the authentication and role management at a lower level.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A veces, sin embargo, es deseable influir en la autenticación y gestión de rol a un nivel inferior.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Workspace adapters</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Espacio de trabajo de adaptadores</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org ships with a bit of framework, adapted from some similar code in an unreleased version of &lt;i0&gt;teamspace&lt;/i0&gt; by Wichert Akkerman, which can provide local roles in a &quot;workspace&quot; - in this case a Project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org viene con un poco de framework, adaptado de un código similar en una versión no publicada de &lt;i0&gt;teamspace&lt;/i0&gt; por Wichert Akkerman, que puede proporcionar roles locales en un &quot;workspace&quot; (&quot;espacio de trabajo&quot;); en este caso un proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It relies on an adapter to the &lt;i1&gt;IWorkspace&lt;/i1&gt; interface to determine the mapping of users and roles in the particular context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Se basa en un adaptador a la interfaz &lt;i1&gt;IWorkspace&lt;/i1&gt; para determinar el mapeo de usuarios y roles en un contexto en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before showing how this plug-in is written and registered, however, let's look at how it is used by a Project.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Antes de mostrar cómo este plug-in está escrito y registrado, sin embargo, vamos a ver cómo es utilizado por un proyecto. &lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide a local role manager for projects&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporciona un gestor local de roles para proyectos&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This queries the lists of managers and members assigned (by reference) to the project and specifies that both managers and members should get the role &lt;i0&gt;TeamMember&lt;/i0&gt; and managers should also get the role &lt;i1&gt;Manager&lt;/i1&gt;.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto consulta la lista de administradores y miembros asignados (por referencia) al proyecto y especifica que los administradores y los miembros deben obtener el rol &lt;i0&gt; TeamMember &lt;/i0&gt; y los administradores también deben obtener el rol &lt;i1&gt;Manager&lt;/i1&gt;.&lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As it turns out, this behaviour is also useful in Departments, which can be given one or more department managers by reference.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como resultado, este comportamiento también es útil en departamentos, en el cual puede dar uno o más administradores de departamento por referencia.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The idea is that department managers should be allowed to add and remove Employees within that Department (recall that &lt;i4&gt;Department&lt;/i4&gt; is a folderish container for &lt;i5&gt;Employee&lt;/i5&gt; objects).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La idea aquí es que los administradores de departamento se les debería permitir agregar y remover empleados dentro de ese departamento (recordemos que &lt;i4&gt;departamento &lt;/i4&gt; es un contenedor folderish para objetos &lt;i5&gt;Empleados&lt;/i5&gt;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The analogous adapter in &lt;i6&gt;membership/department.py&lt;/i6&gt; reads:&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El adaptador análogo en &lt;i6&gt;membership/department.py&lt;/i6&gt; lee:&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Provide a local role manager for departments&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Proporciona un gestor local de roles para departamentos&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus, a container wanting to use the PAS plug-in we're about to see to manage local roles only need to be adaptable to &lt;i0&gt;IWorkspace&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por lo tanto, un contenedor que desee utilizar el plug-in PAS que estamos a punto que gestiona roles locales sólo tiene que ser adaptable a &lt;i0&gt;IWorkspace&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, this whole machinery ought to be factored out into a separate component, possibly sharing code to &lt;i1&gt;teamspace&lt;/i1&gt;, another product which provides similar functionality.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De hecho, toda esta maquinaria tiene que estar en un componente separado, posiblemente compartiendo código a &lt;i1&gt;teamspace&lt;/i1&gt;, otro producto que proporciona una funcionalidad similar.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mostly, this is down to laziness - creating another product (with all its boilerplate) and managing another dependency in the &lt;i2&gt;Products&lt;/i2&gt; folder seemed too onerous when b-org was being developed.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sobre todo, esto se debe a la pereza. Por ejemplo la creación de otro producto (con toda su repetición) y la administración de otra dependencia en la carpeta &lt;i2&gt;Products&lt;/i2&gt; parecía demasiado laborioso cuando b-org se estaba desarrollando.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hopefully, with Zope 2.10/Plone 3.0 and a growing preference for plain-Python packages and &quot;eggs&quot;, it will seem a little less of an obstacle to split products up into multiple smaller pieces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esperemos que, con Zope 2.10/Plone 3.0 y una creciente preferencia por el simples paquetes Python y  &quot;huevos&quot;, le parecerá un poco menos obstáculo para dividir los productos en múltiples piezas más pequeñas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So much for making excuses.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto en cuanto a poner excusas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plug-in</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El plug-in</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PAS plug-in that uses the &lt;i0&gt;IWorkspace&lt;/i0&gt; interface can be found in &lt;i1&gt;pas/localrole.py&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El plug-in PAS plug-in que utiliza la interfaz &lt;i0&gt;IWorkspace&lt;/i0&gt; se puede encontrar en &lt;i1&gt;pas/localrole.py&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Borrowed from Project pasification branch - written primarily by&lt;br0&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Tomado de &quot;Project pasification branch&quot; - escrito principalmente por&lt;br0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Wichert Akkerman and Copyright Amaze Internet Services&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Wichert Akkerman y Copyright Amaze Internet Services&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># This module is releasd under the Zope Public License&lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Este módulo es publicado bajo la Zope Public License&lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Add a WorkspaceLocalRoleManager to a Pluggable Authentication Services.&quot;&quot;&quot;&lt;br23&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Agregue un WorkspaceLocalRoleManager a un Pluggable Authentication Services.&quot;&quot;&quot;&lt;br23&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Find the first workspace, if any, in the acquistion chain of this&lt;br89&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Encuentre el primer espacio de trabajo, si hay alguno, en la cadena de adquisición de&lt;br89&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>este objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns a tuple obj, workspace where workspace is the adapted&lt;br90&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Devuelve un tuple obj, workspace donde workspace es lo adaptado&lt;br90&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Generator to walk the acquistion chain of object, considering that it &lt;br102&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Generador para recorrer la cadena de adquisición de objeto, teniendo en cuenta que &lt;br102&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>could be a function.&lt;br103&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>podría ser una función.&lt;br103&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Walk up the acquisition chain of the object, to be able to check&lt;br106&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Recorra la cadena de adquisición del objeto, para poder revisar&lt;br106&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># each one for IWorkspace.&lt;br107&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>#cada una para IWorkspace.&lt;br107&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># If the thing we are accessing is actually a bound method on an&lt;br109&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Si lo que estamos accediendo es en realidad un método destinado a una&lt;br109&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># instance, then after we've checked the method itself, get the&lt;br110&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># instancia, entonces luego de haber revisado el objeto mismo, obtenga la&lt;br110&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># instance it's bound to using im_self, so that we can continue to &lt;br111&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># instancia destinada a usar im_self, para que así podamos continuar a &lt;br111&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># walk up the acquistion chain from it (incidentally, this is why we &lt;br112&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># recorrer la cadena de adquisición de este (casualmente este es el por qué &lt;br112&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># can't juse use aq_chain()).&lt;br113&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># de no poder usar aq_chain()).&lt;br113&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Don't use aq_inner() since portal_factory (and probably other)&lt;br124&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># No utilice aq_inner() ya que portal_factory (y probablemente otro)&lt;br124&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># things, depends on being able to wrap itself in a fake context.&lt;br125&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>#depende de envolverse así mismo en un contexto falso.&lt;br125&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On first glance, there is quite a lot going on here, but it is not so hard to understand.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A primera vista, puede parecer que hay muchas cosas aquí, pero no es tan difícil de entender.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, we define a good old-fashioned Zope 2 factory and ZMI add form.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En primer lugar, se define una buena factory Zope 2 y el formulario de adición de ZMI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is good practice, because PAS plug-ins can be managed via &lt;i0&gt;acl_users&lt;/i0&gt; in the ZMI.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta es una buena práctica, ya que los plug-in PAS pueden ser manejados a través de &lt;i0&gt;acl_users&lt;/i0&gt; en la ZMI.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you find yourself wandering there, however, remember to bring a torch and keep a trail of breadcrumbs to find your way out.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted se encuentra vagando allí, sin embargo, recuerde llevar una antorcha y mantener un rastro de migas de pan para encontrar la salida.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A backup wouldn't hurt either if you try to change things.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una copia de seguridad no estaría mal tampoco si intenta cambiar las cosas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is, unfortunately, not the most intuitive of interfaces.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta no es, por desgracia, la interfaz más intuitiva.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will see how the plug-in is registered and activated in a moment, but first notice that the plug-in implements an interface, &lt;i3&gt;ILocalRolesPlugin&lt;/i3&gt;,Â  which is defined by PlonePAS, the PAS-in-Plone integration layer.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a ver cómo el plug-in es registrado y activado en un momento, pero primero note que el plug-in implementa una interfaz, &lt;i3&gt;ILocalRolesPlugin&lt;/i3&gt;, que se define por PlonePAS, la capa de integración de PAS-en-Plone.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This defines methods that will be called by the PAS machinery to determine, in this case, local roles.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto define los métodos que serán llamados por la maquinaria PAS para determinar, en este caso, los roles locales.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this is &lt;i4&gt;not&lt;/i4&gt; an adapter (perhaps it would have been if PAS had been invented in Zope 3, though Zope 3 has its own authentication machinery that is evolved from PAS and works slightly differently).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Note que este &lt;i4&gt;no&lt;/i4&gt; es un adaptador (tal vez lo hubiera sido si PAS se hubiera inventado en Zope 3, aunque Zope 3 tiene sus propias maquinarias de autenticación que se desprende de PAS y funciona ligeramente diferente).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When created, the &lt;i5&gt;ProjectLocalRoleManager&lt;/i5&gt; is an Zope 2 object that lives in the ZODB in &lt;i6&gt;acl_users&lt;/i6&gt;.&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando se creó, el &lt;i5&gt;ProjectLocalRoleManager&lt;/i5&gt; es un objeto Zope 2 que esta en la ZODB en &lt;i6&gt;acl_users&lt;/i6&gt;.&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The methods of the &lt;i9&gt;ILocalRolesPlugin&lt;/i9&gt; interface are fairly self-explanatory in purpose.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los métodos de la interfaz &lt;i9&gt;ILocalRolesPlugin&lt;/i9&gt; son decentemente auto-explicativos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They allow PAS to extract the local roles for a particular user in a particular context (&lt;i10&gt;getRolesInContext()&lt;/i10&gt;), to check whether a user in fact has one of the roles required to access a particular method attribute in a particular context (&lt;i11&gt;checkLocalRolesAllowed()&lt;/i11&gt;), and to get a map of users-to-roles in a particular context.&lt;br12&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Permiten que PAS extraiga los roles locales para un usuario en particular en un contexto en particular (&lt;i10&gt;getRolesInContext ()&lt;/i10&gt;), para comprobar si un usuario en realidad tiene uno de los roles necesarios para acceder a un atributo de método en particular en un contexto en particular (&lt;i11&gt;checkLocalRolesAllowed ()&lt;/i11&gt;), y para obtener un mapa de usuarios- a-roles en un contexto en particular.&lt;br12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The complex parts are, as often is the case, concerned with acquistion.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las partes complejas, como a menudo es el caso, se preocupan por adquisición.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The helper method &lt;i14&gt;_findWorkspace()&lt;/i14&gt; attempts to walk up the object hierarchy to find the first possible &lt;i15&gt;IWorkspace&lt;/i15&gt; (it will only consider one) to get hold of the appropriate &lt;i16&gt;IWorkspace&lt;/i16&gt; adapter that is then used to determine the actual roles that apply, as above.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El método de ayuda &lt;i14&gt;_findWorkspace()&lt;/i14&gt; intenta recorrer la jerarquía de objeto para encontrar el primer posible &lt;i15&gt;IWorkspace&lt;/i15&gt; (sólo considerará uno) para hacerse con el adecuado adaptador &lt;i16&gt;IWorkspace&lt;/i16&gt; que luego es utilizado para determinar las funciones reales que se aplican, como arriba.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without walking up the content hierarchy, it would not be possible to let the local roles of a particular project apply when in the context of a piece of content &lt;i17&gt;inside&lt;/i17&gt; that project (i.e. a sub-object of the folderish &lt;i18&gt;Project&lt;/i18&gt; object).</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Sin recorrer la jerarquía de contenido, no sería posible permitir que los roles locales de un determinado proyecto se apliquen cuando, en el contexto de una parte del contenido &lt;i17&gt;dentro&lt;/i17&gt; de ese proyecto (es decir, un sub-objeto del objeto &lt;i18&gt;Project&lt;/i18&gt; foldersih).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is some reasonably hairy acqusition-juggling going on in the _&lt;i19&gt;chain()&lt;/i19&gt; method to return this chain as a generator.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Hay algún decente malabarismo de adquisición abundante en el método _&lt;i19&gt;chain()&lt;/i19&gt; para devolver esta cadena como un generador.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The hairiness comes from the fact that the thing that is being checked may in fact be a method that is being accessed, and aqusition chains can get themselves in all kinds of knots, especially when Five is in the mix.&lt;br20&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La abundancia viene del hecho de que lo que se comprueba de hecho puede ser un método al cual se está accediendo, y las cadenas de adquisición pueden tener por si mismas todo tipo de nudos, especialmente cuando Five se encuentra en la mezcla. &lt;br20</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lastly, we need to declare a &lt;i22&gt;ClassSecurityInfo&lt;/i22&gt; and call &lt;i23&gt;InitializeClass&lt;/i23&gt; to get Zope 2 to play ball.&lt;br24&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último, es necesario declarar una &lt;i22&gt;ClassSecurityInfo&lt;/i22&gt; y llamar a &lt;i23&gt;InitializeClass&lt;/i23&gt; para que Zope 2 se integre al juego. &lt;br24&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Registering the plug-in</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Registrando el plug-in</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To be able to use this plug-in, we must first register it with PAS.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Para poder utilizar este plug-in, primero hay que registrarlo con PAS.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done when the product is loaded, in &lt;i0&gt;borg/__init__.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se hace cuando el producto es cargado en &lt;i0&gt;borg/__init__.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is similar to how CMF content types are initialised with &lt;i0&gt;ContentInit().initialize()&lt;/i0&gt; and &lt;i1&gt;context.registerClass().&lt;/i1&gt; In other words, copy-and-paste and the less you know the happier you will be.&lt;br2&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es similar a cómo los tipos de contenido CMF se inicializan con &lt;i0&gt;ContentInit().initialize()&lt;/i0&gt; y &lt;i1&gt;context.registerClass().&lt;/i1&gt; En otras palabras, copiar y pegar, y cuanto menos sepa será más feliz. &lt;br2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By registering the plug-in, we could now ask our users to instantiate a &lt;i4&gt;Workspace Roles Manager &lt;/i4&gt;within &lt;i5&gt;acl_users&lt;/i5&gt;....</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Al registrar el plug-in, ahora podemos pedir a nuestros usuarios que instancien un &lt;i4&gt;Workspace Roles Manager (administrador de roles en el espacio de trabajo)&lt;/i4&gt; dentro de &lt;i5&gt; acl_users &lt;/i5&gt;....</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>er... somwhere.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>en algún lado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like we said - not necessarily obvious.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Como hemos dicho; no es necesariamente obvio.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Better to do it once, in the setup code for b-org.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Es mejor hacerlo una vez en el código de configuración para b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please refer to the section on GenericSetup to learn how b-org is actually installed, but notice that the relevant code is in &lt;i6&gt;setuphandlers.py&lt;/i6&gt;:&lt;br7&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por favor refiérase a la sección de GenericSetup para aprender cómo b-org se insta, pero observe que el código relevante está en &lt;i6&gt;setuphandlers.py&lt;/i6&gt;:&lt;br7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All we do here is get hold of the factory dispatcher for the user folder (from &lt;i0&gt;manage_addProduct&lt;/i0&gt;, which has something to do with that &lt;i1&gt;registerClass&lt;/i1&gt; call for the &lt;i2&gt;WorkspaceLocalRoleManager&lt;/i2&gt; seen in the previous code example, but like we said, it's dont-ask, don't-tell) and if it is not there already, we create an instance of the plugin using the factory.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Todo lo que hacemos aquí es conseguir el despachador de factory para la carpeta de usuario (de &lt;i0&gt; manage_addProduct &lt;/i0&gt; , que tiene algo que ver con esa llamada &lt;i1&gt;registerClass&lt;/i1&gt; al &lt;i2&gt;WorkspaceLocalRoleManager&lt;/i2&gt; visto en el ejemplo anterior (pero como hemos dicho, es algo de no preguntar y no decir) y si no está allí, se crea una instancia del plug-in utilizando la factory.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We then need to activate it so that it actually takes effect.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A continuación, tiene que activarlo para que realmente surta efecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;i3&gt;out&lt;/i3&gt; is a StringIO output stream used for logging.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&lt;i3&gt;out&lt;/i3&gt; es un flujo de salida StringIO usado para inicio de sesión.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>b-org uses CMFPlacefulWorkflow, which ships with Plone 2.5, to manage the workflow of content objects inside a project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>b-org usa CMFPlacefulWorkflow, que viene con Plone 2.5, para administrar el flujo de trabajo de los objetos de contenido dentro de un proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Placeful workflows are based on the concept of policies.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los flujos de trabajo Placeful se basan en el concepto de políticas.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can think of a policy as a mapping of workflows to types, in the same way as you could control from the &lt;i0&gt;portal_workflow&lt;/i0&gt; tool.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede pensar en una política como un mapeo de flujos de trabajo para los tipos, de la misma manera como se podría controlar desde la herramienta &lt;i0&gt; portal_workflow &lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Policies are created, normally by copying an existing policy (possibly the default, global policy), and then applied to a context.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las políticas son creadas normalmente mediante la copia de una política existente (posiblemente la por defecto, la política global), para luego aplicarla a un contexto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone, this can be done using the &lt;i1&gt;policy &lt;/i1&gt;option in the &lt;i2&gt;state&lt;/i2&gt; menu.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Plone esto se puede hacer usando la opción de &lt;i1&gt;política &lt;/i1&gt;en el menú de &lt;i2&gt;estado&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Placeful workflows are used in b-org Projects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Flujos de trabajo Placeful se utilizan en proyectos b-org.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Inside a project, project members should have elevated view and modify permissions over content.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Dentro de un proyecto, los miembros del proyecto deben tener una visión elevada y modificar los permisos sobre el contenido.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is achieved using the following technique:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se logra mediante la siguiente técnica:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A new role &lt;i0&gt;TeamMember&lt;/i0&gt; is made available within any Project&lt;i1&gt;.&lt;/i1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un nuevo rol &lt;i0&gt;TeamMember&lt;/i0&gt; se hace disponible dentro de cualquier Project&lt;i1&gt;.&lt;/i1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A custom workflow, &lt;i0&gt;borg_project_default_workflow&lt;/i0&gt; is a customisation of the default Plone workflow that has a simplified set of states and actions, and is aware of the &lt;i1&gt;TeamMember&lt;/i1&gt; role.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un flujo de trabajo personalizado, &lt;i0&gt;borg_project_default_workflow&lt;/i0&gt; es una modificación del flujo de trabajo por defecto de Plone, que tiene un conjunto simplificado de los estados y acciones, y está consciente del rol &lt;i1&gt;TeamMember&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A placeful workflow policy sets the default workflow, as well as the workflow for folders, to this one.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una política de flujo de trabajo placeful establece el flujo de trabajo por defecto, así como el flujo de trabajo para las carpetas del proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a Project is created, this placeful workflow policy is enabled for the project.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Cuando un proyecto es creado, esta política de flujo de trabajo placeful está habilitada para el proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The custom workflow is defined using &lt;i0&gt;GenericSetup&lt;/i0&gt;, in &lt;i1&gt;profiles/default/workflows/borg_project_default_workflow/definition.xml&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El flujo de trabajo personalizado se define utilizando &lt;i0&gt;GenericSetup&lt;/i0&gt;, en &lt;i1&gt;profiles/default/workflows/borg_project_default_workflow/definition.xml&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can of course install your own workflow if necessary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Usted puede por supuesto instalar su propio flujo de trabajo si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The workflow policy is set up in the &lt;i2&gt;importVarious&lt;/i2&gt; setup step, in &lt;i3&gt;setuphandlers.py&lt;/i3&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La política de flujo de trabajo se configura en step setup &lt;i2&gt;importVarious&lt;/i2&gt;, en &lt;i3&gt;setuphandlers.py&lt;/i3&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Add the placeful workflow policy used by project spaces.&lt;br6&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Agregue la política de flujo de trabajo placeful utilizado por los espacios del proyecto.&lt;br6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, you could add a different policy if you needed different settings.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una vez más, usted podría añadir una política diferente si necesitase ajustes diferentes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, we apply the policy when a project is created.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por último, aplicamos la política cuando se crea un proyecto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will see how this is set up when events are covered in the next section, but the relevant code is in &lt;i0&gt;events/project.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Vamos a ver cómo se configura esto en la siguiente sección, pero el código en cuestión está en &lt;i0&gt;events/project.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Select the default local workflow policy.&lt;br9&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Seleccione la política por defecto del flujo de trabajo local.&lt;br9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local adapters or overrides may supercede this.&lt;br11&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Adaptadores locales o anuladores pueden reemplazar esto&lt;br11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Apply the local workflow for project spaces when a project is added.&lt;br20&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Aplicar el flujo de trabajo local para espacios de proyecto cuando uno es agregado.&lt;br20&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Add the TeamMember role if necessary&lt;br23&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Agregue el rol TeamMember si es necesario&lt;br23&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Note: API sucks :-(&lt;br25&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Nota: API apesta :-(&lt;br25&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Find out which workflow to use - this is looked up as a utility so&lt;br30&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Averigüe qué flujo de trabajo utilizar - esto es visto como una utilidad así&lt;br30&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># that other components can override it.&lt;br31&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># que otro componente puede sustituirlo.&lt;br31&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg># Set the placeful (local) workflow&lt;br34&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg># Establezca el flujo de trabajo (local) placeful&lt;br34&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, the local role is added to the newly created project instance (it is not made global so as not to pollute the global roles list), and the policy is associated with the contents of the (folderish) project object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí, el rol local es agregada a la instancia nueva del proyecto creada (no se hace global para no contaminar la lista de roles globales), y la política es asociada con los contenidos del objeto del proyecto (folderish).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that we do not hard-code the name of the workflow policy!</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>¡Tenga en cuenta que no hacemos código-difícil el nombre de la política de flujo de trabajo!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, we ask a utility called &lt;i0&gt;ILocalWorkflowSelection&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En lugar de esto, pedimos una utilidad llamada &lt;i0&gt;ILocalWorkflowSelection&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This could be overridden using a local utility, but the global one references the policy created above, as defined in &lt;i1&gt;DefaultLocalWorkflowSelection&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto podría ser anulado con una utilidad local, pero la global hace referencia a la política creada anteriormente, como se define en &lt;i1&gt;DefaultLocalWorkflowSelection&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This utility is registered in &lt;i2&gt;events/configure.zcml&lt;/i2&gt; as follows:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta utilidad es registrada en &lt;i2&gt;events/configure.zcml&lt;/i2&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending and handling events</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El envío y manejo de eventos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Events is undoubtedly one of the most useful things that Zope 3 brings to the Zope 2 world.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Eventos es sin duda una de las cosas más útiles que Zope 3 trae al mundo Zope 2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's how b-org uses them.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Así es como b-org los utiliza.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous section, you saw how an event handler was used to apply a placeful workflow policy to newly created projects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la sección anterior, vimos cómo un controlador de eventos se utiliza para aplicar una política de flujo de trabajo placeful a los proyectos de nueva creación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This pattern is quite powerful - instead of needing to subclass &lt;i0&gt;Project&lt;/i0&gt; just to add something to &lt;i1&gt;at_post_create_script()&lt;/i1&gt; or &lt;i2&gt;initializeArchetype()&lt;/i2&gt;, say, you simply register an appropriate event handler.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este patrón es bastante potente. En lugar de tener que hacer subclase a &lt;i0&gt;Proyecto&lt;/i0&gt; sólo para añadir algo a &lt;i1&gt;at_post_create_script()&lt;/i1&gt; o &lt;i2&gt;initializeArchetype()&lt;/i2&gt;, digamos que simplemente registra un controlador apropiado de evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This pattern can of course apply to other situations, such as when objects are modified, deleted, added to a container, or on any other type of event that may occur in your system.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este patrón se puede, por supuesto, aplicar a otras situaciones, tal como cuando los objetos son modificados, borrados, añadidos a un contenedor, o en cualquier otro tipo de evento que pueda ocurrir en su sistema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Events are synchronous, so when code emits an event, it will block until all event handlers are finished.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Los eventos son sincrónicos, por lo que cuando el código emite un evento, se bloqueará hasta que todos los controladores de eventos finalicen.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall the event handler for adding projects.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Recordemos el controlador de eventos para la adición de proyectos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can be found in &lt;i0&gt;events/project.py&lt;/i0&gt; and has the following signature:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este puede ser encontrado en &lt;i0&gt;events/project.py&lt;/i0&gt; y tiene la siguiente firma:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first argument is the object the event was fired on, the second is an instance of the event itself.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El primer argumento es el objeto sobre el cual el evento fue disparado, el segundo es una instancia del evento en sí.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, this two-part event dispatcher is a special case of events described with &lt;i0&gt;IObjectEvent&lt;/i0&gt; and its sub-interfaces.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>De hecho, este despachador de evento de dos partes es un caso especial de los eventos descritos con &lt;i0&gt;IObjectEvent&lt;/i0&gt; y sus sub-interfaces.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internally, Zope 3 catches all &lt;i1&gt;IObjectEvent&lt;/i1&gt;s and re-dispatches the event based on the object that is passed along the event instance.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Internamente, Zope 3 atrapa todos los &lt;i1&gt;IObjectEvent&lt;/i1&gt; y re-envía el evento basado en el objeto que se pasa a lo largo de la instancia del evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The registration for the event handler in &lt;i2&gt;events/configure.zcml&lt;/i2&gt; looks like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El registro para el controlador de evento en &lt;i2&gt;events/configure.zcml&lt;/i2&gt; luce así:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that there are two interfaces the subscriber is registered &lt;i0&gt;for&lt;/i0&gt; - the object type and the event type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Tenga en cuenta que hay dos interfaces en las que el suscriptor está registrado &lt;i0&gt;for&lt;/i0&gt;. El tipo de objeto y el tipo de evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These must be separated by whitespace, though a newline like above is customary.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Estas deben estar separadas por espacios en blanco, sin embargo, una nueva línea como la de arriba es una costumbre.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the same syntax that is used to explicitly define multi-adapters (if you are not using the &lt;i1&gt;adapts()&lt;/i1&gt; syntax in an adapter class) - in fact, the events machinery uses the adapter registry internally to map subscribers to events when they are fired.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esta es la misma sintaxis que se utiliza para definir explícitamente múlti-adaptadores (si no está utilizando la sintaxis &lt;i1&gt;adapts()&lt;/i1&gt; en una clase de adaptador). De hecho, la maquinaria de eventos utiliza el registro del adaptador internamente para mapear suscriptores a eventos cuando son disparados.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A more general-case event can be found in &lt;i0&gt;events/employee.py&lt;/i0&gt;, which takes care of assigning ownership of an &lt;i1&gt;Employee&lt;/i1&gt; object to the user that is tied to that employee.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un evento de caso más general se puede encontrar en &lt;i0&gt;events/employee.py&lt;/i0&gt;, que se encarga de la propiedad de asignación de un objeto &lt;i1&gt;Employee&lt;/i1&gt; al usuario está atado a ese empleado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code is borrowed and adapted from &lt;i2&gt;PloneTool&lt;/i2&gt;, but notice the signature which only includes the event:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código está tomado y adaptado de &lt;i2&gt;PloneTool&lt;/i2&gt;, pero observe la firma que sólo contiene el evento:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Let employees own their own objects.&lt;br1&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Deje que los empleados sean dueños de sus propios objetos.&lt;br1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stolen from Plone and CMF core, but made less picky about where users are &lt;br3&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Robado de Plone y core de CMF, pero hechos menos exigentes sobre que usuarios son &lt;br3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>found.&lt;br4&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>encontrados.&lt;br4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The registration in &lt;i0&gt;events/onfigure.zcml &lt;/i0&gt;is similar to the one above, but only uses one &lt;i1&gt;for&lt;/i1&gt; interface:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El registro en &lt;i0&gt;events/onfigure.zcml &lt;/i0&gt;es similar al de arriba, pero sólo utiliza una interfaz &lt;i1&gt;for&lt;/i1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending custom events</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Enviar eventos personalizados</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will notice that the &lt;i0&gt;IEmployeeModifiedEvent&lt;/i0&gt; is a custom event.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Notará que el &lt;i0&gt;IEmployeeModifiedEvent&lt;/i0&gt; es un evento personalizado.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Plone 3.0 (or rather, Archetypes 1.5) this won't be necessary, because Archetypes will take care of sending an event derived from &lt;i1&gt;IObjectModifiedEvent&lt;/i1&gt;, which in turn derives from &lt;i2&gt;IObjectEvent&lt;/i2&gt; and thus is subject to the same registration as the &lt;i3&gt;IObjectAddedEvent&lt;/i3&gt; that includes the object type and the event type.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En Plone 3.0 (o más bien Archetypes (Arquetipos) 1.5) esto no será necesario, ya que Arquetipos se encargará de enviar un evento derivado &lt;i1&gt;IObjectModifiedEvent&lt;/i1&gt;, que a su vez se deriva de &lt;i2&gt;IObjectEvent&lt;/i2&gt; y por lo tanto es sujeto al mismo registro que &lt;i3&gt;IObjectAddedEvent&lt;/i3&gt; que incluye el tipo de objeto y el tipo de evento.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For now, though, we need to send the event ourselves.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ahora, sin embargo, tenemos que enviar el objeto a nosotros mismos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The event is described by an interface in &lt;i0&gt;interfaces/employee.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El evento se describe por una interfaz en &lt;i0&gt;interfaces/employee.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;An event fired when an employee object is saved.&lt;br5&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;un evento disparado cuando un objeto de empleado es guardado.&lt;br5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The implementation is trivial, and can be found in &lt;i0&gt;content/employee.py&lt;/i0&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>La implementación es trivial, y puede ser encontrada en &lt;i0&gt;content/employee.py&lt;/i0&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Event to notify that employees have been saved.&lt;br9&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Evento para notificar que los empleados han sido guardados.&lt;br9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is of course the event &lt;i0&gt;class&lt;/i0&gt; that we instantiate and send, whilst we register the event handler for the event &lt;i1&gt;interface&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, es el evento &lt;i0&gt;class&lt;/i0&gt; que instanciamos y enviamos, a la vez que registramos el controlador de eventos para la &lt;i1&gt;interfaz&lt;/i1&gt; de eventos.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that we could provide alternative implementations for the same event interface, if need be.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto significa que podríamos proporcionar implementaciones alternativas para la misma interfaz de evento, si es necesario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also means that event handlers subscribed for a parent interface will be invoked for events that provide a sub-interface.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>También significa que los controladores de eventos suscritos para una interfaz padre serán invocados para eventos que proporcionen una sub-interfaz.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sending the event is very simple.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Enviar el evento es bastante sencillo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the definition of &lt;i0&gt;Employee&lt;/i0&gt; in &lt;i1&gt;content/employee.py&lt;/i1&gt;, we have:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En la definición de &lt;i0&gt;Employee&lt;/i0&gt; en &lt;i1&gt;content/employee.py&lt;/i1&gt;, tenemos:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Notify that the employee has been saved.&lt;br10&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Notifique que el empleado ha sido guardado.&lt;br10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&quot;&quot;&quot;Notify that the employee has been saved.&lt;br16&gt;</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>&quot;&quot;&quot;Notifique que el empleado ha sido guardado.&lt;br16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We construct an event instance and parameterise it with the right object (i.e. self) before sending it with &lt;i0&gt;notify()&lt;/i0&gt;, all on one line.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Construimos una instancia de eventos y le damos parámetros con el objeto correcto (es decir, self) antes de enviarlo con &lt;i0&gt;notify()&lt;/i0&gt;; todo en una línea.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is often useful to be able to attach information to an object even if you don't have control over that object's type and schema.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>A menudo es útil para poder adjuntar la información a un objeto, incluso si usted no tiene control sobre el tipo de ese objeto y esquema.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a tagging solution may attach a list of tags to an object, or a notification tool may want to add a list of subscribers on a per-object basis.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por ejemplo, una solución de etiquetado puede adjuntar un lista de etiquetas a un objeto, o una herramienta de notificación puede querer añadir una lista de suscriptores sobre una base por-objeto.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is known in Zope 3 as &quot;annotations&quot;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto se conoce en Zope 3 como &quot;anotaciones&quot; (&quot;annotations&quot;).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Annotations work like this:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Las anotaciones trabajan de la siguiente manera:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A marker interface, normally &lt;i0&gt;IAttributeAnnotatable&lt;/i0&gt; is applied to the class or object that is to be annotated.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Una interfaz marcador, normalmente &lt;i0&gt;IAttributeAnnotatable&lt;/i0&gt; es aplicada a la clase o objeto que va a ser anotada.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This particular marker means that annotations are stored in a persistent dict called &lt;i1&gt;__annotations__&lt;/i1&gt; that is added to the object, though this should be considered an implementation detail.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Este marcador en particular, significa que las anotaciones se almacenan en un diccionario persistente llamado &lt;i1&gt;__annotations__&lt;/i1&gt; que es agregado al objeto, aunque esto debería considerar como un detalle de implementación.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An adapter exists from &lt;i0&gt;IAttributeAnnotable &lt;/i0&gt;to &lt;i1&gt;IAnnotations&lt;/i1&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Un adaptador existe de &lt;i0&gt;IAttributeAnnotable &lt;/i0&gt;para &lt;i1&gt;IAnnotations&lt;/i1&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need a different annotation regime (e.g. one that stores the values keyed by object id in some local utility) you could provide a different adapter to &lt;i2&gt;IAnnotations&lt;/i2&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Si usted necesita un régimen de anotación diferente (por ejemplo, una que almacene los valores llave de identificación del objeto, en algunas utilidades locales) usted podría proporcionar un adaptador diferente a &lt;i2&gt;IAnnotations&lt;/i2&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code that wishes to annotate an object will adapt it to &lt;i0&gt;IAnnotations&lt;/i0&gt;.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El código que desea anotar un objeto lo adaptará a &lt;i0&gt;IAnnotations&lt;/i0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The annotations adapter acts like a dict.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El adaptador de anotaciones actúa como un diccionario.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conventionally, each package that uses annotations will store all its (arbitrary) information under a particular key in that dict.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Convencionalmente, cada paquete que utiliza anotaciones almacenará toda su información (arbitraria) bajo una llave particular en ese dict (diccionario).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The key name is normally the same as the name of the package.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>El nombre de llave es normalmente el mismo que el nombre del paquete.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is mainly to avoid conflicts between different packages annotating a particular object.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto es principalmente para evitar conflictos entre los diferentes paquetes anotando un objeto en particular.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In b-org, we don't have quite the same need for annotating objects from other parts of Plone, but we use annotations to store users' passwords.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En b-org, no tenemos realmente la misma necesidad para la anotación de objetos desde otras partes de Plone, pero utilizamos anotaciones para almacenar contraseñas de usuarios.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ensures that they cannot be accessed through-the-web (since Zope 2 won't publish the &lt;i0&gt;__annotations__&lt;/i0&gt; dict, as it begins with an underscore) and keeps passwords out of the way.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Esto asegura que no se puede acceder a través de la web (ya que Zope 2 no publicará el dict &lt;i0&gt;__annotations__&lt;/i0&gt;, porque comienza con un guión bajo), y mantiene las contraseñas fuera del camino.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strictly speaking, this is probably overkill since the password is also hashed using the SHA1 one-way hasing algorithm, but that never stopped anyone before.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>En sentido estricto, esto es algo excesivo ya que la contraseña es también ordenada con el algoritmo SHA1 de un-sentido, pero que nunca detuvo a nadie antes.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, look at the definition of the &lt;i0&gt;Employee&lt;/i0&gt; class in &lt;i1&gt;content/employee.py&lt;/i1&gt;:</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Primero, observe la definición de la clase &lt;i0&gt;Employee&lt;/i0&gt; en &lt;i1&gt;content/employee.py&lt;/i1&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, we explicitly say that Employee is attribute annotatable.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Aquí, explícitamente decimos que Employee es un atributo anotable.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, this requires control over the class.</seg>
      </tuv>
      <tuv lang="ES-VE">
        <seg>Por supuesto, esto requiere control sobre la clase.</seg>
      </tuv>
    </tu>
  </body>
</tmx>
