.. -*- coding: utf-8 -*-

===========================
Rotar archivos .log de Zope
===========================

.. contents :: :local:

Introducción
============

Este es una configuración básica de `buildout`_ que explica como configurar 
tarea de crontab de rotación de archivos log, para esto usará la misma configuración 
del paquete Zope en Debian GNU/Linux que entenderá el programa crontab para realizar esta tarea.

Instalación
===========

Dentro de su directorio de buildout debe crear los la siguiente estructura de archivos:

.. code-block:: sh

  $ mkdir ./templates ; mkdir ./etc ; 

Luego creamos una plantilla del archivo de configuración crontab:

.. code-block:: sh

  $ vim ./templates/logrotate.conf.tmpl

Y debe agrega la siguiente configuración al archivo ``logrotate.conf.tmpl`` :

.. code-block:: sh

  ## Logrotate configuration file fo Zope Debian package
  ## /etc/logrotate.d/zope2.10
  
  ${buildout:directory}/var/log/instance.log ${buildout:directory}/var/log/instance-Z2.log {
      rotate 52
      weekly
      create
      compress
      delaycompress
      sharedscripts
      postrotate
          /bin/kill -USR2 $(cat ${buildout:directory}/var/instance.pid)
          ${buildout:bin-directory}/instance logreopen
      endscript
  }


Ahora edite su archivo de configuración ``buildout.cfg`` y agregue nuevas secciones como se muestra a continuación:

.. code-block:: cfg

  [buildout]

  ...

  parts =
      logrotate
      logrotate-daily

  ...

  # Este récipe ayuda a inicializar un archivo de configuración de logrotate
  # Para mayor información ver http://pypi.python.org/pypi/collective.recipe.template
  [logrotate]
  recipe = collective.recipe.template
  input = ${buildout:directory}/templates/logrotate.conf.tmpl
  output = ${buildout:directory}/etc/logrotate.conf

  # Este récipe ayuda a configurar una tarea de crontab de rotación de archivos log.
  # Para mayor información ver http://pypi.python.org/pypi/z3c.recipe.usercrontab
  [logrotate-daily]
  recipe = z3c.recipe.usercrontab
  times = 0 6 * * *
  command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate:output}


Ahora ejecuta el comando buildout con el argumento ``-v`` (verbose mode), esto ayudará a que
muestre todo los detalles de la construcción del mismo.

.. code-block:: sh

  $ ./bin/buildout -v


Muestre la lista de las tareas del programa ``crontab`` con el siguiente comando:

.. code-block:: sh

  $ crontab -l

  # Generated by /home/macagua/Plone/zinstance [logrotate-daily]
  0 6 * * *	/usr/sbin/logrotate --state /home/macagua/Plone/zinstance/var/logrotate.status /home/macagua/Plone/zinstance/etc/logrotate.conf
  # END /home/macagua/Plone/zinstance [logrotate-daily]



Y de esta forma podrá ver registrado la tarea de rotas los archivos semanalmente.


Descarga código fuente
======================

Para descargar el código fuente de este ejemplo ejecute el siguiente comando:

.. code-block:: sh

  $ svn co https://svn.plone.org/svn/collective/spanishdocs/trunk/src/buildout/leccion3 rotar-log-zope


Referencias
===========

-  `Buildout - How to maintain big app stacks without losing your mind`_.


.. _buildout: http://coactivate.org/projects/ploneve/replicacion-de-proyectos-python
.. _Hola Mundo: http://es.wikipedia.org/wiki/Hola_Mundo
.. _pip: http://coactivate.org/projects/ploneve/distribute-y-pip
.. _entorno virtual: http://coactivate.org/projects/ploneve/creacion-de-entornos-virtuales-python
.. _Makefile: http://es.wikipedia.org/wiki/Makefile
.. _Apache Ant: http://es.wikipedia.org/wiki/Apache_Ant
.. _Buildout - How to maintain big app stacks without losing your mind: http://www.slideshare.net/djay/buildout-how-to-maintain-big-app-stacks-without-losing-your-mind
.. _zc.buildout: http://coactivate.org/projects/ploneve/replicacion-de-proyectos-python
